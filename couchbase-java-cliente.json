{"name":"couchbase-java-client","commits":[{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Raghavan Srinivas","committerEmail":"rags@acm.org","committerTimeZone":"GMT-05:00","numberOfBranches":0,"hash":"31f14b3b541cf1322f76683ff93947389a92f39b","msg":"First commit\n\n* Transferred all of the Couchbase code from spymemcached\n  into this project\n* Updated build files to properly build the project\n* Fixed errors in project to allow it to build\n* Fixed check style errors\n\nChange-Id: Id736de65fb83f9aa4f0a4a7adbbbb396ebf0ef76","modifiedFiles":[".gitignore","build.xml","etc/checkstyle-java-header.txt","etc/checkstyle-noframes.xsl","etc/checkstyle.xml","ivy.xml","ivy/ivysettings.xml","ivy/libraries.properties","ivy/membase-client-test.xml","ivy/membase-client.xml","lib/ant-contrib-1.0b3.jar","lib/ant-eclipse-1.0-jvm1.2.jar","src/main/java/net/spy/memcached/MembaseClient.java","src/main/java/net/spy/memcached/MembaseClientIF.java","src/main/java/net/spy/memcached/MembaseConnection.java","src/main/java/net/spy/memcached/MembaseConnectionFactory.java","src/main/java/net/spy/memcached/MembaseConnectionFactoryBuilder.java","src/main/java/net/spy/memcached/StoreType.java","src/main/java/net/spy/memcached/TapClient.java","src/main/java/net/spy/memcached/TapConnectionProvider.java","src/main/java/net/spy/memcached/TapMessagePrinter.java","src/main/java/net/spy/memcached/vbucket/BucketMonitor.java","src/main/java/net/spy/memcached/vbucket/BucketMonitorPipelineFactory.java","src/main/java/net/spy/memcached/vbucket/BucketUpdateResponseHandler.java","src/main/java/net/spy/memcached/vbucket/ConfigurationException.java","src/main/java/net/spy/memcached/vbucket/ConfigurationProvider.java","src/main/java/net/spy/memcached/vbucket/ConfigurationProviderHTTP.java","src/main/java/net/spy/memcached/vbucket/ConnectionException.java","src/main/java/net/spy/memcached/vbucket/Reconfigurable.java","src/main/java/net/spy/memcached/vbucket/ReconfigurableObserver.java","src/main/java/net/spy/memcached/vbucket/VBucketNodeLocator.java","src/main/java/net/spy/memcached/vbucket/config/Bucket.java","src/main/java/net/spy/memcached/vbucket/config/CacheConfig.java","src/main/java/net/spy/memcached/vbucket/config/Config.java","src/main/java/net/spy/memcached/vbucket/config/ConfigDifference.java","src/main/java/net/spy/memcached/vbucket/config/ConfigFactory.java","src/main/java/net/spy/memcached/vbucket/config/ConfigParsingException.java","src/main/java/net/spy/memcached/vbucket/config/ConfigType.java","src/main/java/net/spy/memcached/vbucket/config/ConfigurationParser.java","src/main/java/net/spy/memcached/vbucket/config/ConfigurationParserJSON.java","src/main/java/net/spy/memcached/vbucket/config/DefaultConfig.java","src/main/java/net/spy/memcached/vbucket/config/DefaultConfigFactory.java","src/main/java/net/spy/memcached/vbucket/config/Node.java","src/main/java/net/spy/memcached/vbucket/config/Pool.java","src/main/java/net/spy/memcached/vbucket/config/Port.java","src/main/java/net/spy/memcached/vbucket/config/Status.java","src/main/java/net/spy/memcached/vbucket/config/VBucket.java","src/scripts/write-version-info.sh","src/test/java/net/spy/memcached/MembaseClientTest.java","src/test/java/net/spy/memcached/TapTest.java","src/test/java/net/spy/memcached/VBucketMembaseClientTest.java","src/test/java/net/spy/memcached/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/net/spy/memcached/vbucket/BucketMonitorTest.java","src/test/java/net/spy/memcached/vbucket/BucketObserverMock.java","src/test/java/net/spy/memcached/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/net/spy/memcached/vbucket/ConfigurationProviderHTTPDownNodeTest.java","src/test/java/net/spy/memcached/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/net/spy/memcached/vbucket/MemcachedNodeMockImpl.java","src/test/java/net/spy/memcached/vbucket/ReconfigurableMock.java","src/test/java/net/spy/memcached/vbucket/VBucketCacheNodeLocatorTest.java","src/test/java/net/spy/memcached/vbucket/VBucketNodeLocatorTest.java","src/test/java/net/spy/memcached/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/net/spy/memcached/vbucket/config/ConfigurationParserMock.java"],"date":1321644785000,"numberOfModifiedFiles":63},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"776b2747efcf089eb642c04c6c5c830f025d2a7e","msg":"Remove checks for Membase in test cases\n\nThis client should always work with Membase and Couchbase\nso we do not need to check the server type.\n\nChange-Id: Iad899a4593795737f8d74eb6b088168207f003a3\nReviewed-on: http://review.couchbase.org/12150\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/test/java/net/spy/memcached/MembaseClientTest.java","src/test/java/net/spy/memcached/TapTest.java"],"date":1326061036000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3501d8cbb3dbd6b4ad6801478e6ac065a98542fa","msg":"When adding ops we now use enqueueOperation()\n\naddOp() was removed from MemcachedClient and into memcachedConnection\nand then renamed to enqueueOperation. This change makes it so we\nnow use the new function.\n\nChange-Id: I2f2431194a1d417a8540e8fb5e5f1a93bdbe3b0a\nReviewed-on: http://review.couchbase.org/12151\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/net/spy/memcached/MembaseClient.java","src/main/java/net/spy/memcached/TapConnectionProvider.java"],"date":1326053866000,"numberOfModifiedFiles":2},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"702ee8c6d2fd822a9179834454eb4d4adb356c32","msg":"Changed package namespace to com.couchbase.client\n\nChange-Id: Idd6454bd6574a9337528281df912f51a9fda52ad\nReviewed-on: http://review.couchbase.org/12050\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/StoreType.java","src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/TapMessagePrinter.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactory.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationException.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/ConnectionException.java","src/main/java/com/couchbase/client/vbucket/Reconfigurable.java","src/main/java/com/couchbase/client/vbucket/ReconfigurableObserver.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java","src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/Config.java","src/main/java/com/couchbase/client/vbucket/config/ConfigDifference.java","src/main/java/com/couchbase/client/vbucket/config/ConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/ConfigParsingException.java","src/main/java/com/couchbase/client/vbucket/config/ConfigType.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParser.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/Node.java","src/main/java/com/couchbase/client/vbucket/config/Pool.java","src/main/java/com/couchbase/client/vbucket/config/Port.java","src/main/java/com/couchbase/client/vbucket/config/Status.java","src/main/java/com/couchbase/client/vbucket/config/VBucket.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/VBucketMembaseClientTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java","src/test/java/com/couchbase/client/vbucket/BucketObserverMock.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPDownNodeTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java","src/test/java/com/couchbase/client/vbucket/ReconfigurableMock.java","src/test/java/com/couchbase/client/vbucket/VBucketCacheNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java"],"date":1325710084000,"numberOfModifiedFiles":51},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4e31d3b103c7182b3eb47253ed8ede53bf3878cc","msg":"Added option to selectively run tests for CI\n\nChange-Id: I391d2e967e56b01cd8d88e73a95e50549422873b\nReviewed-on: http://review.couchbase.org/12096\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1325829879000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"21d74be7048055d792758edb7f7115c902ae738f","msg":"More membase to couchbase refactoring changes\n\nChanged some more occurences (affects javadocs and log messages)\nAlso added/renamed VBucketCouchbaseClientTest.java which I missed.\n\nChange-Id: I9ec314dd2ac65cb904bed978710835135e2a0ac9\nReviewed-on: http://review.couchbase.org/12160\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["build.xml","ivy/membase-client-test.xml","ivy/membase-client.xml","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationException.java","src/main/java/com/couchbase/client/vbucket/config/ConfigType.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java"],"date":1326086981000,"numberOfModifiedFiles":16},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"47722b00efd2de766c36819d556044223259bc79","msg":"Refactored the tap client to run correctly\n\nWhen we originally broke up Spymemcached and created this\nproject we left the tap client in a broken state. This change\nmakes the tap client function correctly and reenables the test\ncases that were commented out.\n\nChange-Id: Ic23bc0599038893a8ae63d50bec3529a15cc6b1b\nReviewed-on: http://review.couchbase.org/12159\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/test/java/com/couchbase/client/TapTest.java"],"date":1326078627000,"numberOfModifiedFiles":3},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8144ac5a0b8e336c4dbfa49d4a9e3ab214f6950c","msg":"Don\u0027t check for null ConnectionProvider on shutdown\n\nThis should never be null in CouchbaseClient. It is leftover\ncode from the project split.\n\nChange-Id: Ib6ec24de33ad897d81729dc87624c558fe6c1967\nReviewed-on: http://review.couchbase.org/12285\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1326316600000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d9be8695ce6ca4d85df93c8936ef6b246e3f6ec9","msg":"Rename files used for pom file generation\n\nThese files still had the membase in the name so I changed them to\nhave couchbase in the name.\n\nChange-Id: I4d1cf095093f72f9de4b19ffa3c92dfc92d930c3\nReviewed-on: http://review.couchbase.org/12384\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy/couchbase-client-test.xml","ivy/couchbase-client.xml"],"date":1326664333000,"numberOfModifiedFiles":2},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b00f8207b5ab5e34e5f6df51b21d3f191181905e","msg":"Corrected BuildInfo and other metadata.\n\nChange-Id: I34b46bc01ec94696dd7d75ea55e5fe5f471e00f5\nReviewed-on: http://review.couchbase.org/12577\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml","ivy/couchbase-client.xml","src/scripts/write-version-info.sh"],"date":1327223505000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5a325712141992958aa10c169d92d27e5aa0cdb3","msg":"Changes to stage Maven repository locally\n\nAdded a target mvn-stage to stage repository to {user.home}/mvn-stage\n\nBased on http://draconianoverlord.com/2010/07/18/publishing-to-maven-repos-with-ivy.html\n\nChange-Id: Ib71d9ab41abd7fe4a396fc6e0cab8e56edc99e46\nReviewed-on: http://review.couchbase.org/12576\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml","ivy.xml","ivy/couchbase-client-test.xml","ivy/couchbase-client.xml","ivy/ivysettings.xml"],"date":1327133483000,"numberOfModifiedFiles":5},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c7ebfe50c83c1692ed6841637b86c8dbb1cebae3","msg":"Corrected stage of maven artifacts to properly include source/docs.\n\nChange-Id: Ife95d2f4b1033caa34e6defae4f7339c3a8a82bc\nReviewed-on: http://review.couchbase.org/12578\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml","ivy.xml"],"date":1327229801000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e047c66b70564f4d1e6cfa3b2f22530a944bda41","msg":"Updated libraries.properties to go with 2.8.0 release.\n\nChange-Id: Id41f575ed0b3b9a50d096a5d77754d911ca1312e\nReviewed-on: http://review.couchbase.org/12583\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1327255591000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"61e9afe2f21766bf0273274066546266c2b59284","msg":"Fixed issue where everything was getting hashed to vb 0\n\nThe node locator types here are backwards and will cause\neverything to be written to and read from vbucket 0.\n\nChange-Id: Ia12887f75748ce0fcf5f3fcf5c11bdd3436cea72\nReviewed-on: http://review.couchbase.org/12674\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1327527260000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e4bfb93653067162c0e9fd9e5127bdf2efb1a7bd","msg":"Uncomment the resolver for the Couchbase maven repo\n\nChange-Id: If110e8fe50157411ea0fa81d63b062e577482fc8\nReviewed-on: http://review.couchbase.org/12688\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy/ivysettings.xml"],"date":1327547073000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"89717bf80243583a9d214ac2da5bc9b28479b729","msg":"Use the master configuration for spymemcached jars\n\nThis will solve the issue where we were importing jmx\nand other things that were not needed.\n\nChange-Id: I2d30d058a57a696e8de196224e568c0e28f477ca\nReviewed-on: http://review.couchbase.org/12689\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy.xml"],"date":1327547183000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b5d59c10cf790b0b664883607e220e4cf309ea4f","msg":"Fixed testAvailableServers()\n\nWith Couchbase we should make sure that we get two \"names\" for\neach server. One will be the hostame and the other will be the\nip address.\n\nChange-Id: Ic4f47da68afcbd4efe542ec1f00627a2c63558cd\nReviewed-on: http://review.couchbase.org/12690\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1327548030000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1a3c1cf90eb8a5b7c83daa785db41519bc31b1a8","msg":"Changed spy jar configuration to default\n\nWe changed this in spymemcached during the release so that it would\nbe added as a normal compile time dependency for users who add the\nspy dependency to their pom files. I changed it in the pom config but\nnot in the project config that we use for development.\n\nChange-Id: I34175919faec283d993a57f9a2b5f15646ccce0b\nReviewed-on: http://review.couchbase.org/12841\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy.xml"],"date":1328057517000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a606674af0dee53fe2c05cb2cbbad2439b82ba90","msg":"Added unlock operation\n\nBased on patch submitted by Brent Ryan.\n\nChange-Id: I9a30f21108fcbbd43add4abd2f16af05a3fbe68b\nReviewed-on: http://review.couchbase.org/12907\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1328056490000,"numberOfModifiedFiles":3},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8ba261989a9a43e05efd43e81a80bcf65d7d61c2","msg":"Fixes for adding only hostname instead of both hostname and ip address\n\nChange-Id: Ieae49545e1c08f2cb9155f926015046a787c0f5b\nReviewed-on: http://review.couchbase.org/13046\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorHostnameTest.java"],"date":1328591874000,"numberOfModifiedFiles":3},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b464e085d277b632cfbb4b755f8465aa64ab41b5","msg":"Fixed checkstyle issues.\n\nChange-Id: I767ed66a6c3b36016300448a2075ada7071dfbae\nReviewed-on: http://review.couchbase.org/13082\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java"],"date":1328669267000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4a38b26b2290013e316df26a21ba295d31e01a5c","msg":"Depend on spymemcached 2.8.1-SNAPSHOT.\n\nI\u0027ve pushed a tag to the first commit on spymemcached after\nthe last release, verified that it\u0027s building/installing\nwith the snapshot tag.  Then based this on it.  We need\nto release them in order, obviously.\n\nSeems like the best flexibility for now with how things are\nchanging.\n\nChange-Id: I8edc64963b074fe558a8e4cd42b3ff9e0af26dc2\nReviewed-on: http://review.couchbase.org/13372\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1329706965000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7d9b64af066781a83ae3e02a02427a1ea61e37ae","msg":"Use TapStream abstraction in spymemcached\n\nThis will allow our tap streams to be able to connect to\nall node in the cluster.\n\nChange-Id: I233a8fc96bb55cf12e73e40f46281dd3870004b5\nReviewed-on: http://review.couchbase.org/13083\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java"],"date":1328669916000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b68dc175c32e72f6f655f63f23daa892a04f8a5b","msg":"Use TapAck from Spymemcached\n\nThis change removes duplicate code.\n\nChange-Id: I7cf569e6c96f41af5bab51aabe402662f49282af\nReviewed-on: http://review.couchbase.org/13085\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java"],"date":1328671933000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"88bb58be09f18c5f3035e4e519baae0f58a018d7","msg":"Added a note about TAP interface stability.\n\nChange-Id: Ida28a8804777fddf0a8e47f7b3adecbdc7b0b633\nReviewed-on: http://review.couchbase.org/13373\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java"],"date":1329707171000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f1d750e70f4f295491861a51115965f72c8b9782","msg":"Fixed a number of TAP test issues.\n\nChange-Id: I1193262637596d0576838a67db7a61ff1447ad37\nReviewed-on: http://review.couchbase.org/13394\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/TapTest.java"],"date":1329767326000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0d87dd20458dc96909c5f42a0bfe81966373d06c","msg":"Correctly shut down connection from TapClient. JCBC-16\n\nFix based on http://www.couchbase.com/issues/browse/JCBC-16\n\nChange-Id: Iefa5d36a1263350a5e61f54d2f65796dec9b808f\nReviewed-on: http://review.couchbase.org/13848\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapConnectionProvider.java","src/test/java/com/couchbase/client/TapTest.java"],"date":1331272056000,"numberOfModifiedFiles":2},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"97e627601510424f3275f2d46b0b79862dcd8bdf","msg":"Fixed a javadoc issue\n\nChange-Id: Ic6957078afdf56c16f2e44c3a269b3e31a8bb466\nReviewed-on: http://review.couchbase.org/13847\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java"],"date":1331271923000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mikewied@comcast.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"beda277e7ad5efd0c0cf163067d03d70fdf2f5d6","msg":"Added support for views\n\nChange-Id: I67a5912f2b329151c15cff7fc89ab7ef3700503e\nReviewed-on: http://review.couchbase.org/13688\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy.xml","ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/http/AsyncConnectionManager.java","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java","src/main/java/com/couchbase/client/http/RequestHandle.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/HttpOperation.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperation.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperation.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/RowError.java","src/main/java/com/couchbase/client/protocol/views/Stale.java","src/main/java/com/couchbase/client/protocol/views/View.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewResponse.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseWithDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRow.java","src/main/java/com/couchbase/client/protocol/views/ViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewsFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewsFetcherOperationImpl.java","src/test/java/com/couchbase/client/TestOperation.java","src/test/java/com/couchbase/client/TestOperationImpl.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1330551849000,"numberOfModifiedFiles":43},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-05:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c7410b33a4670f6ff9f3b03c5db6896b8cf7fa19","msg":"Add support for stale\u003dfalse which is needed from 2.0 DP4 and later\n\nChange-Id: Id1956b6467ae02c2fae69d7cf252e3c62507cc82\nReviewed-on: http://review.couchbase.org/13849\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/Stale.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1331272292000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b0cd3ab2d2d993a293542870904d0b6345be935f","msg":"Add httpcomponents to ivy file for makepom.\n\nChange-Id: I04508e00b77b7b6e6936f43e3d130ad22e5cdf9d\nReviewed-on: http://review.couchbase.org/14157\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/couchbase-client-test.xml","ivy/couchbase-client.xml"],"date":1332346393000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cf95135b9d97aa2823d31ae9777b041fb240450c","msg":"Update dependencies to spymemcached 2.8.1.\n\nChange-Id: I86e4ee1c29f16eff16c3057db12f190158f5ee30\nReviewed-on: http://review.couchbase.org/14178\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1332379088000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ce7a0842c61a20b867fdbd1ea5606b694eb9d872","msg":"Use the correct default Hashing Algorithm - JCBC-29\n\nChange-Id: Ifb1a9ebcc7ae64a8590f1123ddde9138c17fe23e\nReviewed-on: http://review.couchbase.org/14485\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/manual/com/couchbase/client/test/CouchbaseMoxiTest.java"],"date":1333428928000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4d34594b7be3a76f1e5a868ecb9bb056f94cbbf0","msg":"Fixed checkstyle errors\n\nChange-Id: I1ae53a088077e098313231f2d044a0ca61c1fd46\nReviewed-on: http://review.couchbase.org/14562\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java"],"date":1333648060000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7c049c5290766789cc30098238d34858ea07cf14","msg":"Reconnect to configuration stream if disconnected. JCBC-19\n\nWith this change, a Bucket which is marked as disconnected will be\nlater reconnected when noticed by a calling thread.\n\nThe logic for this is a little convoluted at the moment, but tests\nto be correct.  In the future, this whole section should be refactored\nto be a better NodeLocator or something similar.  See JCBC-28.\n\nChange-Id: I8541493fdf7e8c504c4cbd512ca43e3416b03829\nReviewed-on: http://review.couchbase.org/14574\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/ReconfigurableObserver.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java"],"date":1332344866000,"numberOfModifiedFiles":9},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"02df7a7e663af846af9a742a306681a6ff5feb74","msg":"Change back to spymemcached 2.8.0 for this branch.\n\nChange-Id: I38ef9d66544f30f8101ca04889b8042c1abfc177\nReviewed-on: http://review.couchbase.org/14586\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Marty Schoch \u003cmarty.schoch@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1333660257000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b424ca4bc0b497362206cb459d98728f6af05ac1","msg":"Missing space added to log message when node is down.\n\nChange-Id: Ifad8da0b4e42f4f58945510de8513e6a7f1424e2\nReviewed-on: http://review.couchbase.org/15462\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java"],"date":1335813344000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df18fb4ea62f1662308fd71449a3ebb84b0de1a7","msg":"Added additional ctor to avoid username. JCBC-38.\n\nChange-Id: If487df95e2974f0a4c60e3c57978a82596967de6\nReviewed-on: http://review.couchbase.org/15435\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Marty Schoch \u003cmarty.schoch@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java"],"date":1335724280000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0e37394794790561074694af42b457bc42b6a7f4","msg":"Update dependencies to spymemcached 2.8.1. JCBC-39.\n\nChange-Id: I9d4e1099edbe4d32d80af22b19cfd3dad6bde221\nReviewed-on: http://review.couchbase.org/15436\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Marty Schoch \u003cmarty.schoch@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1335724489000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f660e1943746af299e7fd756e9ee88a020b95d11","msg":"JCBC-47: Query now copies include_docs correctly\n\nChange-Id: I9a894bb86530f36151c5075d2da814a66e3f4e9f\nReviewed-on: http://review.couchbase.org/15954\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1336881893000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f1090070c89b2f6906291b4a9d7c0b352de2c2a7","msg":"Removed redundent code in setStale() function in Query class\n\nChange-Id: Ie46923fde6ff5bccbf92a9da6af17769b5e44efa\nReviewed-on: http://review.couchbase.org/15955\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1336882186000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ba75181c9439f612b42816abba27ca29e7b23de0","msg":"JCBC-24: Create setGroupLevel() function in Query class\n\nI removed the setGroup(boolean group, int group_level) function\nsince group overrides group_level making this function useless. I\nturned this function into the setGroupLevel() function.\n\nChange-Id: I98ea665c8bae73ae0940863ef84c426cfade01c1\nReviewed-on: http://review.couchbase.org/15956\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1336884424000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9e72d8687d59ea80f376aec2483912bdc6a790f7","msg":"Support error codes in OperationStatus class\n\nChange-Id: If6bd4c86a28b892018385921b0f7c98172225410\nReviewed-on: http://review.couchbase.org/15953\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewsFetcherOperationImpl.java","src/test/java/com/couchbase/client/TestOperationImpl.java"],"date":1336881517000,"numberOfModifiedFiles":6},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a2dcbc01c3bf7b7843e816aa69f0a017412a8332","msg":"JCBC-44: Check if op is null before checking if it is cancelled\n\nChange-Id: I960a31110484007b9ac6b3735c9cd2ce9ca79e60\nReviewed-on: http://review.couchbase.org/15957\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java"],"date":1336884458000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0af53740b76fb48dc8d17822e45938e71589d919","msg":"JCBC-42: Close properties file after using it\n\nChange-Id: I1daa439afd2e88b55f04a63b7c42a9a7f18244e2\nReviewed-on: http://review.couchbase.org/15958\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1336885504000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0c9d2d3a3457c4f81580aeb8be7bed127f80b244","msg":"Do not override fetching of AuthDescriptor.  JCBC-59\n\nChange-Id: Iff02589db6e1a3c3f56108a647e37b821b6cc447\nReviewed-on: http://review.couchbase.org/16765\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java"],"date":1338865107000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e39cd7670097d08798fcf5a8b329c84574fca764","msg":"JCBC-20: ViewConnection blocks when no ops pending\n\nWhen getting the next op in the queue we were using the poll()\nfunction which immediately returns null if the queue is empty. This\nimmediate return causes the IO thread to spin and consumes a lot of\ncpu. What we really want is to block when getting an item from the\nqueue until one is available. In order to do this we should be using\nthe take() function.\n\nChange-Id: I9a5bcb4c3852976b55b3162fad513156e94aaaf6\nReviewed-on: http://review.couchbase.org/14959\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java"],"date":1334685227000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c66354dbce794852d7f4e97d27d281f48409f853","msg":"JCBC-43: Make VBucketNodeLocator nested classes static final\n\nChange-Id: I937829e51621d8ed6a0e54b1b079cc338ffab059\nReviewed-on: http://review.couchbase.org/16703\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java"],"date":1338704539000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e565ba016a534575f387fadc1c8e40e37c309032","msg":"JCBC-68: Copy key correctly in query\n\nChange-Id: I26a9470a7a39caf913338126dfb918c8774774cd\nReviewed-on: http://review.couchbase.org/17742\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1340945855000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a407211be57bbf528e657fa6f4833264d504ab6d","msg":"Change spymemcached dependency to 2.8.2-SNAPSHOT\n\nChange-Id: I0d3968baa57c3736af2c992eaf169ab6e3dabb37\nReviewed-on: http://review.couchbase.org/18194\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1341974658000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9a3e20797c082d5983a861caadd7a6846232d8e8","msg":"JCBC-72: Throw exception for non-200 http view responses\n\nChange-Id: Iee0b1de24a9ea245b6554aea5a30462cf7b613ef\nReviewed-on: http://review.couchbase.org/18094\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewException.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1341863814000,"numberOfModifiedFiles":7},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2390ecc598b569907fccc92535388ce38f0ce24a","msg":"Fixed incorrect error handling in view parsing\n\nThis should call setException because setException set errored\nto true. If errored is not set then the Future won\u0027t properly\nthrow and exception.\n\nChange-Id: I71288cda2f6fe27c9dc9ae83968efe81d6fe154d\nReviewed-on: http://review.couchbase.org/18197\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java"],"date":1341975093000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"98b9d82dc59d05b2138c73dead407d192026c66a","msg":"Fix checkstyle errors\n\nChange-Id: I87007bd428da34badc0d5a10ef17aa50b8132804\nReviewed-on: http://review.couchbase.org/18655\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/TapConnectionProvider.java"],"date":1342818199000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"468a425893fe0fb38a47f859404b86e049b7234f","msg":"Update deps to spy 2.8.2-SNAPSHOT\n\nThis will be replaced before release with the non-snapshot.\n\nChange-Id: Ia9800f9f63279c4716963066dc059e88aa009119\nReviewed-on: http://review.couchbase.org/18755\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1343103438000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5bd2319962fc1d97aa534edb8779b33b07809443","msg":"Use the correct Connection type for the config.  JCBC-53\n\nIn the refactoring of the client into two packages, we lost\nthe functionality that would handle reconfiguration from\nMemcachedConnections.  This change introduces a\nCouchbaseMemcachedConnection which extends the MemcachedConnection\nand implements reconfiguration.  By doing so, we properly handle\nadd and remove node events from the cluster.\n\nChange-Id: Ief068cab934542617a11e2f527d98b9c38affd07\nReviewed-on: http://review.couchbase.org/16337\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1337662417000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4c73aa8f1ed631f2afd0b197d9e04e6fa8a891a2","msg":"Ensure config update checks do not overwhelm the system.  JCBC-54.\n\nChange-Id: Id0514278608fa1476e21c0f52958860404240561\nReviewed-on: http://review.couchbase.org/16338\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java"],"date":1337748144000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5c1d311f9f85bfe31fcac8eac6ed1f524b43e5aa","msg":"Honor TestConfig in syncGetTimeoutsInitClient().\n\nChange-Id: I6b1d9cba8598799177f686016970ca254e9cec9e\nReviewed-on: http://review.couchbase.org/18758\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1343110395000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"36f97dc87dff189f9638bd1dec24bdd199ea27ac","msg":"Workaround NOT_MY_VBUCKET during optimization, and test.\n\nOn SPY-91, it was found that receiving a NOT_MY_VBUCKET\nresponse in the middle of an optimized batch of requests\nwill upset things by causing the optimized operation itself\nto be unqueued for reads, rather than retrying the contained\noperation.\n\nSince the severity level is high and the workaround is\nstraightforward (disable optimization) this commit both\ndisables optimization and introduces the test which helped\nfind the cause of the issue.\n\nRecommended way of verifying this would be to remove the\ntwo sections related to disabling optimization and then\nverify the test fails.\n\nChange-Id: I20aa2945bbbbe9f19a56a41224244fe368d5e34e\nReviewed-on: http://review.couchbase.org/18757\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/FailInjectingCouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/TestingCouchbaseClient.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1338763001000,"numberOfModifiedFiles":6},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7e4339aeed7a0e240c75717ebc5250bb47279343","msg":"JCBC-88: Fix resubscr by not waiting long and asynch subscribing.\n\nIt was found during autofailover testing that the client\ndid not recover well.  The problem was that we completed the\nresubscription on one of the callers threads.  The subscription\ncan take upward of 700ms, but if the caller adjusts their timeout\nfor operations to be lower, we don\u0027t complete the resubscription.\n\nThis change does a couple of things:\n1) doesn\u0027t allow the connection for any individual HTTP request\n   (non-streaming) to take longer than 500ms to establish for\n   purposes of faster failover\n2) changes resubscription to occur in a thread temporarily\n   spawned by the CouchbaseConnectionFactory, so it can complete\n   even if the caller\u0027s request times out.\n\nThis has been tested to show autofailover working correctly.\n\nChange-Id: I87582b99fa872530a62a336b3144fefc60b63f6e\nReviewed-on: http://review.couchbase.org/19008\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1343406500000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9952e10ba2f8dcc5e0c4fc4cc5e9e479cad80e5b","msg":"Add a few minor override annotations.\n\nChange-Id: I943c6253c55fa96f6a567dacd2598192f512f21b\nReviewed-on: http://review.couchbase.org/19012\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1343610766000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d026763993705d1a30269970b39e8abd9ddc8294","msg":"Add default test type to ant build.\n\nChange-Id: Ib0cc409a440ff5b485d6a188f77867abc79bc204\nReviewed-on: http://review.couchbase.org/19017\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1343659406000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f122ff228fe5089eae761b44ef46ab537b874e33","msg":"Added a simple README.\n\nChange-Id: I71ee47b5f3c3260657ec70644f63d9a58eb73055\nReviewed-on: http://review.couchbase.org/19018\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1343664597000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Jasdeep Jaitla","committerEmail":"jasdeep@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5b3f66f4c44e8f73fff0e8dc65a866bd1676bd96","msg":"Update spymemcached depedency to 2.8.2 release.\n\nChange-Id: I2f3099dc885de9e78ca67607174408ad5b075d0e\nReviewed-on: http://review.couchbase.org/19051\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Jasdeep Jaitla \u003cjasdeep@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1343697389000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"38914528a0e074f1b9276d6c120ac6a73b1ef150","msg":"Add HTTP Basic Authorization for View Requests. JCBC-95\n\nChange-Id: I51dde71b94f99dc0a5db8e9877fa94db45b718f2\nReviewed-on: http://review.couchbase.org/19373\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/http/HttpUtil.java","src/main/java/com/couchbase/client/protocol/views/HttpOperation.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/test/java/com/couchbase/client/http/HttpUtilTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java"],"date":1344447082000,"numberOfModifiedFiles":9},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"92a87ffdf142417c45256f781ad3c6960857c71f","msg":"Make fields of HttpOperation volatile for concurrent access.\n\nChange-Id: Ia55c4a4a3ef30affe9fea5d5f9623a79e4b91a4b\nReviewed-on: http://review.couchbase.org/18807\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java"],"date":1343205442000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f8857d696a451508e77cf45162a0294628f6dd92","msg":"Fix checkstyle errors\n\nChange-Id: Id044e448f2ec1b9f83c06bacf21ccdc1f123110b\nReviewed-on: http://review.couchbase.org/19605\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/http/HttpUtil.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1344966467000,"numberOfModifiedFiles":2},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0443cd9b023f3c14904765c74b41423c40674dc7","msg":"JCBC-96: Remove the queue mechanism in ViewConnection\n\nThis change removes the queueing mechanism that hold operations\nbefore being given to an individual ViewNode. The operations are\nnow passed directly to a ViewNode and if there are too many\noperations then they are held as pending requests until the\nViewNode is ready to process them. On node shutdown the pending\nops are requeued through a callback function that redistributes\nthem equally to the rest of the ViewNodes.\n\nChange-Id: Ieffbb45123cf47153cea662df1a01f5b2266c8d3\nReviewed-on: http://review.couchbase.org/19606\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/http/AsyncConnectionManager.java","src/main/java/com/couchbase/client/http/RequeueOpCallback.java"],"date":1344906223000,"numberOfModifiedFiles":5},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"113ad2e34581ac30534c12f4bb638dbafce779ae","msg":"Depend upon 2.8.3-SNAPSHOT\n\nChange-Id: Idb97b900ec1856b75df631bfe620c73b11bedb1e\nReviewed-on: http://review.couchbase.org/19673\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1344024858000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d6100b2c01e9c6788444c30e1b8b367b1f463f04","msg":"Remove dependency on ErrorCode, which was revereted in spymemcached.\n\nChange-Id: Ife8c127ad3d0e9bfc7648f2f8e87e62a5ec4e0f9\nReviewed-on: http://review.couchbase.org/19674\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewsFetcherOperationImpl.java","src/test/java/com/couchbase/client/TestOperationImpl.java"],"date":1336884458000,"numberOfModifiedFiles":6},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"228b3cd3c3d1d171779ccbdb10bbd3974f8a8a57","msg":"Added better debug logging on ViewNode error handling.\n\nChange-Id: Ic1ee33df0a95ce285143269b9cc1246cc8be0913\nReviewed-on: http://review.couchbase.org/18808\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java"],"date":1343205643000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5502ef84ec2dba6a3a6b4fa3f02cf1700bb694c2","msg":"Make diagnosis of HTTP connection startup better.\n\nChange-Id: I49d9f44aca5adad8f070cca661c990c9de306853\nReviewed-on: http://review.couchbase.org/19675\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewNode.java"],"date":1344537240000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d9ae5a95511c015e37fa2463a21df017d768264b","msg":"Added asserts to ensure expected view handling.\n\nChange-Id: I191ff4bfdd61aec26afb146aa3aa9de4d315f9c0\nReviewed-on: http://review.couchbase.org/19676\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1345073815000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b9aa7c16d919936d43ae089337f1a97ea4284fef","msg":"Change tests to use bucket delete/create instead of flush_all.\n\nRecent changes of Couchbase Server 2.0 have flush_all disabled\nby default. It\u0027s also not correct to re-enable flush_all\n(though possible) as it won\u0027t really behave correctly.\n\nThis change shifts to a bucket delete followed by a bucket create.\nIt\u0027s not the best change in that it introduces a lot of sleep time\ninstead of checking for bucket availability with some other poll,\nbut does appear to be reliable.\n\nAfter the integration of RESTful flush in MB-5170, we should be\nable to trim some of the time of running tests again and remove\nthe sleeps in here.\n\nChange-Id: I80ed8bb311afc8dde3970db0cbad6687f58c0048\nReviewed-on: http://review.couchbase.org/19677\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CbTestConfig.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/TestAdmin.java","src/test/java/com/couchbase/client/TestOperationPutImpl.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1345074094000,"numberOfModifiedFiles":8},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"ingenthr@cep.net","committerTimeZone":"GMT-07:00","numberOfBranches":0,"hash":"924d30175c80569d8e7ef533707f9626507f1960","msg":"Merge branch \u0027release10\u0027\n\nBy Matt Ingenthron (16) and others\n\n* gerrit/release10:\n  Added a simple README.\n  Add default test type to ant build.\n  Add a few minor override annotations.\n  JCBC-88: Fix resubscr by not waiting long and asynch subscribing.\n  Workaround NOT_MY_VBUCKET during optimization, and test.\n  Honor TestConfig in syncGetTimeoutsInitClient().\n  Ensure config update checks do not overwhelm the system.  JCBC-54.\n  Use the correct Connection type for the config.  JCBC-53\n  Update deps to spy 2.8.2-SNAPSHOT\n  Fix checkstyle errors\n  Do not override fetching of AuthDescriptor.  JCBC-59\n  Added additional ctor to avoid username. JCBC-38.\n  Missing space added to log message when node is down.\n  Reconnect to configuration stream if disconnected. JCBC-19\n  Use the correct default Hashing Algorithm - JCBC-29\n\nConflicts:\n\tivy/libraries.properties\n\tsrc/main/java/com/couchbase/client/CouchbaseClient.java\n\tsrc/main/java/com/couchbase/client/CouchbaseConnection.java\n\tsrc/main/java/com/couchbase/client/CouchbaseConnectionFactory.java\n\nChange-Id: Idefa785503f0dae99624af7172ba38f54087a45e","modifiedFiles":["README.md","build.xml","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/ReconfigurableObserver.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/FailInjectingCouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/TestingCouchbaseClient.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java","src/test/manual/com/couchbase/client/test/CouchbaseMoxiTest.java"],"date":1345079434000,"numberOfModifiedFiles":19},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d0dd7f9068b479b15663084d4b7e265d45ded2de","msg":"Disable tests related to flush after change to test fixtures.\n\nChange-Id: I0225828c83cd70ee3ae9fdea66f226a22c183e32\nReviewed-on: http://review.couchbase.org/19691\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/TestAdmin.java"],"date":1345092878000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b6df3e4a94811312d0b2bc5a22f746a909819309","msg":"Better logging on testGetAvailableServers in failure case.\n\nChange-Id: Id14c724e9a6ea40f10e4691f09f3bca4f4f8f821\nReviewed-on: http://review.couchbase.org/19692\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1345092943000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b0e561ab11e34d80a776053e070a3893db043d83","msg":"Fixes for TapTest based on new flush.\n\nChange-Id: Ib8be84252cc34eb3c5ec12b039abbcb410cd6a54\nReviewed-on: http://review.couchbase.org/19693\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientBaseCase.java","src/test/java/com/couchbase/client/TapTest.java"],"date":1345093007000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7a6976cbbb1f8fc68214f7395cac91712a64c12b","msg":"Adapt OptimizedStoreVbucketTest to new test fixtures.\n\nChange-Id: Id4a3268f42124ace70531f10674b817b7464c15c\nReviewed-on: http://review.couchbase.org/19694\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1345093043000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"93e59f05216df7428197305fc175ec7609a800dc","msg":"Fixes for view authentication when adding design docs.\n\nChange-Id: I78fd48c5fb18a2622ed0a9f0aa80f317537e70a3\nReviewed-on: http://review.couchbase.org/19758\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/TestingClient.java"],"date":1345169921000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4460d262b761363b6e375eafd2b1385660f42bd7","msg":"Add support for synchronous set via Observe operation.\n\nThis change introduces a simple synchronous set which\nuses the underlying observe command introduced in\nspymemcached 2.8.3.  This command is a binary command only\nand is in Couchbase Server 2.0 (approx. build 1495) only.\n\nConflicts:\n\tsrc/test/java/com/couchbase/client/CouchbaseClientTest.java\n\nChange-Id: I6a1e8af54ef13d4a40a5dcc21bb7a939fb63499f\nReviewed-on: http://review.couchbase.org/19068\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1343707332000,"numberOfModifiedFiles":4},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"47bc98af900f1ba89357cf003ab046257f8083ff","msg":"Add support for a synchronous delete, via observe operation.\n\nThis change adds support for a synchronous delete, including\ndetection of full delete versus logical delete.\n\nThe main use case behind this feature is that if using\nCouchbase Server 2.0, and wanting to query views, one may\nwish to ensure a delete has been persisted to know that\na subsequent query with .setStale(false) will take the\ndeletion into account when generating the index.\n\nChange-Id: I99ad5b5089992a7df2c2ab12e487d043265df21f\nReviewed-on: http://review.couchbase.org/19778\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1344844811000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbbeb7677eabb08a50c3905dbf88b390d980a969","msg":"Rename README since ant clean kept removing it.\n\nChange-Id: I2eada518c22bc345c113c0b786e200fd931e0567\nReviewed-on: http://review.couchbase.org/19838\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["README.markdown"],"date":1345328147000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"66115cef4542ece437229f90a0ba17ea96aac69e","msg":"Checkstyle fixes from merge commit.\n\nInitially, I tried to rebase this to be the first commit after\nthe merge, but git would keep losing it even when using -p during\nrebase.\n\nChange-Id: If9c79e0139ab60261e67195037686de3a446a373\nReviewed-on: http://review.couchbase.org/19839\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/test/java/com/couchbase/client/FailInjectingCouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/TestAdmin.java","src/test/java/com/couchbase/client/TestingCouchbaseClient.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1345332330000,"numberOfModifiedFiles":9},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4e059171ca69e6dea5fc1f968ed9ecd0465d8647","msg":"Checkstyle misc. fixes.\n\nThis fixes a number of checkstyle issues which have been\naround for a while.  Some are still in code review, but a merge\ncommit is a bit in the way of putting things in the right order.\n\nChange-Id: Icd79b614ef53840130abd8ec8adf1ebdb8fccdb4\nReviewed-on: http://review.couchbase.org/19840\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/TestingClient.java"],"date":1345334360000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5bb4b3692ba47bbaa25bc0d8f16454b44600e01e","msg":"Minor typo in test log message.\n\nChange-Id: Id0713e7df30b0a828af3122ad9623c3e9240c245\nReviewed-on: http://review.couchbase.org/19860\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/TestAdmin.java"],"date":1345410879000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e8ff311445822053a623c823647fb3b58f156e16","msg":"Update to depend on released spymemcached 2.8.3\n\nChange-Id: I20765441809571c2660b661032ba3bc4a681165f\nReviewed-on: http://review.couchbase.org/19861\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1345410914000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0b92ee2ea2cf658054a73145bc80e9a8267090d8","msg":"Updated README to map up to the 1.1 DP state.\n\nChange-Id: Ia810d5b6f1418476fc2118e3501e0c69f2d6da79\nReviewed-on: http://review.couchbase.org/19862\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["README.markdown"],"date":1345440410000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7e5d17d8b7ab5feaf67d3a80f85f87bd45e007fe","msg":"Observe/Delete related changes\n\nProperly return OperationFuture from delete().\nIgnore the cas values if set to zero.\n\nChange-Id: I7f9b4a9149f1a952f5a2354f223223d02144da43\nReviewed-on: http://review.couchbase.org/19920\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1345509571000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1840d0fa39f593ecd2b973523e023bc9affe3b06","msg":"Updated spy dependency to 2.8.4-SNAPSHOT.\n\nChange-Id: I27be57d44302248d27059b213a3dcc2364131a34\nReviewed-on: http://review.couchbase.org/19997\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1345595367000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Raghavan N. Srinivas","committerEmail":"raghavan.srinivas@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0967d5167eba965205de0f8a26e88db237ee065d","msg":"Remove design docs without the _rev.\n\nAs of build 15xx, design documents no longer have a _rev and thus\nthere is no reason to retrieve them to remove them with _rev.\n\nTechnically speaking, we could probably get rid of this whole\nsection, but there\u0027s no harm in just making it work.\n\nChange-Id: I6373dbab78ed7f3c02e57c2a4dcf734285b45ee8\nReviewed-on: http://review.couchbase.org/19998\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1345599515000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"12dffd5cf5049645938d405a056135ff1cb5be26","msg":"Update spymemcached dependency to 2.8.4.\n\nChange-Id: I3a92bb4efde4cda95fd8bd0b63976f6a76fd3da1\nReviewed-on: http://review.couchbase.org/20008\nReviewed-by: Raghavan N. Srinivas \u003craghavan.srinivas@gmail.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1345605261000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4a5b5cbc4395fb6569f90872eb9519d43f5b6b2d","msg":"Remove jettison import from ViewTest.\n\nChange-Id: I72f49c842272ee06b39df38d6501aceaee7da7dc\nReviewed-on: http://review.couchbase.org/20010\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1345615465000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"710f39839adcb727dd188f96de241aa72dbd2004","msg":"Update to spymemcached 2.8.5.\n\nChange-Id: I754b08c9f1151bd739a89b8aeac3c0a4d102fa07\nReviewed-on: http://review.couchbase.org/20398\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1346399995000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4b300b2dcc007eaeb1f27f85444322b583bd0ea4","msg":"Enhanced observe and added observe support for other mutation ops\n\nThrow ObservedException, ObservedTimeoutException\nand ObservedModifiedException\nAdded support for add, replace, cas\nUpdated Tests for observing the mutation operations\n\nChange-Id: Ifa9accbe8056f28ecfefaac19a9d5bdf34fb9951\nReviewed-on: http://review.couchbase.org/20329\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/ObservedException.java","src/main/java/com/couchbase/client/ObservedModifiedException.java","src/main/java/com/couchbase/client/ObservedTimeoutException.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1346300679000,"numberOfModifiedFiles":6},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"21db5dd7e835fa19a5775ea5bb44c41e6786228f","msg":"Make observe poll loop parameters tuneable.\n\nChange-Id: Iaf8c8a22119066d04869e30d657bde157a7f4dfd\nReviewed-on: http://review.couchbase.org/20399\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1346389831000,"numberOfModifiedFiles":4},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2ec3bca248c08f27984f748ceae652a044dfd879","msg":"Remove unused variables in observe implementation\n\nChange-Id: I38c8aaf59f1d01390e8f60bc96f21d6e4ede0881\nReviewed-on: http://review.couchbase.org/20654\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1347062495000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"49fe212fdf78beac6263e73f918ff9a811923e0c","msg":"Update to spy 2.8.6-SNAPSHOT for development.\n\nChange-Id: Ie46913976b2a24197410cb7d57a6c35b5a76b3ed\nReviewed-on: http://review.couchbase.org/20711\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1347304960000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dd5e34e6e02b27fc54b731cf7c86e96ae1d3d8b8","msg":"JCBC-107: Correct OperationStatus message when observe poll is tuned.\n\nChange-Id: Icf02c8d2f597a821869f77a79e38eb5cfb584a47\nReviewed-on: http://review.couchbase.org/20712\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1347304898000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f96138ffe2fa699fe8edd2fe7bd4f1f9eb8e7b88","msg":"JCBC-109: Reduce observe poll interval latency.\n\nA 100ms interval was chosen after some discussion.  It\u0027s\nnot optimal, and JCBC-108 tracks getting this to an adaptive\nalgorithm.\n\nThe reason for 100ms is that with real disks, chances are\nfast IOs will happen in 60-120ms.  Only with caching or SSDs\nwill it likely be lower.  This means that with most checks\nit\u0027ll happen in a handful of checks.\n\nChange-Id: Ia6e14ee32ba6d6fc57608ffb44dbb9611e3401a5\nReviewed-on: http://review.couchbase.org/20760\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1347408062000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ce74eb6bf1004500f854082da4c91316ed906d3b","msg":"Fix minor checkstyle issues.\n\nChange-Id: I19ceb6459e61d0d5e53981267d6e58fcf99b784c\nReviewed-on: http://review.couchbase.org/20779\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1347440339000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e65942dfd55c0959dbe2a9a3fab14344c3a0597c","msg":"Update to released spymemcached 2.8.6.\n\nChange-Id: I7803440f9ba5a88c3758fe10c49ab5c50532e0fd\nReviewed-on: http://review.couchbase.org/20780\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1347440362000,"numberOfModifiedFiles":1},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e0e7d10776a524ef536fc02d9e7f046bddb3bc2a","msg":"Upgrade Netty Dependency\n\nFix for JCBC-106.\nAccording to https://github.com/netty/netty/issues/milestones?state\u003dopen\n3.5.5 is backwards compatible with earlier versions and is the latest\nstable release. So far testing has proved that there are no\ncompatibility issues.\n\nConflicts:\n\tivy/libraries.properties\n\nChange-Id: I4b5ff9219d5709d45a7bcf7e5fdd9f7607b65184\nReviewed-on: http://review.couchbase.org/20889\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy.xml","ivy/couchbase-client-test.xml","ivy/couchbase-client.xml","ivy/libraries.properties"],"date":1347723542000,"numberOfModifiedFiles":4},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"455886d419ac76ab3509a69dfc8950d2c7f22360","msg":"Fix checkstyle errors\n\nChange-Id: I3fe78fca9075b812b4369f5b99cc2d5556a0f065\nReviewed-on: http://review.couchbase.org/20917\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1347919703000,"numberOfModifiedFiles":3},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5f50dbd742d3f9f1563bd3518e56ae44db31de95","msg":"JCBC 110: Fix observe command\n\nChange-Id: I70eb4947eb05cb4c356bab5ad14e7b277c00e7b8\nReviewed-on: http://review.couchbase.org/20847\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1347596495000,"numberOfModifiedFiles":3},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f5603e21c7cbf94d4804e01688c1160375dae418","msg":"Remove observe delete command\n\nThere is a server bug that pervents this change from working\nproperly in all cases. We will revert this change once the issue\nis fixed on the server.\n\nChange-Id: Ia9b4ea5e95dccd6f7083a996fb4cd66f471ba03a\nReviewed-on: http://review.couchbase.org/20918\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1347920530000,"numberOfModifiedFiles":3},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4647b0a8683979c2b9447df10edbff66155dd7cd","msg":"JCBC-40: Make paginator not return null.\n\nIt now no longer returns null.  It will also allow for easier\nunderstanding of iterating between pages and records within\na page.  It will also now honor the setLimit on the supplied\nQuery.\n\nChange-Id: Ib310bbe3cc4a9694426e78a31d9cbcc1daf70f05\nReviewed-on: http://review.couchbase.org/20898\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1347851422000,"numberOfModifiedFiles":3},{"authorName":"Raghavan Srinivas","authorEmail":"rags@acm.org","authorTimeZone":"GMT-04:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"59d1d5c03f5d09c1a20686d3f36fcba881f869e2","msg":"JCBC-25: Add option for on_error in conjunction with Views.\n\nFixes http://www.couchbase.com/issues/browse/JCBC-25\n\nChange-Id: Ide9264bb8db5b6c3b1477e1d720aa289229ecfb8\nReviewed-on: http://review.couchbase.org/20878\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/OnError.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1347668308000,"numberOfModifiedFiles":3},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a9420b692a8b1503b1950dacfa95fbcb27b0477e","msg":"Fail testOps in VBucketCouchbaseClientTest if connection fails\n\nFail test rather than log syserr in VBucketCouchbaseClientTest if\nconnection fails.\n\nChange-Id: I252ea356300fbaa1fea0dd9b0b47f25bb8c6d0bd\nReviewed-on: http://review.couchbase.org/21156\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java"],"date":1348704992000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1b1e13ac2e9253b2f76544ba0439a9b6109d9a0c","msg":"Don\u0027t increment volatile variables\n\nIncrementing a volitile int is not thread safe since it follows\nthe read/modify/update pattern.\n\nChange-Id: Ifa32c8867cc333ae722e74fedc345cdbd4e89e3d\nReviewed-on: http://review.couchbase.org/21157\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1348705104000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7c39dee5a2f46fe3c3e9b017e07ba3fc53f6e687","msg":"Fix checkstyle errors\n\nChange-Id: I9d2395e78d174f6e29e1bbad6df5a0744b2ecd29\nReviewed-on: http://review.couchbase.org/21351\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/OnError.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1349386676000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"58c1c9f203b576182f8025d25c353e05a2ca6237","msg":"Changing Copyright Years and URL.\n\nThis small fix just updates copyright years and the couchbase\njava sdk url.\n\nChange-Id: I1b789b3b6b83ec1921f90e63768fcf25aaf9543d\nReviewed-on: http://review.couchbase.org/21219\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["build.xml","etc/checkstyle.xml"],"date":1349093688000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael.nitschinger@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2178868be2bd3212d19e02943da26c72762509d3","msg":"Adding a ComplexKey class and tests for querying with arrays.\n\nThis changeset extends the capabilities of the ComplexKey\nclass, fixes a few issues and adds test cases for all\nsupported operations. It also adds docblocks where\nappropriate.\n\nChange-Id: I9e0e31179e08fa482f7615370798b7af254dfdc5\nReviewed-on: http://review.couchbase.org/21353\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java"],"date":1347756764000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"96332980449ea58cc2a90805028bf9c0350f39da","msg":"Documentation improvements for the constructors.\n\nImproving documentation for the constructors and making\nit clear that - for the moment - different usernames and\nbucketnames are not possible.\n\nChange-Id: I9e130f05009a888031cad76a76dc1fcc0f7411dd\nReviewed-on: http://review.couchbase.org/21217\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1349088440000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael.nitschinger@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"06a19407946327df6d187fbd8a01a891447fc6e8","msg":"Add more unit tests for the Query class\n\nChange-Id: Ib9b863838eef8fb7e1f0d4a6f438a513edccae44\nReviewed-on: http://review.couchbase.org/21354\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1349387482000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael.nitschinger@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4020091d251a2dfe99d34be86cfb88b9e5c1dc6c","msg":"Remove the update_seq query parameter\n\nChange-Id: I0e8d0a2096deeba981696f428df850e08e5f564d\nReviewed-on: http://review.couchbase.org/21355\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1349388031000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael.nitschinger@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"340c13e2f887df719432a1d991431411097c280b","msg":"Add javadocs to public functions in Query class\n\nChange-Id: Ia9ab7b631a0966fdc6326cf360c2707b12caaeae\nReviewed-on: http://review.couchbase.org/21356\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1349388053000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c73d7fab29534f5148bea79eb8ff9f40b6f5facb","msg":"JCBC-105: Add key stats operation\n\nChange-Id: I5d5300ae29cdc7d73477a488b4554126325213bc\nReviewed-on: http://review.couchbase.org/21202\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1348860306000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5d133ed90603ec85a277e4564dc11fe8f6309811","msg":"JCBC-120: Fix NPE on null for password\n\nThis changeset sets the password to an empty string if it is passed\nin as null. This fixes a NPE exception down the stack in the spy\nmemcached library that tries to access it. This of course also sets\nit for couchbase connections, but since an empty string is always\nallowd it makes it more consistent.\n\nChange-Id: Ic62558d2dbbef8e67f7570eb605207587718aec7\nReviewed-on: http://review.couchbase.org/21446\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1349785447000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"325f213a50710a84fc03f30a9f6570c25aa1ab92","msg":"JCBC-128: Allow replicateTo without persistTo\n\nThis changeset makes it possible to run mutation operations\nlike add,set,replace or cas only with replicateTo set and\npersistTo to zero. This adds a security net to operations\nthat need to be fast but dont have to be persistet at the\nsame time.\n\nChange-Id: Ic261eb027d39111d925a53271b36465349fdcd3b\nReviewed-on: http://review.couchbase.org/21416\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1349688715000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5cfc13ac68cfda7c3695687ebec7a26bb08f7460","msg":"JCBC-129: Improve Documentation for PersistTo and ReplicateTo.\n\nThis changeset adds a bunch of docblocks describing the way how\nthe PersistTo and ReplicateTo argument work and what they may be\nused for.\n\nChange-Id: I38a9f24c26072e9e8bb9ea54d26c0442f29240df\nReviewed-on: http://review.couchbase.org/21417\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1349690869000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0d75967786d79cca1ea1c9a8f3a010b005a11056","msg":"JCBC-41: Allows better query options through ComplexKey.\n\nRelated Issues: JCBC-90, JCBC-48\n\nThis changeset provides more flexible options on how to provide\nthe query params, especially if someone wants to add numeric\nstrings and not want them to be casted to pure numbers. Since we\nonly allow Strings or ComplexKeys as params, the ComplexKey class\ncan be used to hint the correct type and enfore it down to the\nHTTP query layer. See the added test cases for more details.\n\nChange-Id: I0d56bda1d3d9727455bfe26fa7a1311dbcce00a8\nReviewed-on: http://review.couchbase.org/21337\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1349339512000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f6f0b254607e4187c7ba43e0f1d873fe8a360ff9","msg":"Return correct result on hasPendingRequests.\n\nThis fixes a simple logic-bug which returns true when no pending\nrequests are in the queue.\n\nChange-Id: Id917fa22ad3551b118ef0f3a3cbb8769a4cf999b\nReviewed-on: http://review.couchbase.org/21372\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/http/AsyncConnectionManager.java"],"date":1349416225000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b54d2ff4d1e9eb70b0473b5c5ab3064a38f7151a","msg":"JCBC-126: Properly encode view values.\n\nThis changeset encodes all view property values so that they are\nsent correctly over the wire. It encodes special characters like\nspaces or brackets. This changeset also adapts the tests.\n\nChange-Id: I347e4dce20181c0cd932a0d6d30e34f90475035d\nReviewed-on: http://review.couchbase.org/21423\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1349715094000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Wiederhold","committerEmail":"mike@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"00a21386f6fe0b981aa9083243a1e54cbc7d2ac0","msg":"JCBC-119: Allow NULL for persist/replicate.\n\nThis changeset adds the possibility of using null for persistTo\nand/or replicateTo. It defaults to ZERO for both enums, which\nare the defaults and are equal to \"dont observe at all\". Tests\nare also attached.\n\nChange-Id: I0d69c971792ad8118f5d9035ccf3e0d8bca0215b\nReviewed-on: http://review.couchbase.org/21421\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1349701051000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0bc3d238157c1812cd903ed502843455010e18a5","msg":"JCBC-100: Add better error handling on view fetches.\n\nThis changeset adds better error handling for synchronous\nview fetches (getView and getViews) and adds documentation\nto the asynchronous methods to remind the developer that\nhe has to check on the future object himself.\n\nChange-Id: Ic1a74310f1f789b7b83bfae09496526b27ee7247\nReviewed-on: http://review.couchbase.org/21338\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/InvalidViewException.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1349348109000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95c25750680b7271ccfea5119c5a376d1199628c","msg":"Cancel view requests when the operation is cancelled.\n\nThis changeset makes sure that the corresponding http\nrequests are cancelled as well when the operatiion is\ncancelled. This prevents a possible issue on blocking\nthe caller thread when the connection cant be\nestablished.\n\nChange-Id: I4c62eb8196a098ab5215e09659765fbd95010e1a\nReviewed-on: http://review.couchbase.org/21915\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewNode.java"],"date":1350563165000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d94f3d91281e77835723d9b7e6f161fa9b072802","msg":"Renaming log message to remove CouchDB reference.\n\nThis changeset changes the log message to not refer to\nCouchDB anymore but to a Couchbase HTTP connection\ninstead.\n\nChange-Id: Idd21b8c6df2c50c3ce6616bf775c908ecc2c8d14\nReviewed-on: http://review.couchbase.org/21872\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/http/AsyncConnectionManager.java"],"date":1350992759000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d65f0bc8a9672956dd0a3f7c6eb0a4be645c6a43","msg":"Prevent doctype clash in view test.\n\nThis changeset prevents the pagination tests to fail because\nof recently added tests. It modifies the view function to only\nemit the correct documents.\n\nChange-Id: Ic0e809b070c75ce440402972588de578344d3258\nReviewed-on: http://review.couchbase.org/21827\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1350912327000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dee933a4b7ae2127db86cb512b90c00e09857365","msg":"Overriding spy tests to work correctly with couchbase\n\nThis changesets overrides two test cases that fail but\ndont need to do so. They are overridden from spy because\nthe assertions are not correct with respect to couchbase\nfunctionality.\n\nChange-Id: I32c60869e1feb26345b29123fb0c22d0b6cc90f3\nReviewed-on: http://review.couchbase.org/21867\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1350982666000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eb439b775330fb86f75b6d06a825a52670eef4d0","msg":"JCBC-100: [Backport] Add better error handling on view fetches.\n\nThis changeset adds better error handling for synchronous\nview fetches (getView and getViews) and adds documentation\nto the asynchronous methods to remind the developer that\nhe has to check on the future object himself.\n\nChange-Id: Ic1a74310f1f789b7b83bfae09496526b27ee7247\nReviewed-on: http://review.couchbase.org/21338\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-on: http://review.couchbase.org/21738","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/InvalidViewException.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1349348109000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6876ee6d382ff612f54718c8721b93603fed94b3","msg":"[Backport] Cancel view requests when the operation is cancelled.\n\nThis changeset makes sure that the corresponding http\nrequests are cancelled as well when the operation is\ncancelled. This prevents a possible issue on blocking\nthe caller thread when the connection can\u0027t be\nestablished.\n\nThis addresses JCBC-130.\n\nChange-Id: I4c62eb8196a098ab5215e09659765fbd95010e1a\nReviewed-on: http://review.couchbase.org/21743\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewNode.java"],"date":1350563165000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f40b3f72a906ebff66a9cc75fdbeff4f930c5602","msg":"Correcting view tests with wrong exception handling.\n\nThis changeset corrects the tests and makes sure the correct exceptions\nare thrown. This is different than on master because the view tests\nchanged and the original changeset referred to those changes.\n\nChange-Id: Id96b611105d7b3566eab2e6e3d81bb949c1a5ee3\nReviewed-on: http://review.couchbase.org/21924\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1351087355000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"216af9b3daa6c3a75b5512291fb719c00b3f6eb4","msg":"JCBC-121: Dont use view connections for memcached\n\nThis changeset makes sure to only set/use the view connection while\nconnected to a couchbase bucket and not to a memcached bucket.\n\nIt also adds a test class with corresponding mocks to make sure\nthe initialization works correctly and does not fail on rebalance\nor shutdown as well.\n\nChange-Id: I912b134d43c7b145ece4e641a20d1fbc3a2c6d68\nReviewed-on: http://review.couchbase.org/21445\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1349784078000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"04607c3baf015286b40e2c7f4ed8cbaea44cbc2f","msg":"Updating spymemcached to the 2.8.8 release.\n\nChange-Id: Idf77acb167a4f7d7729f6fddb913d926d439e60e\nReviewed-on: http://review.couchbase.org/22015\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1351265508000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b8eda759c9a9f16642fcdd18eb93cb035799bb43","msg":"JCBC-130: Add a timeout for unresponsive http connection fetches.\n\nThis adds a hardcoded timeout and a test to make sure that after\na certain time it is guaranteed that the thread waiting for the\nconnection initialization returns eventually.\n\nThe timeout is set to 30 seconds. Note that this is not the\ntimeout for the actual view response to receive, but for the\nconnection initialization.\n\nChange-Id: Icb1138803d7914853b4e0f69b5a8a0443e4170c0\nReviewed-on: http://review.couchbase.org/22206\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy.xml","ivy/couchbase-client-test.xml","ivy/libraries.properties","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java","src/test/java/com/couchbase/client/ViewNodeTest.java"],"date":1351789667000,"numberOfModifiedFiles":5},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"982a05b0399f0db67d3b32d048b945b397b8090f","msg":"Fix checkstyle errors and remove unused variables\n\nChange-Id: I5fda71dac640bb2f3ac2a88a49398c10438f6636\nReviewed-on: http://review.couchbase.org/22057\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/TestAdmin.java","src/test/java/com/couchbase/client/TestOperationPutImpl.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1351538894000,"numberOfModifiedFiles":8},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b5c2722a6bbac5ffe7f647bf0203120515351a98","msg":"JCBC-64: Add bucket create and delete API\u0027s\n\nThis changeset adds the ability to create and delete buckets\nthrough the ClusterManager class. This class is separate from\nthe CouchbaseClient class, because by definition the Client\noperates on one bucket while the ClusterManager allows to\nmanage more than one at the same time.\n\nChange-Id: Ia885d20aad1598b25d43e3a645ef51bdd68ff663\nReviewed-on: http://review.couchbase.org/20895\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/clustermanager/AuthType.java","src/main/java/com/couchbase/client/clustermanager/BucketType.java","src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1347838052000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c1eabf5968cf4cde5ad02e667f5c36b6e5b76c7b","msg":"Remove unused jmock dependency.\n\nThis changeset removes the unused JMock dependency, easymock is\nused instead.\n\nChange-Id: I7488fb0c7e20c82b691201875759e6a961ac4d13\nReviewed-on: http://review.couchbase.org/22109\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/couchbase-client-test.xml","ivy/libraries.properties"],"date":1351680895000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df5b6a53bbd61ca8daf64d56919e79d81870355e","msg":"JCBC-80: Adding a unit test for persist and no stale\n\nThis changeset adds an integration test for the persistence\nrequirements in combination with stale\u003dfalse.\n\nChange-Id: I6ed681ab7dbc0ff131ef3a0d271cfad43bdc539e\nReviewed-on: http://review.couchbase.org/21444\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1349778305000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b41f1108acffe8f3a1cc1a6ab6aa3762f266f5a3","msg":"JCBC-122: Remove the TestAdmin and make tests more resilient\n\nBucket creation and deletion on the server can potentially take\na long time. This change makes these processes retry these\noperations until they eirther timeout or complete. This change\nalso makes us wait until traffic is enabled on the server before\nbeginning our tests.\n\nChange-Id: I87d5129763566cfc0293209b24f4031dc47cd405\nReviewed-on: http://review.couchbase.org/22058\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/TestAdmin.java","src/test/java/com/couchbase/client/TestOperationPutImpl.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1351537045000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d70239efeb69d022730baf7f28985c4b476a38c2","msg":"JCBC-125: Don\u0027t cast every view document to string.\n\nCasting every document to string causes problems when reading binary\nobjects like serialized objects through a view. It also includes\nan updated ViewTest with a custom design doc that verifies such\nsituations.\n\nChange-Id: I1267af20f5b6808935f0ce067c35229b9a16bb20\nReviewed-on: http://review.couchbase.org/21305\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1349266929000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f2007087625b43c7fa7fe287d58924c941f03d85","msg":"JCBC-94: Fixes possible thread issues on shutdown.\n\nThis changeset makes sure to wait for the view IO threads\nto finish before returning to the shutdown method up the\nstack.\n\nChange-Id: Ic60fd610469e9254b31cdda204fe525997041327\nReviewed-on: http://review.couchbase.org/21301\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/test/java/com/couchbase/client/ViewConnectionTest.java"],"date":1349257286000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a0d973891930dd08e2bd966600e8c4f9bd9e2572","msg":"JCBC-58: Refactoring HttpFuture and ViewFuture\n\nThis changeset refactors the get() method for both the\nHttpFuture and the ViewFuture to extract a common codepath\ninside and reduce duplication.\n\nChange-Id: I719dad0636cf3f2b0419335fbbe477033c335392\nReviewed-on: http://review.couchbase.org/22353\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java"],"date":1352381181000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"66b8f32bace85ae90234894a84eb70ebe1e28ae3","msg":"JCBC-123: Throw an exception when vbucket master is -1\n\nThis changeset makes sure to throw a controlled exception when\nvor the given vbucket there is no master server defined to handle\nit appropriately. -1 for the master is clearly an invalid state\nand could be the case for the following reason:\n\n- No replicas are defined and a node is failed over.\n- More nodes have been failed over than there are replicas.\n\nEither way, the client library is unable to remedy the situation\non its on and therefore throws an exception. The application\nlayer is expected to deal with the situation (either retry until\na rebalance is done) or redirect it to a system which is capable\nto do so.\n\nChange-Id: I582939820ec3067ce724c93e410e93f834c340ee\nReviewed-on: http://review.couchbase.org/22352\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java"],"date":1352378344000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aee9908e59e74dc3cee50d1239ae55a3216d00a6","msg":"Ensure that include_docs is never passed as a HTTP param.\n\nThis test update ensures that the include_docs param is never\nused in the HTTP param list.\n\nChange-Id: I9915cdd0a1d67cbeebcc16d98d9c7b95a36e2867\nReviewed-on: http://review.couchbase.org/22505\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1352888287000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"49745439418d9efac506479a07fa27d0309e6329","msg":"JCBC-86: Remving HashAlgorithm fo Cache buckets\n\nThis changeset removes the unused hashAlgorithm code from the CachConfig\nbecaus it confuses and is not needed currently. The method is kept in there\nbecause of interface compliance.\n\nChange-Id: I8a44a958a96a67a203ffb4ffee3a03046f27676c\nReviewed-on: http://review.couchbase.org/22586\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java"],"date":1353061730000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"77d8bb9f161f79e91a9723fcda11c6ed73d1b577","msg":"JCBC-136: Adding support for spatial view queries.\n\nThis changeset adds the capabilities to query spatial views. Queries\nwork with and without documents, but not for reduce queries. The tests\nhave been refactored out to a new file for better encapsulation.\n\nChange-Id: I96383e7f421c7e2d446f8d09724f0c707177552a\nReviewed-on: http://review.couchbase.org/22563\nReviewed-by: Volker Mische \u003cvolker.mische@gmail.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/AbstractView.java","src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/SpatialView.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowWithDocs.java","src/main/java/com/couchbase/client/protocol/views/View.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewRow.java","src/main/java/com/couchbase/client/protocol/views/ViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1352981025000,"numberOfModifiedFiles":22},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"33fffab268a57c660ff3cce7d03aa679cbcf1dea","msg":"JCBC-142: Fix persist master issue with observe\n\nChange-Id: I83368deaea04c0439822bdf825c472e0cdb88e87\nReviewed-on: http://review.couchbase.org/22692\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1353452741000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"64b32be66db3ed8806f164f2d13aa53d83929d86","msg":"JCBC-142: Fix observe test case\n\nThe observe test case was trying to observe that an item was\nreplicated and since we only have a single node cluster this\nwas causing all of the observe calls to fail.\n\nChange-Id: I55f94e432e4095052dea668a015bfe8e04d77fe3\nReviewed-on: http://review.couchbase.org/22737\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ViewTest.java"],"date":1353526178000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"94fc174732c871d78dca4531b7f0b7e18580e9c9","msg":"JCBC-40: Fix NPE on pagination iteration.\n\nThis changeset fixes a possible NPE when the view result does not have\nmore rows to return. It also moves the Pagination tests into a separate\nfile to make it easer to isolate possible issues.\n\nAlso, documentation has been added to the Paginatior class.\n\nChange-Id: I560f22ac057d01cb72c3530fda15dfa08b5c9b5d\nReviewed-on: http://review.couchbase.org/22513\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1352906312000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3a176165263ce2c06f43342e29d207d89fea7533","msg":"JCBC-153: Increase view timeout and make it configurable.\n\nThis changeset increases the view timeout from 60 to 75 seconds\nand also makes it configurable through the connection factory.\n\nChange-Id: I8b5dca7a32a352c51b27d9ee9cd10485652d4e3b\nReviewed-on: http://review.couchbase.org/22755\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1353576099000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d3e17b045a1c307d6f11ba55d3556e79a016fc9e","msg":"JCBC-150: Implicitly add reduce \u003d true on reduced view\n\nThis changeset makes sure that when a reduced view is accessed and\nno setReduce param was supplied, setReduce() is set to true to make\nsure that appropriate view parsing codepath is used and no exceptions\nare raised.\n\nChange-Id: Ib2dfb5684428fe32bfdd654bef9947002bd5b1fb\nReviewed-on: http://review.couchbase.org/22710\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1353495920000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ba4e3e2714142a2c493260330a09df2edf527c14","msg":"JCBC-156: Fixing JavaDoc outdated params.\n\nChange-Id: I0f13b45a5ed27f39df2eaf58733eb43c555bd2a8\nReviewed-on: http://review.couchbase.org/22877\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/ViewConnection.java"],"date":1354103193000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e3313b1f359fa69f536c38f738b44732780b95ca","msg":"Adding debug output for jdk version on ant compile/test.\n\nThis changeset also gets rid of ant warnings and removes\nsome duplicated content.\n\nChange-Id: Ie40fc881177dec0e37c92225d87dee7223df910e\nReviewed-on: http://review.couchbase.org/22845\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1354008339000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3663b5e58115fa4926cbcee9519ca57b663d054b","msg":"JCBC-152: Adding Test docs.\n\nThis changeset adds the test documentation and renames the README\nfile name to .md to be consistent and short.\n\nChange-Id: I2398093cfed0e75436804a4b6fa4458f58d209bf\nReviewed-on: http://review.couchbase.org/22874\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["README.md","TESTING.md"],"date":1354093342000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"21fe279347d89881fb25f959136ba416638c37fc","msg":"JCBC-35: Don\u0027t compare vBuckets on MEMCACHE bucket reconfigs.\n\nThis changeset checks the bucket type before applying vbucket checks. This\nprevents the problem of trying to compare vbuckets when there are none.\n\nChange-Id: I7180e4347241064326542deca85240dbb18e9bdd\nReviewed-on: http://review.couchbase.org/22878\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java"],"date":1354104345000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"328ea1e04928e39d3ad892885baf34ae62528d3a","msg":"JCBC-155: Adding JavaDoc for *View.java files.\n\nThis changeset adds JavaDoc for AbstractView, SpatialView and View.\nIt is intended to clarify their usage and what they can be used for.\n\nChange-Id: I62b9bda1eb4b006fa012be909cec92a66e3fafdc\nReviewed-on: http://review.couchbase.org/22872\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/AbstractView.java","src/main/java/com/couchbase/client/protocol/views/SpatialView.java","src/main/java/com/couchbase/client/protocol/views/View.java"],"date":1354090865000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"46fd97e15d1d95221fc312cbf17df33928b07a02","msg":"JCBC-63: Implementing Design Document Management\n\nThis changeset enables the creation and deletion of design\ndocuments with appropriate views. It also adds tests for\nthe new functionality and allows the creation of spatial\nviews as well.\n\nChange-Id: I51ff2e4306698a76b9481d7f23f0c887744baa16\nReviewed-on: http://review.couchbase.org/21380\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewDesign.java","src/main/java/com/couchbase/client/protocol/views/ViewDesign.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/protocol/views/DesignDocumentTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/protocol/views/ViewDesignTest.java"],"date":1349439625000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bb1c6ae743964e81e5f9a92d844c5a83db4a9c4b","msg":"JCBC-158: add debug\u003dtrue to query options.\n\nThis changeset adds the debug\u003dtrue to the query options and also\nprints the JSON response as a raw string to INFO when the debug\ninfo is encountered.\n\nChange-Id: Ic6c9f4f8f8551a110aae6052b8d1c08c216754e8\nReviewed-on: http://review.couchbase.org/22923\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1354261323000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aa077cf73e748bb26613495fcb0c889eb358d2fb","msg":"JCBC-157: Really wait 10 seconds for the reconnect threshold.\n\nThis changeset fixes a typo that leads to unexpected behavior in the\nreconnection threshold section of the connection factory.\n\nChange-Id: I6d72b705d14a3ad1a8709ff2875d8fef430ce43b\nReviewed-on: http://review.couchbase.org/22902\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1354192083000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"32c18017ef32385fe361ab3e4f382d5a58a2a309","msg":"JCBC-148: check persistence against node count\n\nThis changeset verifies the persistence requirements against the\ntotal node count and returns an exception if the requirements can\nnot be satisfied by the current cluster layout.\n\nNote that this does NOT look at how much nodes are available for\na given key, this needs to be implemented as an enhancement.\nThe corresponding enhancement can be found at JCBC-161.\n\nChange-Id: I531ad01b332a367256a8a1c6a0941b3683dede9e\nReviewed-on: http://review.couchbase.org/22936\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1354268164000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"ingenthr@cep.net","committerTimeZone":"GMT-08:00","numberOfBranches":0,"hash":"06467553c0fd4872fd15a706ccc471080a74f6c9","msg":"JCBC-154: Merge special release 1.1c branch fixes in for release 1.1.\n\n* gerrit/release11c:\n  JCBC-130: Add a timeout for unresponsive http connection fetches.\n  Correcting view tests with wrong exception handling.\n  [Backport] Cancel view requests when the operation is cancelled.\n  JCBC-100: [Backport] Add better error handling on view fetches.\n\nConflicts:\n\tsrc/main/java/com/couchbase/client/CouchbaseClient.java\n\tsrc/test/java/com/couchbase/client/ViewTest.java\n\nAlso, had to add a minor change to ViewNodeTest.java to add a view\nsince the NoDocsOperationImpl had changed.\n\nChange-Id: I9a1ddd2b57c3a2d5e8801414ab72b4d435c7c5cb","modifiedFiles":["ivy.xml","ivy/couchbase-client-test.xml","ivy/libraries.properties","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1354554523000,"numberOfModifiedFiles":6},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30390e57b31b7ffee8281cd44245f58b73ec85da","msg":"JCBC-160: Merge current release 1.0 branch fixes in for 1.1.\n\n* gerrit/release10:\n  JCBC-120: Fix NPE on null for password. Backport.\n  JCBC-70: Fix Authentication to non-default bucket when connecting new node\n\nChange-Id: I4a2db78d48f145be7e61d09a31c293f8365646eb\nReviewed-on: http://review.couchbase.org/22975\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1354525875000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"97496987ee6b5cebac9729faea5931f40059edb1","msg":"JCBC-147: Rename getViews to getDesignDocument\n\nthis changeset aligns the design document read method with the newly\nadded creation and deletion api methods.\n\nWARNING: this is a API break!\n\nChange-Id: Idbc5cba57cf9d7b8c34e1fed0f621d8c64772ebd\nReviewed-on: http://review.couchbase.org/22713\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperationImpl.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1353503140000,"numberOfModifiedFiles":6},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c97ef0ee5895fe702406a831fbb495f8f4c6c82a","msg":"JCBC-162: Re-enable delete with durability (observe).\n\nThis was removed while some server changes for responding\nwith CAS in the case of delete were merged into the 2.0\nbranch. Since that has been resolved, this feature should\nbe re-enabled.\n\nThis reverts commit f5603e21c7cbf94d4804e01688c1160375dae418.\n\nConflicts:\n\tsrc/main/java/com/couchbase/client/CouchbaseClient.java\n\tsrc/test/java/com/couchbase/client/CouchbaseClientTest.java\n\nChange-Id: Id9c195afdcd5253be6d590a481816a38065c98e1\nReviewed-on: http://review.couchbase.org/22998\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1354563220000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6b630b337c0ebe0dba80285093709bf360cf3be5","msg":"Depend on spymemcached 2.8.9.\n\nA change in spymemcached was made to allow keys to not be\nrestricted by ASCII protocol rules.  We\u0027d like that change\nhere as well.  Note that the 250 character limit remains.\n\nChange-Id: I0997aac25e97d88064d0f7a714cc92de4e3d4c4a\nReviewed-on: http://review.couchbase.org/23000\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1354565587000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8898f423dbf993121142e6a53666ed28c1deb42a","msg":"Checkstyle fixes.\n\nChange-Id: I42768e7d978bf6c8377edacd1f4b5e0b55d40ae8\nReviewed-on: http://review.couchbase.org/23090\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewDesign.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewDesign.java","src/main/java/com/couchbase/client/protocol/views/ViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java"],"date":1354731002000,"numberOfModifiedFiles":16},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5c8037e704d56d1d7594d8a210b8d89e5c014749","msg":"Small JavaDoc cleanup.\n\nChange-Id: I7c4888a3ca63fba16cf07f68320b0213dab573de\nReviewed-on: http://review.couchbase.org/23087\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java"],"date":1354727869000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6f68dad93a39b8666d7200d74f7633b0529799f9","msg":"JCBC-165: Allow the possibility to force an array on ComplexKey\n\nThis changeset adds the forceArray() method to the ComplexKex\ninstance and as a result makes it possible to return an array\nwith one element (even when only one is given).\n\nChange-Id: I8cb022fd4f7aff0608a57a26a9f9f416c7109a81\nReviewed-on: http://review.couchbase.org/23086\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java"],"date":1354727522000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"81261872c6d33727e8bc5696be7f7493f1fde695","msg":"JCBC-163: Fixing TAP errors\n\nThis changeset corrects the client usage and moves to new\nJUnit test style. It also fixes the assertion errors that\ndid show up previously.\n\nChange-Id: Ic1221bae6ce5da97c1692823b751c812d48980d8\nReviewed-on: http://review.couchbase.org/23088\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/TapTest.java"],"date":1354729667000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e030f67f5d6d69d81fcdcdaa99fd72b02c2440f1","msg":"Adding replica on bucket creation to make the replica test pass.\n\nThis changeset adds the replica on the test bucket creation to\nmake sure the ReplicateTo correctly works.\n\nChange-Id: Id3abb61531a9d5d8b1b2aeb8c7853528fc5f95ba\nReviewed-on: http://review.couchbase.org/23121\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1354810158000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff1271ff6dd7143c0e731b94b8ea1ee5ddd53990","msg":"JCBC-144: Implement flush over HTTP\n\nThis changeset implements the flushBucket method which handles flushing\nover HTTP instead of using the memcached flush command.\n\nNote that in the process of implementing this, issue MB-7381 was found\nand thus dependent JCBC-173 was filed.\n\nChange-Id: I3d46497f1693b0b5f550b83b521b3cbde092a0b9\nReviewed-on: http://review.couchbase.org/22445\nReviewed-by: John C. Zablocki \u003cjohn@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/clustermanager/FlushResponse.java","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/ClusterManagerTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1352726345000,"numberOfModifiedFiles":12},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9d948c7176e51d2a8fe301bcd99879a969f422fd","msg":"Renamed the bucket create method to abstract type better.\n\nChange-Id: Ie454506b10b09b78c81b4ba03c62c4bcc0f7c411\nReviewed-on: http://review.couchbase.org/23153\nReviewed-by: John C. Zablocki \u003cjohn@couchbase.com\u003e\nReviewed-by: Mordechai Nunberg \u003cmnunberg@haskalah.org\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1354939318000,"numberOfModifiedFiles":3},{"authorName":"Tugdual Grall","authorEmail":"tugdual@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ccde0d0738780b554cf6ad3c7ccea52eb00e24c8","msg":"Small typo in exception\n\nChange-Id: I8b6dd24aa2614d5de57d4504625c72c1b304cffa\nReviewed-on: http://review.couchbase.org/23157\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java"],"date":1354985059000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e4447b89cfc46b0453cbe8e23055ef1733cd997f","msg":"JCBC-168: Honor default view timeout.\n\nThis changeset also fixes default settings for other\nCFB values (observe-related).\n\nChange-Id: I2349b1bc05fbce752ba5cc0ab71cd8f9ef70e740\nReviewed-on: http://review.couchbase.org/23189\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1355212167000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7484ce125d01ddf27b9aed7fda5580d26f3da1ad","msg":"JCBC-167: Allow long values for ComplexKeys.\n\nThis changeset prevents the bug of throwing quotes around\nlong values. Now it is possible to use long values through\nthe ComplexKey object. Since this is tried as a last resort,\nno old behavior is subject to change.\n\nThis also adds some additional tests around booleans and\nnull values since those are primitives to JavaScript.\n\nChange-Id: I60c68aa48631b719cc7b5ec0328b257380a64874\nReviewed-on: http://review.couchbase.org/23194\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1355223052000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bad240d99f492346332130ebd1dba92b00a246c9","msg":"JCBC-190: Allow ComplexKeys to work with all kinds of numbers.\n\nThis changeset switches from parsing longs to the more generic\nNumberFormat.parse method. This allows the usage of integers,\ndoubles, floats and longs at the same time. See the updated\ntest cases for examples.\n\nChange-Id: Id7b906958d1bbd75a1319aedffa0e8b6211dc9d6\nReviewed-on: http://review.couchbase.org/23605\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1356695945000,"numberOfModifiedFiles":3},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6394f844dadb65ae7a1dfb531f2aa15e9c88d4c6","msg":"Keep README and TESTING at ant clean time.\n\nChange-Id: I3c55d732d2857e9c6e23f535c5500d54eaf9f258\nReviewed-on: http://review.couchbase.org/23850\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1357846334000,"numberOfModifiedFiles":1},{"authorName":"Tugdual Grall","authorEmail":"tugdual@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Tugdual Grall","committerEmail":"tugdual@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"19280fd7dbfaf27734d7a1a23bc7197f8e059f77","msg":"Add new IDE support in .gitignore\n\nChange-Id: Ifdf6dded9d895181c8398e5d6dae1a1f2fd28fc2\nReviewed-on: http://review.couchbase.org/23156\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Tugdual Grall \u003ctugdual@gmail.com\u003e\nReviewed-by: Tugdual Grall \u003ctugdual@gmail.com\u003e","modifiedFiles":[".gitignore"],"date":1354980121000,"numberOfModifiedFiles":1},{"authorName":"deeptida","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"022c304f9479273232729eee9a95d8112f71f64c","msg":"JCBC-170: Update documentation on test classes.\n\nThis changeset updates the JUnit tests and adds docblocks\nfor clarity.\n\nChange-Id: I127eafcd02b58d37d019b5a2275c63223d55591d\nReviewed-on: http://review.couchbase.org/23021\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ClusterManagerTest.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/http/HttpUtilTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/DesignDocumentTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/protocol/views/ViewDesignTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPDownNodeTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/com/couchbase/client/vbucket/VBucketCacheNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorHostnameTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1354583819000,"numberOfModifiedFiles":28},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"59ed3eb01f6f8fb32c6e45ced163a5c707b844a5","msg":"Update dependency to 2.8.10-SNAPSHOT.\n\nChange-Id: Ife89ecbbd2912827704b38a5220c737514ed9be1\nReviewed-on: http://review.couchbase.org/23977\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1358293747000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8cf553b368568bec89d51382a2f6b7c977d8ff04","msg":"JCBC-211: Adding a new CouchbaseProperties class for property management.\n\nThis changeset adds a CouchbaseProperties class that centralizes\nproperty management for both file- and code-based properties.\n\nChange-Id: I2f32fcb59460630d4cc250c786535980f3bd5dd2\nReviewed-on: http://review.couchbase.org/23942\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml","cbclient.properties.dist","src/main/java/com/couchbase/client/CouchbaseProperties.java","src/test/java/com/couchbase/client/CouchbasePropertiesTest.java","src/test/resources/cbclient-test.properties"],"date":1358247343000,"numberOfModifiedFiles":5},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a342c98c969e3656762f14e6e208a7f7fef2c0aa","msg":"JCBC-207: Correct Reconnect Logic on Failover\n\nThis changeset makes sure the reconnect logic works even when\nfailing over the node which is bound as the streaming connection.\nA test has been added to verify the threshold logic of the\nCouchbaseConnectionFactory works as expected.\n\nChange-Id: I314e157b05f77f795d262c234f91d8e1f1c357cc\nReviewed-on: http://review.couchbase.org/23801\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1357715779000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e7f9da376baaf3e2ad90980759fb02e0cfe2b9de","msg":"Cleaning up the codebase based on checkstyle suggestions.\n\nChange-Id: Ifbb79e7bf25ec20d301ead2a04a27d8cc12179e2\nReviewed-on: http://review.couchbase.org/23989\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml","src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseProperties.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowWithDocs.java","src/main/java/com/couchbase/client/protocol/views/View.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/CouchbasePropertiesTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1358344893000,"numberOfModifiedFiles":18},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5d283c26905847060a0e0a8dfeabfd8003b343e8","msg":"Happy 2013!\n\nThic changeset increments the copyright year to 2013.\n\nChange-Id: I91c24ca0d97215284a64e0a581e7ebd76a52f8d8\nReviewed-on: http://review.couchbase.org/23990\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Volker Mische \u003cvolker.mische@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/main/java/com/couchbase/client/ObservedException.java","src/main/java/com/couchbase/client/ObservedModifiedException.java","src/main/java/com/couchbase/client/ObservedTimeoutException.java","src/main/java/com/couchbase/client/StoreType.java","src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/TapMessagePrinter.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/clustermanager/AuthType.java","src/main/java/com/couchbase/client/clustermanager/BucketType.java","src/main/java/com/couchbase/client/clustermanager/FlushResponse.java","src/main/java/com/couchbase/client/http/AsyncConnectionManager.java","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java","src/main/java/com/couchbase/client/http/HttpUtil.java","src/main/java/com/couchbase/client/http/RequestHandle.java","src/main/java/com/couchbase/client/http/RequeueOpCallback.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/AbstractView.java","src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/HttpOperation.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/InvalidViewException.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperation.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/OnError.java","src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperation.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/RowError.java","src/main/java/com/couchbase/client/protocol/views/SpatialView.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewDesign.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowWithDocs.java","src/main/java/com/couchbase/client/protocol/views/Stale.java","src/main/java/com/couchbase/client/protocol/views/View.java","src/main/java/com/couchbase/client/protocol/views/ViewDesign.java","src/main/java/com/couchbase/client/protocol/views/ViewException.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewResponse.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseWithDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRow.java","src/main/java/com/couchbase/client/protocol/views/ViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactory.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationException.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/ConnectionException.java","src/main/java/com/couchbase/client/vbucket/Reconfigurable.java","src/main/java/com/couchbase/client/vbucket/ReconfigurableObserver.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java","src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/Config.java","src/main/java/com/couchbase/client/vbucket/config/ConfigDifference.java","src/main/java/com/couchbase/client/vbucket/config/ConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/ConfigParsingException.java","src/main/java/com/couchbase/client/vbucket/config/ConfigType.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParser.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/Node.java","src/main/java/com/couchbase/client/vbucket/config/Pool.java","src/main/java/com/couchbase/client/vbucket/config/Port.java","src/main/java/com/couchbase/client/vbucket/config/Status.java","src/main/java/com/couchbase/client/vbucket/config/VBucket.java","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/CbTestConfig.java","src/test/java/com/couchbase/client/ClusterManagerTest.java","src/test/java/com/couchbase/client/CouchbaseClientBaseCase.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/FailInjectingCouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/TestOperation.java","src/test/java/com/couchbase/client/TestOperationImpl.java","src/test/java/com/couchbase/client/TestOperationPutImpl.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/TestingCouchbaseClient.java","src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/http/HttpUtilTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/DesignDocumentTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/protocol/views/ViewDesignTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java","src/test/java/com/couchbase/client/vbucket/BucketObserverMock.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPDownNodeTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/ReconfigurableMock.java","src/test/java/com/couchbase/client/vbucket/VBucketCacheNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorHostnameTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1358345947000,"numberOfModifiedFiles":138},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"20daddfe90703cdb4b2216b87022fdf71400206c","msg":"Upgrading spymemcached to 2.8.10.\n\nNote, this is a prerequisite to the fix for JCBC-214.  There was\none fix at the SPY project level related to detecting failures.\n\nChange-Id: Ia377f28e7c98e9b9f5c01f7d255e0be523cc41d1\nReviewed-on: http://review.couchbase.org/23986\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1358341056000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7a3fb48cb60af67d8ad94e8136d0ace59107c923","msg":"JCBC-212: Command Throttling for CouchbaseClient\n\nThis initial draft of throttling for the CouchbaseClient manages\nbackoff times for commands based on the high water marks and\nmemory.\n\nIt knows three states: normal, high and critical and uses the\ngiven thresholds to throttle accordingly.\n\nChange-Id: Ie1886a86b0cf998260422b723bedf85f93f84440\nReviewed-on: http://review.couchbase.org/23658\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["cbclient.properties.dist","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseProperties.java","src/main/java/com/couchbase/client/internal/AdaptiveThrottler.java","src/main/java/com/couchbase/client/internal/ThrottleManager.java","src/main/java/com/couchbase/client/internal/Throttler.java","src/main/java/com/couchbase/client/internal/ThrottlerState.java"],"date":1357136557000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbdcd5d5f44b5f8561c523c87563391be9ed7e36","msg":"JCBC-214: Add read timeout on configuration fetch\n\nThis changeset adds a 5 second read timeout when the configuration\nis fetched from the server. This prevents a possible issue when\nthe couchbase server process is hanging, but the socket is still\nopen. In this case, the client now skips to the next in the given\nlist of nodes when there is no response after 5 seconds coming\nback (even when the socket has been opened properly).\n\nChange-Id: I155b522648d2e4b4848001b03e6eeb443dacad71\nReviewed-on: http://review.couchbase.org/24019\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1358421786000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"584a1f70953bcd90d120a0ef500d1eb9f791e582","msg":"JCBC-215: Refactoring viewmode property loading.\n\nThis changeset refactors the viewmode property loading by using\nthe recently added CouchbaseProperties class. This makes it simpler\nand more flexible to use. As of now, both \"viewmode\" and the\npreferred \"cbclient.viewmode\" property names can be used.\n\nChange-Id: Ie845ff0aeb4cbe4d0b0f51e7a21f0ba2367d3011\nReviewed-on: http://review.couchbase.org/24011\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseProperties.java"],"date":1358416668000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Deepti Dawar","committerEmail":"deepti.dawar@globallogic.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2d648611cf70ee271e6a652a5266f17119f535d0","msg":"JCBC-213: Implement better Exception names for CacheBucket\n\nThis changeset removes ambigous TODO exceptions and exchanges them\nwith proper ones.\n\nChange-Id: Ic9b922a6007ad6979e890aab43b024bdd4ea5808\nReviewed-on: http://review.couchbase.org/24046\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java"],"date":1358492772000,"numberOfModifiedFiles":1},{"authorName":"deeptida","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"daebd3958816b0e3ecfd6ced8364bb5aac33ff6f","msg":"JCBC-140: Throw ConnectionException during config bootstrap on invalid URI.\n\nThis changeset throws a ConnectionException instead of a ParseException\nto make it more clear what is happening during bootstrap. The exception\nis thrown when the /pools URI can not be read properly, this mainly\noccurs when /pools is omitted in the host list and therefore index.html\ngets used.\n\nChange-Id: I2bdc072d95727610758e4068a6793bf0c5bcd85b\nReviewed-on: http://review.couchbase.org/23648\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java"],"date":1357119587000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f4a802b3ee67d57742e114e54051beac1900f021","msg":"JCBC-216 Add BuildInfo on compile.\n\nThis changeset adds the proper compilation of the BuildInfo class.\n\nChange-Id: I63308b7605f5aaa690a2b96fe7db97f1d5e28500\nReviewed-on: http://review.couchbase.org/24048\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["build.xml"],"date":1358498072000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9ea0f1d95e516c523adb0aac829b6a10eb438cf5","msg":"Fixing unit tests to wait for persistence in order to test with stale\u003dfalse\n\nChange-Id: I5fbbfa5121f6ce7bc61c00a1a25c9a321c7115bf\nReviewed-on: http://review.couchbase.org/24151\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java"],"date":1358926618000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3d2ed6837dd33f0f554e9202f288627192d46650","msg":"JCBC-134: Harden Resubscription Logic\n\nThis changeset hardens the resubscription logic to catch and\nretry when the resubscribe process fails.\n\nChange-Id: Ie9a7d5f06b97efe8a04d4319be9214295adacf61\nReviewed-on: http://review.couchbase.org/24092\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1358754312000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"380f9d3e046d412c0bdbd8b044f212d3c088988f","msg":"Full round of checkstyle fixes.\n\nChange-Id: I841e75d9d2b5f7d1bc7455d35bcb52eee3ca93dd\nReviewed-on: http://review.couchbase.org/24156\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/internal/AdaptiveThrottler.java","src/main/java/com/couchbase/client/internal/ThrottleManager.java","src/main/java/com/couchbase/client/internal/Throttler.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperation.java","src/main/java/com/couchbase/client/protocol/views/SpatialView.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/CouchbasePropertiesTest.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java"],"date":1358939512000,"numberOfModifiedFiles":22},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f70ae04012dd9727d0268ad33494918580497fc4","msg":"JCBC-219: Fix reconnect logic on valid rebalance out/failover.\n\nThis changeset forces to reconnect the CouchbaseClient when a\nnode is rebalanced out, but still alive. The connection is\ncorrectly closed for netty and not \"hard\" disconnected. This\nprevents an issue where the client is left in a state where\nit does not receive new cluster updates because it still\nlistens on a node that has been removed.\n\nChange-Id: Ideefe229d22ee5becc3c6401d43f773a04aba56f\nReviewed-on: http://review.couchbase.org/24182\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java"],"date":1359039223000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"96cc87e964fe1c9fc93d10f2f7f690ca5e07a3b7","msg":"JCBC-223: Do not broadcast op on observe to -1 replicas.\n\nThis changeset changes observe behavior so that no broadcast\noperation is sent to -1 replicas. This prevents a possible\nexception when using only one node in the cluster but replicas\nare defined (but not available).\n\nChange-Id: I1995610efc17fd60046eada7dfc94c459c885208\nReviewed-on: http://review.couchbase.org/24261\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Tugdual Grall \u003ctugdual@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1359452717000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7134df1e338373ec197c13a7cdd2799a6b43442e","msg":"JCBC-227: Implementing backoff on resubscribe thread.\n\nThis changeset implements a backoff algorithm when resubscription\nis needed and no valid node can be picked up from the list. Each\ntry waits 1 second longer (from 0), up to 10 second max. It will\nloop until a valid configuration can be picked up.\n\nChange-Id: Ia5be1e74e16c5692d5a94a9df3ec366de3c0aaf0\nReviewed-on: http://review.couchbase.org/24322\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1359638829000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4b733eb37351aa62bab7c6d58d7f689f829ea704","msg":"JCBC-230: Release Connection also on cancel()\n\nThis changeset properly releases the view connection also\non cancel(), not only on completed().\n\nChange-Id: I6f2d5e83f4356db2e827b61098a94b4f7d9d6be0\nReviewed-on: http://review.couchbase.org/24343\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/http/RequestHandle.java"],"date":1359724364000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7395a8e09e6638649ab664a70f42c1976bfaffe7","msg":"Improving failure resiliency on view node writes.\n\nThis changeset makes it possible to retry a different view node\nwhen no connection could be established on the first one. After\na maximum of 5 retries the operation is cancelled. The change\nalso makes sure that no operations are written to a node that\nis currently shutting down.\n\nChange-Id: Ie438ac667e1236aa4315008ad2dbc1ce8bde28bd\nReviewed-on: http://review.couchbase.org/24342\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/http/AsyncConnectionManager.java","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java"],"date":1359730328000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"682954b1fe05734341c23676ec04c5c8ef0aeeab","msg":"Upgrading Spy to 2.8.11\n\nChange-Id: I55d941167c9aeaf6f9619cc19e3c15515e0f3cf2\nReviewed-on: http://review.couchbase.org/24406\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1360079602000,"numberOfModifiedFiles":1},{"authorName":"deeptida","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6781b2ad8352a8e48ca3889929e7cc0f31b6fe3b","msg":"Changes to remove hardcoding of the User and Password.\n\nChange-Id: Id2d2348e42114981118635ab32591b0e9adbb316\nReviewed-on: http://review.couchbase.org/24661\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java"],"date":1361181766000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6a077da1970fde40a43875a494c42e11fe0a2448","msg":"JCBC-210: Throw CancellationException when future is cancelled.\n\nThis changeset makes sure CouchbaseClient memcached operations\nbehave the same way as they do in MemcachedClient. In addition,\nthe semantics of HttpFuture have been aligned to OperationFutures.\n\nChange-Id: I0ce3f7fc6a40e99987c3bc32c24113d6ea4c0714\nReviewed-on: http://review.couchbase.org/24658\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/test/java/com/couchbase/client/internal/HttpFutureTest.java"],"date":1361177993000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95221b93236287a370cfd4d81da03f51de399fc8","msg":"JCBC-251: Allow replicas with index 0 to work.\n\nThis changeset makes sure that replicas on the first\nnode still get included in the observe broadcast. Before\nthis changeset, all replicas that live on the first node\nwill lead to a timeout because they never get included\nand as a result can never report replicate success.\n\nChange-Id: Ic5fc4602ed468bbbaaecc16932964782b6d1464f\nReviewed-on: http://review.couchbase.org/24817\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1361735435000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e9aca627a42911a9c3cdd443490d581c7cbadc86","msg":"JCBC-198: Update ConfigurationProvider on reconfigure.\n\nWhen a reconfiguration is needed, this changeset makes\nsure the new bucket instance is populated to the\nConfigurationProvider as well (not just to the node\nlocator), because some code of the stack - especially\nobserve - depends on it. This prevents the usage of\nan outdated map leading to IndexOutOfBound exceptions.\n\nChange-Id: Ic1ab87a1502ec4f72cf003bee786d07f263abdfa\nReviewed-on: http://review.couchbase.org/24818\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1361694629000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6843027a345c9902d1bd86052ca09057f14b02ea","msg":"JCBC-245: Allow Object instead of String as value.\n\nThis changeset aligns the allowed value types for mutate methods\nwith persistence constraints to those without constraints.\n\nChange-Id: I529a868c5b88b4b5ea193ca818e972c2367affd6\nReviewed-on: http://review.couchbase.org/24689\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1361267563000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"91e68d1056d73c9be486c1b8a1deed8388bec868","msg":"JCBC-253: Fail fast when no replica is available during observe.\n\nThis changeset checks if really a replica is available, not just\ntheoretically enough nodes configured. When the current replica\nindex requested is -1, fail. This is mostly the case when a\nfailover is triggered (no replica available), but no rebalance\nhas been triggered yet. This leads to timing out observes.\n\nChange-Id: I19310e2c3ce6f0409970cb150d371687e03467d6\nReviewed-on: http://review.couchbase.org/24867\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1361899379000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"73885f7298064c4ff8aac40cc4622f749f472f26","msg":"JCBC-27: exponential backoff when cluster is not warmed up\n\nThis changeset prevents operations against a warming up cluster and\nwaits until its in a warmed-up state or throws an exception after\nthe backoff limit is reached.\n\nChange-Id: I655700909b98179c3f828df863c2a4ce355fc9fe\nReviewed-on: http://review.couchbase.org/22933\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1354264920000,"numberOfModifiedFiles":1},{"authorName":"Mike Wiederhold","authorEmail":"mike@couchbase.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"12696264f0f0ccc775113417a49405f944a9b7af","msg":"JCBC-254: handle NOT_FOUND responses in observe() method\n\nThis is primarily for delete observe situations, where the item\nis expecting to transition to NOT_FOUND.\n\nChange-Id: If1c7d3aff0940a6534dbabf138eb95ba2df701f1\nReviewed-on: http://review.couchbase.org/24886\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1361931937000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68a348d993cadab9f8767e023ac908e7e0791020","msg":"Only check for replica if there really is one used.\n\nThis changeset changes the behavior on how the code\nmakes sure that there are enough replicas available\nin a way so that even if there is only a PersistTo\nconstraint applied and no ReplicateTo, it will not\nfail with an IndexOutOfBound exception. If this is\nthe case, then it is simply ignore and only the\nPersistTo logic is applied.\n\nChange-Id: Ibcfbe13cf0ee1ef791e6c3202723074b05d32833\nReviewed-on: http://review.couchbase.org/24935\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1362087452000,"numberOfModifiedFiles":1},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-08:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eaff6b0e67af7665301aa749722c97023e6d653b","msg":"Upgrade spymemcached dependency for 2.8.12\n\nChange-Id: If89ee8f3fdf4730777e768a917c7a8d401576c0b\nReviewed-on: http://review.couchbase.org/24888\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1361935609000,"numberOfModifiedFiles":1},{"authorName":"deeptida","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"946985a59be9cd058edd40c613381faf742fa5f4","msg":"JCBC-225-Fixes in the unit tests as per latest observations.\n\nChange-Id: I57110c4ac84e590cd340a8f39a895cf016d32850\nReviewed-on: http://review.couchbase.org/24299\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1359543070000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a02fc6e15c4897dd8d241d98dc8ddbafd9d91909","msg":"JCBC-249 : Observe tests added as per the test plan.\n\nChange-Id: Ic0116620fbdf1944432a1b643cda250c0b397f7e\nReviewed-on: http://review.couchbase.org/24767\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1361397660000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eebf48042457fb27de25db46927819cb6c9a8c27","msg":"JCBC-257 : Added default values of Hash Algo and Failure Mode when null.\n\nChange-Id: Id6525bbc651168ff57d93992fb1e79f802e8f35b\nReviewed-on: http://review.couchbase.org/24989\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1362484251000,"numberOfModifiedFiles":2},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68dc63537f7844aa787b48728fbb90d019ae640a","msg":"Create directories for docjar, srcjar and jar targets\n\nThe ant target \u0027mvn-install\u0027 doesn\u0027t create all directories needed,\ntherefore jenkins builder is failing to build artifacts\n\nhttp://sdkbuilds.couchbase.com/job/java-snapshot-build/18/console\n\nChange-Id: I8acb12eee4c1214febd2de8f49cdad3a8de706f2\nReviewed-on: http://review.couchbase.org/25077\nReviewed-by: Trond Norbye \u003ctrond.norbye@gmail.com\u003e\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["build.xml"],"date":1362997242000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9a277f6f84b8f420392111225c383239be75ee81","msg":"JCBC-261: Fix memcache compatibility on warmup backoff.\n\nSince vbuckets are not supported and warmup is not needed on\nmemcache buckets, immediately get out of the loop and make sure\nno vbucket access is done.\n\nChange-Id: I3c48e37428a83ff8b0841614271622e3345d263a\nReviewed-on: http://review.couchbase.org/25083\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1363012524000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"40ed0978716b5e1226a3f8764c23fb860e458a6b","msg":"JCBC-265: Fixing ConfigurationProviderMock for unit test.\n\nThis changeset fixes the mock to not throw an unsupported\noperation exception when reconfigure is called. This prevents\nthe unit test from executing correctly.\n\nChange-Id: I6c6fe6c8f5e39fbf8680e90249b608f0a60880dd\nReviewed-on: http://review.couchbase.org/25101\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1363070246000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0958708ab0425a8b91c3e32d7e07d577b50a92b8","msg":"Full Checkstyle run for 1.1.4.\n\nChange-Id: If3c252fd671c1f86ff25492f9977638253e765fc\nReviewed-on: http://review.couchbase.org/25107\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java"],"date":1363086806000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"053c653ebbbb5da14cb9398447acc40c1f63552d","msg":"JCBC-271: Don\u0027t force reconnect on add.\n\nThis changeset prevents nodes from being added prematurely, leading\nto duplicate channel assignments and exceptions. This also alignes\nthe CouchbaseMemcachedConnection functionality with the one\nprovided by CouchbaseConnection.\n\nChange-Id: I7ca1ba2a91f8324259af48688a4daf4ae4283341\nReviewed-on: http://review.couchbase.org/25171\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1363337577000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8afa04eaad5d34cdab83eafc3092b2b16332d9fd","msg":"Force 1.6 compat even when using 1.7 JDK on compile.\n\nThis changeset ensures that we keep 1.6 compatibility even when\nthe host where the JAR is created uses 1.7 or later.\n\nChange-Id: I20ea32d79d8a9a37c4097416a51ba98f34fa9ef8\nReviewed-on: http://review.couchbase.org/25201\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1363595498000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9badac84ff9af1b5f8869e7cc1487757578ce18","msg":"JCBC-135: better interoperability between the client and netty.\n\nThis changeset make the netty channel wait for inside a listener, so\nthat it possible to use the couchbase client inside a netty-based\nserver architecture. Netty by default forbids the waiting inside\na worker, therefore we need to assign the channel on a different\nthread and then wait based on a Latch.\n\nChange-Id: Ic14d0ec5dcd39e16986aa1c3386f0320bd386b41\nReviewed-on: http://review.couchbase.org/22589\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketMonitor.java"],"date":1353064175000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"76fa01c707a9f7ca7c31efa0f4d2433d6a8b742b","msg":"JCBC-232: Renaming javadocs to javadoc for standard compl.\n\nThis changeset renames the resulting mvn jar files for javadocs\nfrom javadocs to javadoc to conform with IDE and repository\nstandards.\n\nChange-Id: I1377f35cd249e109918b5ee9c966178e68b4b40d\nReviewed-on: http://review.couchbase.org/24652\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Tugdual Grall \u003ctugdual@gmail.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1361169642000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"67d9899b1ae4c95d5408cb395565e2c57b609399","msg":"Removing INFO Log message on view queries.\n\nThis message only shows up when docs are included and spams the logs,\nbecause it shows up on every query. Removing it aligns it with both\nother queries (reduced and no docs). Logs like this should be, if\nat all in place, debug level output.\n\nChange-Id: Iec62151a1542ba1ac588011a97c353911478e32f\nReviewed-on: http://review.couchbase.org/25360\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1364395613000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8bf710d0f1560c982e545458e83c7a6f27921d89","msg":"JCBC-278: Align default settings in builder.\n\nThis changeset makes the defaults for the factory the same when\ninstantiated through the builder as it would have been when\ninstantiated directly.\n\nChange-Id: Ibb8d20a23d1aab78c130f95cadcb36ee9a784ff2\nReviewed-on: http://review.couchbase.org/25448\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1364917580000,"numberOfModifiedFiles":2},{"authorName":"tgrall","authorEmail":"tugdual@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Tugdual Grall","committerEmail":"tugdual@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"23a7cba49c56a713f092d3dc66b22192a35ebde2","msg":"Add new operations (set/add/replace) without ttl - see JCBC-284\n\nChange-Id: Ia886f28e7b8b885f1100e6f949ce96ed2b228823\nReviewed-on: http://review.couchbase.org/25638\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Tugdual Grall \u003ctugdual@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/test/java/com/couchbase/client/CouchbaseSetWithoutTTLTest.java"],"date":1365781657000,"numberOfModifiedFiles":3},{"authorName":"tgrall","authorEmail":"tugdual@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fb690d51b1a7e00774bcb27a0f35040e62b7a240","msg":"Fix JCBC-288 : Issue Query parameter parsing\n\nChange-Id: Ib6b750147ad3e1feec5969ce68759cf5d956239a\nReviewed-on: http://review.couchbase.org/25790\nTested-by: Tugdual Grall \u003ctugdual@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1366379502000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"787b23c2409041e61c0b927a8d201935859ac08d","msg":"Fix Exception message that leads in the wrong direction.\n\nAn exception is raised when the number of vBuckets is not correct,\nbut the message states \"buckets\" instead of \"vBuckets\", which may\nlead to confusion.\n\nChange-Id: I2be6fd1ddcc38837dfc86196d324d6940eb16e99\nReviewed-on: http://review.couchbase.org/25661\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java"],"date":1365846886000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"60ad29585632beb4310bbf1ca153122209642588","msg":"JCBC-241: Refactoring Paginator\n\nThis changeset represents a complete refactoring of the Paginator\nclass, while keeping the old API the same.\n\nSome of the changes included:\n\n  - Only use one query against the Cluster.\n  - It now works against reduced views as well.\n  - Improved documentation.\n  - Various other smaller bugfixes.\n\nThe PaginatorTest class has been extended to test against reduced\nviews as well (the old test have not been modified on order to\nensure backwards compatibility).\n\nChange-Id: I50e9030c1c1efa46f5f65ca45d1c4945eeb78254\nReviewed-on: http://review.couchbase.org/25229\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/ViewResponse.java","src/test/java/com/couchbase/client/PaginatorTest.java"],"date":1363691879000,"numberOfModifiedFiles":3},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8cffb66dadba2d9075cc0770c95ddeb2ea5bdb0d","msg":"JCBC-177: Added code to support single null in view query\n\nChange-Id: If3b1e2cddda8ddad5d1568d96052347311569d41\nReviewed-on: http://review.couchbase.org/25415\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java"],"date":1364811858000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7ee82891a4f3c1e2759233bff9b2d28e11ccf0b2","msg":"JCBC-268: Optimize ReplicateTo.ZERO \u0026 PersistTo.ZERO\n\nThis changeset optimizes the persistence constraint methods\nwhen both are zero, which basically means do not check at\nall. Without this change, added latency is involved because\n\"observe\" is alaways called, even when not necessary.\n\nChange-Id: I8dd6b6226dc797ee066b2113ff7b67f48735baf8\nReviewed-on: http://review.couchbase.org/26182\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1368002374000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4a35caf707c2df20e5d800470e5a7d1f49f17a02","msg":"JCBC-282 Two tests added for connection refused and network un-reachable.\n\nChange-Id: I6bab9dd16a9804bfd4232c1433fc186028300703\nReviewed-on: http://review.couchbase.org/25563\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1365501413000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6786754cde354a4b6dad36d278d34d3196531166","msg":"JCBC-309: Catch ConcurrentModificationException in IO Thread.\n\nThis changeset adds the check to the overriden method, it has\nalso been incorporated in spy directly.\n\nChange-Id: Ic5d665b610fbf228408b798bf347c8835371efa7\nReviewed-on: http://review.couchbase.org/26465\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java"],"date":1369219361000,"numberOfModifiedFiles":1},{"authorName":"tgrall","authorEmail":"tugdual@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"50de8557d2a9ef5975b251e5241d9945a9da5ea3","msg":"JCBC-314: Bring README file up to date\n\nChange-Id: Iec1a77e1cb9e5e3533da5db3df93e3620b66ef05\nReviewed-on: http://review.couchbase.org/26774\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1370374037000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"83b3415fd9087cc24a94bc4fc94991dda8bca18b","msg":"JCBC-250: Fail Fast when Observe with Memcached Bucket is used.\n\nThis changeset makes sure that an obviously illegal operation\n(using persist/repliace with memcached type buckets) fails\nfast and with a expressive IllegalArgumentException and not\nfurther down the stack with a ClassCastException as reported\nin the JCBC ticket.\n\nChange-Id: Icb6acc019df737a7f2b10bc83f9a303594fd8369\nReviewed-on: http://review.couchbase.org/26541\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1369642861000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ad36ce93cf8e589e566f164fc15344053b02e155","msg":"Upgrade SPY to 2.9.0 (served from maven central).\n\nChange-Id: I281e60a8dff9b6a5d8d7504a7f07fe1904efd8eb\nReviewed-on: http://review.couchbase.org/26778\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["ivy.xml","ivy/couchbase-client-test.xml","ivy/couchbase-client.xml","ivy/libraries.properties"],"date":1370510032000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e319e0c338488ae52ec2f8dfc53fb773990db845","msg":"JCBC-161: Remove duplication for observe checks\n\nThis changeset removes duplication in terms of observe node\nsize checks. A less accurate one has been removed in favor\nof the - already in place - more accurate one.\n\nSince the exception names have changed, the tests have been\nadapted to reflect the new names. assumeTrue() fixes have\nbeen added to make sure they don\u0027t produce false positives\nin test scenarios which equal or more to 4 nodes.\n\nChange-Id: Ie8b3b129b2b8781d916b54bc06f31f20408e7dad\nReviewed-on: http://review.couchbase.org/26261\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1368439643000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff559d2ba2cf5c8ecae5dec9e330c350156bdaf7","msg":"JCBC-312: When vbucket master is -1, trigger reconfigure.\n\nThis changeset makes sure that when no active master is found,\nreconfiguration is properly triggered.\n\nChange-Id: I5f4f2b9aac9db1b536cba596e8ed062453b7a263\nReviewed-on: http://review.couchbase.org/26636\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java"],"date":1369996171000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8b6257d402659909f26c660e8e9fe976426e83d7","msg":"JCBC-313: Retry View Request if Response Code \u003e\u003d 300\n\nThis changeset makes sure that responses on view requests\nthat are either redirects or 500 on the server get retried,\nbecause we consider them non-fatal. Note that HTTP 400 are\nconsidered client side errors and are not retried.\n\nAlso, already cancelled or timed out ops are not retried.\n\nChange-Id: I0d93e3d5c95dd6565d0b726a0bfd2cf31bef2ad9\nReviewed-on: http://review.couchbase.org/26639\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1369992093000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"74cc27efb02a42ba1501429098551923f49b6c2d","msg":"JCBC-320: Catch ConcurrentModificationException also for Memcache\nBuckets.\n\nChange-Id: I86f1feaca2dfbdd5a80d6dfb46636dbd03045a01\nReviewed-on: http://review.couchbase.org/27066\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1371809956000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5b435621693381762625357d2867933ce237c17c","msg":"Removing unused generic type from DesignDocument.\n\nChange-Id: I7c13306854a3c986f5b52faabf3b2c792e983c35\nReviewed-on: http://review.couchbase.org/27077\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/DesignDocument.java"],"date":1372052752000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6e529cd097806beaa1fc7cf514b560153c054bd5","msg":"Adapting testStatsKey Testcase to account changes in 2.1.0.\n\nThis changeset makes sure that the test case passes for both\npost 2.1.0 and pre 2.1.0, because the exposed key stats\nhave changed between versions.\n\nChange-Id: Ia32dd34c5cb5b504471f4660f152e7f4799b8f66\nReviewed-on: http://review.couchbase.org/27215\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1372687525000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da8705b8d8751013534aac368f99186971aca5af","msg":"JCBC-76: Replica Read Command\n\nThis changeset implements the replica read command\non both the application level facing CouchbaseClient\nand also implements the backend changes neeeded.\n\nIt depends on the corresponding changes on the SPY\nproject (see SPY-113).\n\nChange-Id: Idfd0836adfd5212152f369e8e624d45c4c9ca2b4\nReviewed-on: http://review.couchbase.org/24750\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/ReplicaReadTest.java"],"date":1361376401000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b110e53088f9d5b922502ecafdda4f7f2130a316","msg":"JCBC-323: Make flush() shutdown-aware.\n\nThis changeset makes sure that when flush() is called, it properly\nchecks that we are up and running and not shutDown.\n\nIt also exposes the shutDown variable to all other package-private\nmembers.\n\nChange-Id: Id8fcd379c260ef6586d4a73b97dbf540b33a1372\nReviewed-on: http://review.couchbase.org/27216\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java"],"date":1372689924000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"293a9fd51fc25610cdbd28965260876a00483621","msg":"JCBC-318: Making sure reconnect logic is not called in parallel.\n\nThis also prevents the underlying logic to be executed more often\nthan needed and therefore mitigating race conditions and overloaded\nIO.\n\nChange-Id: I6c18feadf55c56bb5bc0ba5c8e6920337e452f21\nReviewed-on: http://review.couchbase.org/26860\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1370856618000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bc3d69acb23ad55d8ba495feb60f820f460a429d","msg":"JCBC-319: check config for memcache buckets.\n\nThis changeset makes sure that when using ketama with\nmemcache buckets, failing operations also trigger\nreconfiguration eventually. Note that this algorithm is\ndifferent than for the CouchbaseConnection, because ketama will\nalways find a next node. Therefore, we trigger reconfigure but let\nthe doc pass through to a separate node.\n\nChange-Id: I83ce342b76358a374469ca27e3807d8c3d8381af\nReviewed-on: http://review.couchbase.org/27065\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1371809255000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d1610b2aa798f1c5920a7057b98096aa22075755","msg":"JCBC-322 : Extended test coverage for the store, retrieve operations\n\nThis changeset adds more test coverage for the add, replace\nand set operations which are currently not covered by the\nunderlying SPY tests.\n\nChange-Id: Ie2ad5bd48dbea7ab09a76e3d4010355af5398231\nReviewed-on: http://review.couchbase.org/27167\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1372333770000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0b12bc63fb83e54aca10a297f6a2c22989dee0fa","msg":"JCBC-266: Harden HTTP Provider on empty pool buckets.\n\nThis changeset makes sure a proper exception is thrown when\nno valid bucket configuration could be found. The resubscriber\npicks it up and retries again.\n\nChange-Id: I254c5498a149fc2bab2f5459b10c0654354d23fe\nReviewed-on: http://review.couchbase.org/26862\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java"],"date":1370872757000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3e3e3a763214a14688b2746b47d7d82a8a00fe83","msg":"Fix MemcachedMock to align with latest SPY changes.\n\nChange-Id: I113802e89d1f74f93859e7298f06a693ea402d6b\nReviewed-on: http://review.couchbase.org/27261\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java"],"date":1372838813000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da3185683faef19d7d67bff7f630105cb6d9c633","msg":"Upgrade to SPY 2.9.1\n\nChange-Id: I615ec7a305c2177810e4307f41cd21a68d083a9a\nReviewed-on: http://review.couchbase.org/27214\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1372680756000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"768094058b610205b315c9047c7c23287b9b209d","msg":"Fix BucketMonitorTest and harden request code to avoid HTTP 401.\n\nThis changeset fixes the test cases to correctly pass in the\nusername. The server code has changed with 2.1 so that an\nauthorized header with empty user/password on the default\nbucket are no longer ignored, therefore leading to\nunauthorized responses in tests.\n\nThis does not affect production, because the code normally\npasses in the bucket name as the user, which gets recognized\nproperly. A small change also now exposes this unlikely\nsituation with an exception, so that it just \"doesnt stop\"\nsilently in this case.\n\nChange-Id: I46793cdc42e4851d72a81338e5ee5c47b3f86608\nReviewed-on: http://review.couchbase.org/27283\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java"],"date":1373004797000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"acad2ac6cf01140b563501e72e49ea6580a9fc68","msg":"JCBC-327: Adding missing CouchbaseClientIF Signatures.\n\nChange-Id: I505b95d1dbc76a365572ded83c85c5e6581ffe3e\nReviewed-on: http://review.couchbase.org/27307\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1373272407000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"db51d4d834407f134e5b0384c142b43b9bc51b9b","msg":"Checkstyle fixes before 1.1.8 release round.\n\nChange-Id: I675fda5d0d0de3155d1ddddc68e204b81f468142\nReviewed-on: http://review.couchbase.org/27309\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseSetWithoutTTLTest.java","src/test/java/com/couchbase/client/ReplicaReadTest.java"],"date":1373280579000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"45a09f4c1d345c3cce0a1a6e12056fafc08d841a","msg":"JCBC-325: Adapt Testcase to work with only one server.\n\nThe % 2 assertion on available servers is not needed (anymore)\nand can lead to false negatives on unit test runs with only\none target server in the cluster.\n\nChange-Id: I92f9edb8f5f9f9b7b4f3297a0f7576543840a9f5\nReviewed-on: http://review.couchbase.org/27608\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1374497349000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f49f71b854b4779c989d2ab1d01c0fdd592cd60","msg":"JCBC-332 : Tests added for observe and arithmetic operations\n\nChange-Id: Ie6bfac06cf168fddbbd7808a2579ece1e080c700\nReviewed-on: http://review.couchbase.org/27610\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1374509645000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8032572d692afbb75d992b0477c65ca17049e19a","msg":"JCBC-336: Refresh config while polling.\n\nThis changeset makes sure the actual config is always used while\npolling in the loop. This makes sure a potentially stale config\nis reloaded before getting used.\n\nChange-Id: I5e636672b2cc910a3b3d2272672939ca7edbd4b3\nReviewed-on: http://review.couchbase.org/27761\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1375185275000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a1d63e17dcdde8d3d7c28768879d0bbada4c705d","msg":"JCBC-338: Don\u0027t allow null for bucket and password.\n\nThis changeset makes sure that the code \"fails fast\" and throws\na semantically correct exception in case null (or an empty bucket\nname) is passed in. Otherwise, the data goes through and throws a\nNPE exception down the stack.\n\nChange-Id: I6d73f5dd551d1d9921a25cae8c58783e5f63afed\nReviewed-on: http://review.couchbase.org/27790\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java"],"date":1375263133000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2e00201b84b8601af7342bf819e39659ade57eaa","msg":"CouchbaseProperties should use the SPY LoggerFactory.\n\nBefore this change, these log messages were not properly\nlogged with respect to the configured logging endpoint.\n\nAlso, the informative log message has been degraded to\nDEBUG, because it is not used that often and it generates\nconfusion.\n\nChange-Id: Ibac70bf012be80439d4d2a4f894230d0fabadca2\nReviewed-on: http://review.couchbase.org/27597\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseProperties.java"],"date":1374496524000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e539f5c29222b238ff75b107e8e3cafb5c3ba083","msg":"Fixed Assertion failures from isDone() method call on future\n\nChange-Id: I39693e789222f39a263d365546fda169e1182645\nReviewed-on: http://review.couchbase.org/27885\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1375425486000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f8a69072d5c726ea5e48358cd98c5097fa0e60d2","msg":"JCBC-340: TAP backfill ignores replicas.\n\nThis changeset makes sure that only keys from the active\nnode get propagated to the TapStream. This helps, but is\nnot a full fix of the issue. See the corresponding linked\nissues from JCBC-340 for the ongoing other fixes.\n\nChange-Id: I4a7acaaa3066180be0e0949023c295aef2eb7685\nReviewed-on: http://review.couchbase.org/27916\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java"],"date":1375711261000,"numberOfModifiedFiles":2},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3617768f3a188e1675dfc1f07a26b37495be8368","msg":"JCBC-280 - Support for edit bucket functionality through cbc.\n\nChange-Id: Ia96f7653630a16e9c922a00882ff7fc1c1c195e8\nReviewed-on: http://review.couchbase.org/26557\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1369746318000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a106266f8f9f96ee87e0336a610b9bfa3f547344","msg":"JCBC-350: Avoide race condition in observe replica.\n\nThis changeset uses the locator only and avoids a possible\nrace condition where the config contains stale data that does\nnot correlate with the locator information.\n\nThis can lead to a possible IndexOutOfBounds exception down the\ncall stack.\n\nChange-Id: I4dea46c96ce78f7aaccf6cfff6ecd0629aa19894\nReviewed-on: http://review.couchbase.org/28477\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java"],"date":1377175010000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95971629b8d4f9978e88599af1930b69191dfe79","msg":"JCBC-346: Automatically detect SASL mechanisms.\n\nThis changeset, together with the corresponding spymemcached\nchangeset makes sure that the server automatically gets asked\nfor all supported SASL mechanisms and the most secure one is\nselected.\n\nA specific mechanism can be forced by providing a custom\nAuthDescriptor.\n\nChange-Id: I27b5ace1dc884f370f14db8ba713221a5e8779fe\nReviewed-on: http://review.couchbase.org/28389\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1376996093000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"82fc9dbdf76a502afe8f0e0be52319e012a73e63","msg":"JCBC-347: Adjust observe intervals for better performance.\n\nBy decreasing the observe poll interval, better throughput on\nintense replicateTo settings can be achieved. This can also be\nmodified through the Builder, but setting it to a lower value\nshould provide a better experience by default.\n\nAlso, the max poll cycles have been increased so together now\nthe max waiting time is 5 seconds.\n\nChange-Id: I348aaa28ef9c2fea4161750178c1308be4231e7b\nReviewed-on: http://review.couchbase.org/28391\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1377006878000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Trond Norbye","committerEmail":"trond.norbye@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c1ead909683d329bdbc054f70446ab194ffa8f99","msg":"Make sure ant clean does not wipe .idea directory files.\n\nChange-Id: I0db0906f36a2018e8ed918fa8e99aa2ec9cc7f01\nReviewed-on: http://review.couchbase.org/28764\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Trond Norbye \u003ctrond.norbye@gmail.com\u003e","modifiedFiles":["build.xml"],"date":1378222110000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8dc8b2a0003a054af9a1a09887dd4461d6885b12","msg":"Reset system properties before running the PropertyTests.\n\nChange-Id: I81a8bb4db3fd5b6f7955e2d7416918fa3e9cf97c\nReviewed-on: http://review.couchbase.org/28786\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbasePropertiesTest.java"],"date":1378288480000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ec311196362ba86341a1459288da644ea9cc283c","msg":"JCBC-349: Make sure flush() works on memcached buckets.\n\nThis changeset enables the pending flush() tests and makes sure\nthat they also work on memcached type buckets.\n\nChange-Id: I5b1916c7e3058a819c0787c60bad3cc8b3df4c21\nReviewed-on: http://review.couchbase.org/28599\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/test/java/com/couchbase/client/FlushTest.java"],"date":1377616608000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1fc5e0878a008e026a5bd358dbf7ad80443313f8","msg":"Upgrade Spymemcached to 2.10.0.\n\nThis changeset upgrades the spy dependency and also applies all\nneeded fixes for the upgrade (it passes the executor along to the\nfutures).\n\nChange-Id: Icea367bbe66aa9a3eaea9c85c307e04bf353840f\nReviewed-on: http://review.couchbase.org/28815\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1378372934000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fd4103f7fd6b79861c316c164f72b3131eb582a5","msg":"JCBC-138: Replace nodeList on reconfiguration to reflect changes.\n\nThis changeset makes sure that, after a reconfiguration, the new\nnode list is passed on to the configuration handler so that it is\naware of the new topology.\n\nThis changeset now makes it possible that also when only one node\nis passed in during construction, all of the other nodes will be\npicked up proactively.\n\nChange-Id: I810f6b4e419a1ddecf58c46d428ada66e17a84c2\nReviewed-on: http://review.couchbase.org/28785\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/CouchbaseNodeOrder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1378286834000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"281f142759ba3417950fa4963d5cd99cc502f9e2","msg":"JCBC-350: One more spot where to fix the race condition.\n\nThis changeset also fixes the possible inconsistency in the observePoll\nmethod, not only in observe itself.\n\nChange-Id: Ifbec6e88e2df534724e48a173413ec41d6f35175\nReviewed-on: http://review.couchbase.org/28933\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1378455857000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9956555729f67ce6c378d506e3d31e55dc5b864","msg":"Fixing FlushTest and warmup.\n\nChange-Id: I6598491eedc348a2edfe50caa074d62a41d31c8f\nReviewed-on: http://review.couchbase.org/28878\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/FlushTest.java"],"date":1378842662000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da6780856682b58a20af3667801a61412dedc45a","msg":"JCBC-343: Adding Listeners support.\n\nThis changeset builds on the foundation of spymemcached\n(ticket SPY-132) and adds functionality for replica gets,\nand views (http futures).\n\nChange-Id: I1a2b189947484555e0d51654913d0dd9681de9dc\nReviewed-on: http://review.couchbase.org/28109\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/internal/HttpCompletionListener.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ReplicaGetCompletionListener.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/test/java/com/couchbase/client/ReplicaReadTest.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/ViewNodeTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/internal/HttpFutureTest.java"],"date":1376307924000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"af5601b07ef42cfcbc0a652b7ea3177d2a45abe1","msg":"JCBC-333: Only query nodes with active vbuckets.\n\nChange-Id: I0bdfa213e1f8577a0ec1efee9c5191cf30792c38\nReviewed-on: http://review.couchbase.org/28693\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/VBucket.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigTest.java"],"date":1377852570000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f586f1af79b3e88ef968ec1c709f65b40c23c974","msg":"JCBC-330: Exposing expiration on more CAS methods.\n\nThis changeset exposes the - already implemented - expiration\nsetting on CAS methods to more signatures. This makes it easier\nto avoid a subsequent touch() on the sync methods and enables\nit at all on the persistTo/replicateTo variants.\n\nChange-Id: Icfb2e38811db41fe21e767b839bb78e821b77e14\nReviewed-on: http://review.couchbase.org/27886\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1375429891000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"493521418a801d9246c917c81d4b6f63aeceb0aa","msg":"JCBC-351: Harden asyncGetFromReplica.\n\nThis changeset makes sure that also the active node\nis considered in the replica list (to get a value\neven after a failover happened in the meantime) and\nalso make sure that if no replica node is active for\nthe key, reconfiguration is triggered to avoid dead\nnodes.\n\nThis is in alignment with the getPrimary() operations\nwhich use the same behavior.\n\nChange-Id: I5a9c7c888025069942c3db366e36dbd627f643e0\nReviewed-on: http://review.couchbase.org/28473\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1377006788000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"94045a03be31bfcff4dfedf69c75650632890fdf","msg":"JCBC-344: Support creation params through properties.\n\nThis changeset supports the creation of a factory through properties and\nalso enables it through the factory builder.\nChange-Id: I8b5fe5cd95dfa8800588a623a02d29d924bbd966\nReviewed-on: http://review.couchbase.org/28860\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java"],"date":1378372194000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4cafb384eeebd3ec7921fb8a6512cf16280c12dd","msg":"Changing groupId and adding targets for maven central.\n\nChange-Id: I3ebf070eb7a4db6e9a269be60d6bf36905d475cf\nReviewed-on: http://review.couchbase.org/28970\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml","ivy.xml","ivy/pom.template.xml"],"date":1379054590000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"08d4c800163bc97f6b8e22d63c21f99bef318d4c","msg":"JCBC-366: Properly override ExecutorService and Metrics.\n\nChange-Id: Ia1987d3dc9ca8cf8c73435ba505ada1fd83f265e\nReviewed-on: http://review.couchbase.org/29374\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java"],"date":1381160126000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6663bf84671f588f99f93c32019f0f805fd72f54","msg":"Mock should use a empty list instead of null for the servers.\n\nChange-Id: I103606e82f609231846998b59719fa170bd4624a\nReviewed-on: http://review.couchbase.org/29466\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java"],"date":1381472200000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"01043e3cca69c1a781a2a26f35eb89d480a25704","msg":"Make sure random tests have better chance of succeeding.\n\nChange-Id: Iacc07dfd949ffaaacb64e68349580952c6c51df2\nReviewed-on: http://review.couchbase.org/29465\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java"],"date":1381471856000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e93f92ae8e4d3facf73b0443f5c6120eb30de6b8","msg":"Make CouchbaseClientTests more resilient.\n\nChange-Id: I7476a1dc625000669d40f4f707e5c9003508fe11\nReviewed-on: http://review.couchbase.org/29467\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1381472813000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0540d9f51f08a331730f992b3385d8d7849ddeac","msg":"Updating spymemcached to 2.10.1\n\nChange-Id: Ide6d9c0191fc91a492b64022e2f12afb6f76083c\nReviewed-on: http://review.couchbase.org/29468\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1381476647000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"82dc6d2ab6900a5edbc27df81bc0fbdedb8f8599","msg":"JCBC-368: Avoid potential netty deadlock on failing streaming conn.\n\nChange-Id: Ia3246b960e2e05515c0d54214b1732cbaf570c8b\nReviewed-on: http://review.couchbase.org/29539\nReviewed-by: Michael Wiederhold \u003cmike@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java"],"date":1381735315000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ad8353b39d408984f28891fac144d5c21dba13e0","msg":"JCBC-371: Removing redundant reference of bucket/vBucket.\n\nThis changeset removes the redundant this.bucket reference in\nthe BucketMonitor, reducing memory a bit. Also, the observe\nnotifiers are now called directly and the needed bucket\nconfig is referenced from the parent ConfigurationProvider.\n\nChange-Id: I0b044388d570b8e321c6285488d9f07b6c0f163d\nReviewed-on: http://review.couchbase.org/29714\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java"],"date":1382521296000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ddbbf219ef262f5054a9442903fbe00764eb1339","msg":"Removing redundant declarations and making more fields final.\n\nChange-Id: I9f2dcb6e37544c237d11e6f4050fe1120344aecb\nReviewed-on: http://review.couchbase.org/29537\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/clustermanager/AuthType.java","src/main/java/com/couchbase/client/clustermanager/BucketType.java","src/main/java/com/couchbase/client/internal/AdaptiveThrottler.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/internal/ThrottleManager.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/test/java/com/couchbase/client/ClusterManagerTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/http/HttpUtilTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/DesignDocumentTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/protocol/views/ViewDesignTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigTest.java"],"date":1381738726000,"numberOfModifiedFiles":41},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"843575ac944c3e81661759244749f2e5b7256a72","msg":"Convert local-used only fields to local.\n\nChange-Id: I5711371b06a255b05c037cbaaa9ea1e46b6bbb68\nReviewed-on: http://review.couchbase.org/29538\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/ViewConnection.java"],"date":1381737482000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dbad2a413f17226503b3ca8d0881a0b7aa18f926","msg":"Make property tests more solid by clearing them properly.\n\nChange-Id: I63d73e441551b5944206c628dbfd47505ac070cf\nReviewed-on: http://review.couchbase.org/29735\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbasePropertiesTest.java"],"date":1382606834000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"65717a241e288778b916e2ea059151b95364e8e5","msg":"Refactor the ConfigurationParserJSON for clarity.\n\nThis changeset doesnt change any functionality but only refactors\nand properly comments the ConfigurationParserJSON.\n\nChange-Id: Ic534336f5421e9c0e928520665bde454cee4f653\nReviewed-on: http://review.couchbase.org/29849\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParser.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java"],"date":1383039876000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b259a099084be4dfc7a437887740a3fc884aff2c","msg":"Refactor ConfigFactory and optimize VBucket memory heap size.\n\nThis changeset refactors the ConfigFactory but not changing how it\nworks internally. In addition, VBucket objects are moved from int\nto short and only allocate as much memory as needed.\n\nChange-Id: Ifa8d2eff9a9cd7fe44fabb83ce8ec4ab1192f32b\nReviewed-on: http://review.couchbase.org/29850\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/VBucket.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigTest.java"],"date":1383049123000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a6f004e7e813c615a45ce92f9e4f56e2745675fd","msg":"JCBC-373: The replica get future to complete is not thread safe.\n\nThis leads to false positives while the future could be completed\nbut never is because of visibility issues.\n\nChange-Id: I28a74e3f44d28ab8e4f3780ddb158527484fd59d\nReviewed-on: http://review.couchbase.org/29823\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java"],"date":1382966877000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9b2cd202e7e202845d1367af5778cb558a5cf539","msg":"JCBC-374: Also trigger completion on active node replica doc.\n\nThis changeset makes sure that when a replica get (that is\nfanned out to all replica nodes + the active node) from the\nactive node returns first, the replica get future is also\ncompleted.\n\nThis fixes the situation where 1 replica is defined, this node\nis failed over and no data is returned (while of course the\nmaster node is still reachable and returns the result). Before\nthe data was returned properly but the latch on the replica get\nfuture was never counted down, and as a result never indicating\nsuccess.\n\nChange-Id: Ib6b513819ed9a686fdc80956ebb58edf9cfc6a43\nReviewed-on: http://review.couchbase.org/29848\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1383028316000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6953408ddc5f5c67aab453f4a986bd610bbc1edf","msg":"JCBC-369: Fix observePoll delete logic.\n\nThis changeset refactors the observePoll method, making it faster\nand also correcting the delete logic which is not correct for\ncertain scenarios (now it is correct with respect to the non-delete\nmethods).\n\nAlso, it optimizes the observe() method to only add those nodes\nto the bcast list that are actually needed to fulfill the\nconstraint.\n\nChange-Id: Ib101af5f1212123fcb103d335d40fb2bc79f8964\nReviewed-on: http://review.couchbase.org/29545\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1381836874000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"736d6ac77499cfc204f5e69b39be7fb67ca4be0a","msg":"Moving CouchbaseClient docblocks to the IF and adding @Override.\n\nSince the CouchbaseClient grows out of bounds with the recent\nadditions, moving the docblocks makes it shorter. Also, this is\nwhere they belong to anyway. Actual refactoring of the code\nwill follow in separate commits.\n\nChange-Id: I8d9f3a6c64a41b58c9a25df69fc17864acabd6ff\nReviewed-on: http://review.couchbase.org/29541\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1381831320000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dd91f06a18fa3d4494eb0330806fb6ea556d6ee9","msg":"Further hardening of ReplicaRead.\n\nThis changeset hardens the implementation of ReplicaRead further\nby applying the following changes:\n\n - Make sure the completedFuture is not overriden by later calls.\n - The \"cancel\" iterations on the monitoredFutures is synched as\n   advised by Collections#synchronizedList.\n - Make sure that replica reads are only \"fanned out\" to nodes that\n   are actually configured as a replica at the moment. For that\n   reason, a new method is added to the VBucketNodeLocator to return\n   a list of servable nodes for this specific key.\n - Along the lines of the previous point, make sure that an additional\n   request to the proper active master is only sent when it is actually\n   reachable (not -1 in the vbucket map).\n\nChange-Id: I6568e1c1fd5d779acf3fd1e52ed2d88b46a1a8b7\nReviewed-on: http://review.couchbase.org/30009\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java"],"date":1383549915000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5444a117e1fffb854bb205a82e7f595ec0e6b895","msg":"JCBC-375: Correctly reorder resubscriber to prevent race condition.\n\nThis changeset makes sure that the old reconfigurable is taken out\nof the old provider before it gets shut down to avoid a situation\nwhere it is null, leading to failures on subsequent reconnect\nattempts.\n\nChange-Id: I733ae5ecc0965a95299dbe5a8b9ca4f25742be31\nReviewed-on: http://review.couchbase.org/30010\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1383559814000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"50f61cb3a7a00c8d6b3321902cde69178e7cfc47","msg":"Reuse VBucket objects from last Configs to lower GC pressure.\n\nThis changeset allows to (optionally) pass in a existing Config\nand if VBucket objects are the same, those get reused in the new\nConfig and not creating new ones all the time. This lowers GC\npressure, especially during rebalance phases when 10 or more\nCouchbaseClient objects are used.\n\nTests have been added, please note that the JSON configs will\nbe separated out into resource files in a different commit.\n\nChange-Id: If979b5a52ffbcf7e87a4c59bb14f781bf48deaee\nReviewed-on: http://review.couchbase.org/29887\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/config/ConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParser.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigFactoryTest.java"],"date":1383120287000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f4aa27a83924fc37a7f503067bdbda90c0e9c4a3","msg":"Adapting test case for the latest observe changes.\n\nChange-Id: I0dab4692c29411d96ddea5297d8fd2959640626b\nReviewed-on: http://review.couchbase.org/30045\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Trond Norbye \u003ctrond.norbye@gmail.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1383636174000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Trond Norbye","committerEmail":"trond.norbye@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f1dcab369cf24a98880e057fd65f36cd341576f5","msg":"Upgrade to spymemcached 2.10.2\n\nChange-Id: I1aed2cbcd5552686b5a141828edf75d6bfb8afd1\nReviewed-on: http://review.couchbase.org/30051\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Trond Norbye \u003ctrond.norbye@gmail.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1383649340000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f55703c092dfef7c421c09be46f3e19e29339b7d","msg":"Converting deprecated methods on channelbuffer.toString()\n\nChange-Id: Ia4e2d9e11cba976f7aa230029b32bd303bc98df1\nReviewed-on: http://review.couchbase.org/30374\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java"],"date":1384761278000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6851cdccab2421e6b34d64a55f9cfc918021dae6","msg":"JCBC-380: Dynamically load ports from incoming config.\n\nThis changeset makes sure that the 8091 port is not hardcoded\nduring reconfigure, but loads and applies it dynamically\nfrom the config that comes in from the cluster.\n\nChange-Id: I4d06b9d80674069c1b46493777cbac4e476554a2\nReviewed-on: http://review.couchbase.org/30372\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/Config.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigTest.java"],"date":1384758902000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30b30cd42a14421652ce6c7261699626a3dcd40c","msg":"Add test case for SPY-146.\n\nThis changeset adds a test case to make sure observe with 2-byte\nUTF-8 chars works as expected. To pass, this requires at least\nspymemcached 2.10.3 in place.\n\nChange-Id: I91b629f3a69d2c5587d2ea7be5261ed015d8e6e6\nReviewed-on: http://review.couchbase.org/30702\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1385713791000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aef952f3818632aad4705b817f606c3c953aad36","msg":"Upgrade SPY to 2.10.3\n\nChange-Id: I65097bf0e5f04e3e08fa8d3d994943445f4de1e8\nReviewed-on: http://review.couchbase.org/30779\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1386049383000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1f9dd2e2de6b41ed13619dd9b79c4f7f6444d8f5","msg":"JCBC-386: Cleanup Query and add docblock for grouping.\n\nThis changeset performs non-behaviour-changing cleanup and\nenhances the docblock for setGroup and setGroupLevel to\nwarn users to not use both together since they override\neach other.\n\nChange-Id: Icfb73a6c7c53c83e2957d62226c95638776ef399\nReviewed-on: http://review.couchbase.org/31250\nReviewed-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java"],"date":1387459218000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"32fb5cd0f0133609f77428c2af6ac9281beebbae","msg":"JCBC-388: Rewrite View Connection Management\n\nThis changeset rewrites the connection management of the view layer\nby utilizing newer mechanisms in apache httpcore nio.\n\n\t- It uses a built-in pooling mechanism\n\t- Reduces the amount of threads used to a minimum\n\t- Fixes severe connection issues under failover conditions\n\t- Massively reduces the amount of code needed\n\t- Streamlines the reconfiguration process in ViewConnection\n\t- Makes the worker threads and connection size configurable\n\t- Handles connection lease on rebalance out\n\t- Adds better testing for the provided functionality\n\t- Writes the HTTP_HOST automatically to avoid costly DNS\n\t  lookups, fixing JCBC-151.\n\nChange-Id: Ie78466a0ec7e70118d1ed874684f690887ffb688\nReviewed-on: http://review.couchbase.org/31017\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/ViewNode.java","src/main/java/com/couchbase/client/http/AsyncConnectionManager.java","src/main/java/com/couchbase/client/http/AsyncConnectionRequest.java","src/main/java/com/couchbase/client/http/HttpResponseCallback.java","src/main/java/com/couchbase/client/http/RequestHandle.java","src/main/java/com/couchbase/client/http/RequeueOpCallback.java","src/main/java/com/couchbase/client/http/ViewPool.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/ViewNodeTest.java"],"date":1386755820000,"numberOfModifiedFiles":14},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3c7d3de4142c0b351d7733a49421a8ff36b0ff07","msg":"JCBC-390: Refactor ClusterManager\n\nThe ClusterManager needs to be refactored because the HttpCore dependency\nhas been upgraded. While the old code would still work, getting rid of\nthe deprecated pieces makes sense to keep the code consistent with the\nview logic.\n\nChange-Id: I2df6e086b9911fb1a50a6d2ab08239cbf4c6a342\nReviewed-on: http://review.couchbase.org/31246\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/ClusterManagerBuilder.java","src/test/java/com/couchbase/client/ClusterManagerTest.java"],"date":1387451839000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5d4e67d9ead9b61a213e77d35b65ca1c0b543c05","msg":"JCBC-361: Add real async observe capabilities.\n\nThis changeset makes the blocking-in-disguise methods really async,\nallowing to run them in parallel as needed. Observe calls are fired\noff in the callback pool, returning a new future that overlays\nthe results of the original one (same behavior as before).\n\nThe code is a little more ugly than needed, but it takes care to\ninherit the exact same behavor and messages than before.\n\nChange-Id: I626dd989b98940700f92dfdc36cf3ba5dd8c9765\nReviewed-on: http://review.couchbase.org/31214\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/internal/ObserveFuture.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java"],"date":1387290104000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95569c408c2f14069fab8f2b856ad1b6d75ef516","msg":"Fix ClusterManager too optimistic timeouts.\n\nAlso, make sure the PaginatorTests pass properly with a larger timeout\nsince persisting can take longer than the default timeout.\n\nChange-Id: Id11eceea654b3b4f1267dc61627d3f477eda445e\nReviewed-on: http://review.couchbase.org/31569\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/ClusterManagerBuilder.java","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/PaginatorTest.java"],"date":1388739930000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"db6f66917e7b837e4ca36983b5e6fcc1d0985c88","msg":"JCBC-396: Rename getDesignDocument to align with other methods.\n\nThis changeset renames the getDesignDocument and async* to\njust getDesignDoc. This helps with consistent naming for all\ndesign document operation.\n\nThe old method is marked as deprecated.\n\nChange-Id: I3a2b0df7138404e24619a2ebdbdebca3c74f2412\nReviewed-on: http://review.couchbase.org/31668\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java"],"date":1389097298000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"96d5dfb1747025f5c5b09a9cf12c247180b325d9","msg":"JCBC-361: Add specific observe timeout.\n\nThis changeset adds a longer timeout for futures when persistence\nor replication constraints (observe) are used. It currently defaults\nto 5 seconds, acknowledging that writing to disk may take longer\nthan just writing to ram.\n\nThe manual setting of maximum number of polls has been deprecated,\nbecause it is now calculated out of the observe timeout and the\nobserve interval, making it more flexbile and easier to configure.\n\nIn summary, regular operations still have the 2.5 second timeout,\nbut everywhere \"PersistTo\" or \"ReplicateTo\" is used, a longer,\n5 second timeout is used instead by default.\n\nChange-Id: Ifdee7550782c72bb71bc11ddede2c139e3b5436e\nReviewed-on: http://review.couchbase.org/31655\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1389090423000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"750171ad9dec822def38efac666b655adb1bfd86","msg":"JCBC-397: Adding INFO-level config output on init.\n\nThis changeset prints info-level output on initialization, making\nit easier to report and debug issues when they show up in logs.\n\nChange-Id: I12cb58cded7ef106cf727c1eeab93101024d3c56\nReviewed-on: http://review.couchbase.org/31667\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java"],"date":1389096703000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Trond Norbye","committerEmail":"trond.norbye@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"60c6d8946fcadc7e8bd5e87fe6706eef25d24cf3","msg":"JCBC-361: Only add CAS if not null.\n\nChange-Id: Ia86667ce291ad9c22f4a847510df4383b07fb378\nReviewed-on: http://review.couchbase.org/31710\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Trond Norbye \u003ctrond.norbye@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java"],"date":1389164049000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"29eae04a56886d103dc5c4a87690035c3bd9aa80","msg":"Upgrade spymemcached to 2.10.4\n\nChange-Id: Id2ba05399a89c348eda22afd57f3dfda42d0ceae\nReviewed-on: http://review.couchbase.org/31733\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1389202993000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"556d3f92ad93b0afaa30ec4c6ea72286416754cf","msg":"SPY-149: Notify Listeners after Complete.\n\nChange-Id: I90c58ffd02c841bf1dbc1a8b67717d47954fcde1\nReviewed-on: http://review.couchbase.org/31734\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1389206915000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2ad8cdfc02d30332e089a3da2ea5a281a2bdc92b","msg":"JCBC-399: Do not notify ViewFuture listeners twice.\n\nThis changeset fixes a regression introduced in the latest\nlistener changes, which makes sure to not notify the listeners\ntwice on the ViewFuture (which is triggered only when\nsetIncludeDocs(true)).\n\nChange-Id: I59d0b7442b3aac451bfdd277b7d24681423ae7d6\nReviewed-on: http://review.couchbase.org/32305\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/ViewFuture.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1389594214000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"33d020afac245b52629da2c55f70a1d1c6b3b543","msg":"JCBC-403: Harden reconfigures on view-based workloads.\n\nThis changeset makes sure that even on view-based workloads, lost\nstreaming connections are detected properly, leading to faster\nworking states again. In particular, it contains:\n\n - Signaling an outdated config also on failing http requests\n - Signaling an outdated config on bulkget workloads (by identifying\n   inactive nodes)\n - Making sure the proper resubscriber is called with the bucket\n   config when the monitor is disconnected.\n\nChange-Id: Ib64faa78a983347d38479a1ab1c3ac9c181ae7ed\nReviewed-on: http://review.couchbase.org/32727\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/http/HttpResponseCallback.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java"],"date":1390396720000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e65abda2ae72987f4514f7a440d6f194ec787087","msg":"Updating Spymemcached to 2.10.5\n\nRemoving the shutdown method because it is now part of the\ninherited spymemcached connection.\n\nChange-Id: Icf881d3de30f11655920091600badba3987e615d\nReviewed-on: http://review.couchbase.org/33285\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Brett Lawson \u003cbrett19@gmail.com\u003e","modifiedFiles":["ivy/libraries.properties","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java"],"date":1391691052000,"numberOfModifiedFiles":3},{"authorName":"Philipp Fehre","authorEmail":"philipp.fehre@googlemail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aee906f8fb2bf2488989a5a20fbc88ac48890aac","msg":"configurable cluster.adminname, cluster.password\n\nprovide option to set cluster.adminname and cluster.password in the\nbuild.xml test related properties section.\n\nChange-Id: I46c2e595ed16d477bbd09062cf554c7df2915928\nReviewed-on: http://review.couchbase.org/33137\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1391443925000,"numberOfModifiedFiles":1},{"authorName":"Deepti Dawar","authorEmail":"deepti.dawar@globallogic.com","authorTimeZone":"GMT+05:30","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5707da5e01e0f6cc6fad6531e1ba28b6124446bf","msg":"JCBC-400 : New feature test for credential encryption CRAM-MD5 or PLAIN\n\nChange-Id: I003f5987f56392bd50b871e7a1eb4182008ccc2b\nReviewed-on: http://review.couchbase.org/32355\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Deepti Dawar \u003cdeepti.dawar@globallogic.com\u003e","modifiedFiles":["src/test/java/net/spy/memcached/auth/AuthTest.java"],"date":1389695969000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"19437e96b4fefea3193bfbf20871453867de7e23","msg":"JCBC-337: Update Config from NMVB-Responses.\n\nThis changeset takes an incoming \"Not My VBucket\" response from the server,\ndoes some conversion logic and then passes it on to the ConfigurationProvider.\n\nThe config then gets parsed and stored as any other configuration coming\nfrom a streaming response. A test case is added to veriy that behaviour.\n\nChange-Id: I83a838ca0c086426779c092001329b00d11a19e7\nReviewed-on: http://review.couchbase.org/32425\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/test/java/com/couchbase/client/CCCPAwarenessTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java"],"date":1389789755000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"25a447464e98c1f56bdd9c7748640b2a93f0711e","msg":"Suppress unchecked warnings on completion listeners.\n\nChange-Id: Icf7af9df6b7a1fa3df6892ec0a3b3e4175f86d33\nReviewed-on: http://review.couchbase.org/30375\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/internal/ViewFuture.java"],"date":1384761516000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1684f6bcaa133aba0e69a418281d8b650d18b789","msg":"JCBC-337: Implement a Combined Configuration Provider (Binary + HTTP)\n\nThis changeset provides a combined http and binary configuration provider. It is\ndesigned to handle bootstrap and monitoring completely autonomously, further\ndecoupling it from the rest of the codebase.\n\nChange-Id: I13b5029b98c9327cac6927ea35efe529edbb2f84\nReviewed-on: http://review.couchbase.org/32589\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java","src/main/java/com/couchbase/client/vbucket/config/CacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfig.java","src/main/java/com/couchbase/client/vbucket/config/Node.java","src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/provider/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/provider/CouchbaseConfigConnection.java","src/main/java/com/couchbase/client/vbucket/provider/GetConfigOperationImpl.java","src/test/java/com/couchbase/client/CCCPAwarenessTest.java","src/test/java/com/couchbase/client/CbTestConfig.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/provider/BucketConfigurationProviderTest.java"],"date":1389952487000,"numberOfModifiedFiles":19},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e7b8b777d176e37039ac4a8bf1a7aa5c9324b6e9","msg":"Correcting mailmap for shortlog\n\nChange-Id: I83c239dc4a7ced77059261ae7c689d0ae6bd54cd\nReviewed-on: http://review.couchbase.org/30682\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":[".mailmap"],"date":1385629911000,"numberOfModifiedFiles":1},{"authorName":"John Douglass","authorEmail":"johnsdouglass@yahoo.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"009833c1526a3431e265735c96a8b48dde727cd2","msg":"JCBC-240 Add total number of rows in ViewResponse\n\nChange-Id: I82bcb65e48e3d6fde8d5361ee242f89960d38a6f\nReviewed-on: http://review.couchbase.org/25027\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewResponse.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseWithDocs.java","src/test/java/com/couchbase/client/ViewTest.java"],"date":1362614451000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"de89c8404a27c057ed1f4d32ce187891971d826b","msg":"Rename config types for clarity.\n\nThis changeset renames the DefaultConfig in CouchbaseConfig and\nthe CacheConfig into MemcacheConfig to more accurately describe\nthe type of buckets they are referring to.\n\nChange-Id: Icfa43b63595a362d14c1b0938094fc1d4fcc56b3\nReviewed-on: http://review.couchbase.org/30373\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/vbucket/config/CouchbaseConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/MemcacheConfig.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/com/couchbase/client/vbucket/config/CouchbaseConfigTest.java"],"date":1384760653000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b8f90dcb1c02e1f293fefb4f4d97682793dfcc8c","msg":"Use CouchbaseConfig instead of the incorrectly used DefaultConfig.\n\nChange-Id: I2081ef6cf37b83c8a3cb9c7237b01ccafdcf58eb\nReviewed-on: http://review.couchbase.org/33788\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java","src/test/java/com/couchbase/client/ViewConnectionTest.java"],"date":1392885529000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Matt Ingenthron","committerEmail":"matt@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3d2fd917cae4c2ac7f8e93a5964383afc8469377","msg":"JCBC-418: Fix potential deadlock when reconfiguring.\n\nThis changeset fixes a potential deadlock which can happen during\nreconfiguration and a failing node. When a 500 error response comes\nback from the server, the httpcore IO pool handles the retry and\npasses it back to our logic, where it grabs a new node to ask. This\nnode list is synchronized.\n\nIn parallel, when a reconfiguration happens, we synchronize on this\nlist and mark the appropriate node in the pool for shutdown. We\narrive in a deadlock situation because in our code the node list\nis synchronized (waiting/holding) and in the httpcore code there\nis a lock (waiting/holding) on the internal node to shutdown, but\nit is still hold by the retry process.\n\nThis changeset moves the actual shutdown out of the synchronized\nblock, making sure that parallel requests can progress. The node\nhas been removed out of the list already, so it will not be\ntried again for a regular view request (and we can shut down the\nopen connections behind the scenes).\n\nChange-Id: I0f65d440ce593d0a795ee068e5d84348b9207b5b\nReviewed-on: http://review.couchbase.org/33827\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/ViewConnection.java"],"date":1392974281000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b4c4bebb68bc1c27ebd041bf8711710650aae313","msg":"Enable SNAPSHOT uploading through ant target.\n\nThis changeset adds an additional ant target which deploys snapshot\nreleases directly into the sonatype snapshot repository.\n\nSee https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt\nfor more details on how to setup local authentication.\n\nChange-Id: I3dc26b70c3547e42c0181486bc4e189b5e30ace9\nReviewed-on: http://review.couchbase.org/33881\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["build.xml"],"date":1393230950000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"de9c301c5fb5fccfbfe76546108a7e254c6ed9d8","msg":"Upgrade Spymemcached to 2.10.6\n\nChange-Id: I48d1f2857f9d4b3e394e994f8a9344ace029a278\nReviewed-on: http://review.couchbase.org/33907\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties"],"date":1393329546000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"332d1f4761ef03eeacc8c32549a0b8ce2111daf5","msg":"JCBC-417: Expose (async)getsFromReplica.\n\nThis changeset exposes the same replica read functionality as before,\nbut this time also exposes its underlying CASValue. The signature is\na mix between a replica get and a gets operation.\n\nChange-Id: Id094092280115e66af6962eb8898a6e4b5f27f78\nReviewed-on: http://review.couchbase.org/33884\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/test/java/com/couchbase/client/ReplicaReadTest.java"],"date":1393253457000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d8ef99e1c92028bc87c08f1ac5915cc70346224c","msg":"Harden \"bucket state\"-dependent test cases.\n\nThis changeset makes sure that various test cases which depend\non bucket state (that is mostly warmup happening) are more\nresilient to false-negatives. This is mostly achieved through\nlarger allowed timeouts, which allows slower disks also to\ncatch up between the unit tests.\n\nIt increases the timeout for the http cluster\noperations in the test from 2.5 seconds (operationTimeout) to\nthe more realistic HttpTimeout (75 seconds).\n\nChange-Id: I4d884c74802ad9906b3a44e91ff9b45f1ca6b650\nReviewed-on: http://review.couchbase.org/32306\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java"],"date":1389601171000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"abf39bf460424afcc5993979bac41874975c7759","msg":"JCBC-421: Rewriting the Query internals for better performance.\n\nThis changeset is a complete rewrite of the Query object internals while\nkeeping the external API completely identical. Under the covers, it now\nuses a String array instead of a HashMap to provide faster looping and\nbetter cache friendliness.\n\nAlso, values are now encoded and quoted (if needed at all) during the set time\nand not when the query string is created. This gives even better performance\nwhen most of the Query objects are cached and just fields changed on the fly.\n\nIt also uses a custom compiled regex to identify JSON objects and does not rely\non the slower spymemcached \"isJSONObject\" anymore.\n\nIn JMH benchmark tests, performance was 100% better or more compared to the\nold implementation. The performance difference is even higher when more params\nare set on the Query object.\n\nChange-Id: I73e9157093d5f0ea82b72d424548d1bc34afd5b5\nReviewed-on: http://review.couchbase.org/33930\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/protocol/views/Query.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java"],"date":1393421485000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07c7ea3f4feebb4d3f6819f29e272b69892dd053","msg":"JCBC-426: Add support for manually disabling carrier or http bootstrap.\n\nThis changeset adds the possibility to manually disable both carrier and\nhttp bootstrap through system properties.\n\nCarrier: System.setProperty(\"cbclient.disableCarrierBootstrap\", \"true\");\nHttp: System.setProperty(\"cbclient.disableHttpBootstrap\", \"true\");\n\nIf such a setting is issued, a INFO level message is logged to make it easier\nduring debugging and failure analysis. Note that in general, tweaking such\nparams is not necessary, althogh it might help in certain debugging and\nfailure conditions.\n\nChange-Id: I654bcecd0a1ffa576b7a5c146dc4580e37a7995e\nReviewed-on: http://review.couchbase.org/34380\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java","src/test/java/com/couchbase/client/vbucket/provider/BucketConfigurationProviderTest.java"],"date":1394542417000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eaf998d0df78fa052480c3f06f459d66038ea62e","msg":"JCBC-427: Update enclosed HTTP provider with new configs.\n\nThis changeset makes sure that the enclosed HTTP configuration\nprovider also gets new configurations during runtime, so that once\nit needs it, it doesnt override a good one with a very old one.\n\nThis is particularly important when the HTTP connection gets closed,\nbecause then a \"notifyDisconnect\" would override a good config with\na old and outdated one, leading to inconsistencies.\n\nChange-Id: Iffce8028c49844eb5a834fcfc1e93e7525128536\nReviewed-on: http://review.couchbase.org/34378\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java"],"date":1394539597000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8132247150cf5c6874c7dad33582a981734deb7e","msg":"Upgrade spymemcached to 2.11.0\n\nMotivation\n----------\nSpymemcached 2.11.0 contains many changes that help with more stability\nduring authentication, reconneaction, and other scenarios. Also, more\nmethods are exposed for async mutating and typesafe status codes.\n\nModifications\n-------------\nUpgrade the dependency and adapt the test cases to fit with the new interface.\n\nResult\n------\nUpgraded dependency.\n\nChange-Id: I5543c028a2ee7c9bee0035d04f3fb576ee96bcf8\nReviewed-on: http://review.couchbase.org/35264\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["ivy/libraries.properties","src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java"],"date":1396599216000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"67c0fc317f58a43c21f66b29d711438091367ab8","msg":"JCBC-436: Expose custom auth wait time setting.\n\nMotiviation\n-----------\nWith changes introduced in spy (SPY-159), it is possible to customize\nthe auth wait time on the connection factory builder. This time should\nbe increased for the couchbase SDK and also still be configurable.\n\nModifications\n-------------\nThe setting is exposed through the regular methods, test have been added.\nNote that the default time has been increased to 2.5 seconds, which mirrors\nthe default OP timeout.\n\nSlight-side effect change: one test has been adapted to some interface\nchanges in the spymemcached library, which needs to be part of this changeset.\n\nResult\n------\nThe auth wait timeout is now configurable.\n\nChange-Id: I7d2acc94e2fbd220154caf8c5dfe787b9374ca5d\nReviewed-on: http://review.couchbase.org/34854\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java"],"date":1395667145000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"83beef1959de357af48bb1232f4ab6f536e51b8e","msg":"JCBC-439: Fix AuthDescriptor overriding.\n\nMotivation\n----------\nThe AuthDescriptor, even when set through the builder, is ignored on factory\nconstruction. This means that no manual descriptor can be passed in, always\nleading to SASL auth list.\n\nModifications\n-------------\nThe appropriate methods in the builder have been implemented and tests added\nto verify the functionality.\n\nResult\n------\nA custom descriptor can now be passed in and be used to override default auth\nsettings.\n\nChange-Id: I66ac4e34a32e2da31d1b8a784bcfb39e9ce31f01\nReviewed-on: http://review.couchbase.org/34935\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java"],"date":1395837125000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"45d368b18b7a4dadbb47917a785c79a847666ec3","msg":"Add development pom.xml\n\nMotivation\n----------\nWhile ivy/ant works for years now, it is a little too hard to get\nstarted when contributing simple patches with IDE setup. Since most\nIDEs have good maven support, adding a pom.xml to get up and running\nquickly makes it easier to contribute and develop.\n\nModification\n------------\nAdd a pom.xml which is inteded to get up and running quickly. It is not\ndesigned to do release management, which still happens through the\nant/ivy pipeline.\n\nResult\n------\nContributors and developers can import the project more easily and\ncontribute patches.\n\nChange-Id: I40831905d61d263522e006774faecca9534e31e2\nReviewed-on: http://review.couchbase.org/34853\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.xml","pom.xml"],"date":1395665824000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aa8e153af8c7e890882ba5930a245ed0f0f0cc22","msg":"WIP: Fixing issues with rebalance \u0026 cccp in general\n\nBucketConfigurationProvider:\n\n- Make sure that configs marked as outdated are not propagated up the\n  stack but instead an outdated signal is raised, eventually leading\n  to a fresh new correct configuration.\n\n- When carrier config is used, register a connection observer that\n  gets notified once the connection is closed and shuts it down, also\n  signalling an outdated configuration, leading to a fresh new correct\n  configuration.\n\n- Simplifying the HTTP reconfiguration to only subscribe in one place.\n\nCouchbaseConnection:\n\n- Do not queue a node for reconnect if it is not part of the cluster\n  anymore.\n\nChange-Id: I1b2b8b6fdc130b58c0765cea183010da568aaf0e\nReviewed-on: http://review.couchbase.org/34555\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java"],"date":1395063862000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2783677202ce1cb5b245dc9e1892f2483743ff77","msg":"JCBC-446: Better NMV handling\n\nMotivation\n----------\nOnce the NMVB collection (set) is full, we never reset it back\nto a clean state. This means that once full, the primary node\nwill always be used, even if it returns NMVB itself multiple\ntimes.\n\nAlso, because of the heuristics in place, a NMVB will not trigger\na config check for a new config. Since this is a clear pointer to\nan outdated config, doing so will get it to a good confing quicker.\n\nModifications\n-------------\nIf the collection is full, empty it out. This will make room for\nsubsequent attempts. Also, trigger a \"checkConfigUpdate\" if we need\nto reschedule such an operation (thresholds in the CF still apply).\n\nAlso the code makes sure that the alternative node is active. This\nneeds to be in place because it could be that the node in the list\nhas been removed already, but is still hold as a reference in this\nset.\n\nResult\n------\nMore robust handling of NMVB operations.\n\nChange-Id: I89898017e2eea1f07a99b8a866d9a1b6e45bb825\nReviewed-on: http://review.couchbase.org/34885\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseConnection.java"],"date":1395745094000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7a01b8d59b4d4855f908ac92d923d95ff6063d22","msg":"JCBC-431: Config poller for tainted carrier configurations.\n\nThis changeset adds a config poller for tainted carrier configurations.\nIt spawns once it finds a tainted config and stops once its not tainted\nanymore.\n\nWhat a tainted configuration exactly defines, is implemented in each\nconfiguration implementation. The Provider just checks for the field\nand acts accordingly.\n\nChange-Id: If4d9c83994ad82b0f22d0ea9edc2bc0e9dca7ffe\nReviewed-on: http://review.couchbase.org/34626\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/vbucket/config/Config.java","src/main/java/com/couchbase/client/vbucket/config/CouchbaseConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/MemcacheConfig.java","src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/provider/ConfigurationProvider.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/com/couchbase/client/vbucket/config/CouchbaseConfigTest.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigFactoryTest.java","src/test/java/com/couchbase/client/vbucket/provider/BucketConfigurationProviderTest.java"],"date":1395137912000,"numberOfModifiedFiles":13},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"23c550efa2c9e35e921562e388cdc95026b4b0b2","msg":"Fix ConcurrentModificationException in VBucketNodeLocator\n\nMotivation\n----------\nIf a node needs to be removed in the VBucketNodeLocator#fillNodeEntries, the previous\ncode could lead to a ConcurrentModificationException.\n\nModifications\n-------------\nUse an iterator to safely remove it from the map.\n\nResult\n------\nNo more ConcurrentModificationException.\n\nChange-Id: Icc9b86661c69436e60f9dc4ace559ecfff4ff28b\nReviewed-on: http://review.couchbase.org/35719\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Brett Lawson \u003cbrett19@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java"],"date":1397537385000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ee717e2c17398b4f299c2acae7d14294cab8340f","msg":"Make sure CCCPAwarenessTest always has a bucket.\n\nMotivation\n----------\nIt could be the case that the CCCPAwarenessTest does not have a bucket\nto use if used in the wrong order by JUnit for all tests.\n\nModifications\n-------------\nThe fix makes sure that a default bucket is created, it also makes sure\nthat the test doesn\u0027t fail against more than one node incorrectly.\n\nResult\n------\nThe test is now more failure resilient to false positives.\n\nChange-Id: I617561d900129e8ddda86e6ad624760473258a5f\nReviewed-on: http://review.couchbase.org/35722\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Brett Lawson \u003cbrett19@gmail.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/CCCPAwarenessTest.java"],"date":1397542690000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ec02294c9b76563a408de5b1fe97192e07207404","msg":"Migrating Codebase.\n\nThis changeset removes the 1.* codebase and:\n\t- Moves to Gradle as the build tool of choice\n\t- Sets up the new dependencies\n\t- Adds the first rough codeparts\n\nChange-Id: Ie7ba8992cdaba7114c8d8d1ef273344f71af9c87\nReviewed-on: http://review.couchbase.org/36290\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":[".gitignore","README.md","TESTING.md","build.gradle","build.xml","cbclient.properties.dist","etc/checkstyle-java-header.txt","etc/checkstyle-noframes.xsl","etc/checkstyle.xml","gradle.properties","gradle/wrapper/gradle-wrapper.jar","gradle/wrapper/gradle-wrapper.properties","gradlew","gradlew.bat","ivy.xml","ivy/couchbase-client-test.xml","ivy/couchbase-client.xml","ivy/ivysettings.xml","ivy/libraries.properties","ivy/pom.template.xml","lib/ant-contrib-1.0b3.jar","lib/ant-eclipse-1.0-jvm1.2.jar","pom.xml","settings.gradle","src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/ClusterManager.java","src/main/java/com/couchbase/client/ClusterManagerBuilder.java","src/main/java/com/couchbase/client/CouchbaseClient.java","src/main/java/com/couchbase/client/CouchbaseClientIF.java","src/main/java/com/couchbase/client/CouchbaseConnection.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java","src/main/java/com/couchbase/client/CouchbaseConnectionFactoryBuilder.java","src/main/java/com/couchbase/client/CouchbaseMemcachedConnection.java","src/main/java/com/couchbase/client/CouchbaseProperties.java","src/main/java/com/couchbase/client/ObservedException.java","src/main/java/com/couchbase/client/ObservedModifiedException.java","src/main/java/com/couchbase/client/ObservedTimeoutException.java","src/main/java/com/couchbase/client/StoreType.java","src/main/java/com/couchbase/client/TapClient.java","src/main/java/com/couchbase/client/TapConnectionProvider.java","src/main/java/com/couchbase/client/TapMessagePrinter.java","src/main/java/com/couchbase/client/ViewConnection.java","src/main/java/com/couchbase/client/clustermanager/AuthType.java","src/main/java/com/couchbase/client/clustermanager/BucketType.java","src/main/java/com/couchbase/client/clustermanager/FlushResponse.java","src/main/java/com/couchbase/client/http/HttpResponseCallback.java","src/main/java/com/couchbase/client/http/HttpUtil.java","src/main/java/com/couchbase/client/http/ViewPool.java","src/main/java/com/couchbase/client/internal/AdaptiveThrottler.java","src/main/java/com/couchbase/client/internal/HttpCompletionListener.java","src/main/java/com/couchbase/client/internal/HttpFuture.java","src/main/java/com/couchbase/client/internal/ObserveFuture.java","src/main/java/com/couchbase/client/internal/ReplicaGetCompletionListener.java","src/main/java/com/couchbase/client/internal/ReplicaGetFuture.java","src/main/java/com/couchbase/client/internal/ThrottleManager.java","src/main/java/com/couchbase/client/internal/Throttler.java","src/main/java/com/couchbase/client/internal/ThrottlerState.java","src/main/java/com/couchbase/client/internal/ViewFuture.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/convert/Converter.java","src/main/java/com/couchbase/client/java/convert/JacksonJsonConverter.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/protocol/views/AbstractView.java","src/main/java/com/couchbase/client/protocol/views/ComplexKey.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperation.java","src/main/java/com/couchbase/client/protocol/views/DesignDocOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/DesignDocument.java","src/main/java/com/couchbase/client/protocol/views/DocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/HttpOperation.java","src/main/java/com/couchbase/client/protocol/views/HttpOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/InvalidViewException.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperation.java","src/main/java/com/couchbase/client/protocol/views/NoDocsOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/OnError.java","src/main/java/com/couchbase/client/protocol/views/Paginator.java","src/main/java/com/couchbase/client/protocol/views/Query.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperation.java","src/main/java/com/couchbase/client/protocol/views/ReducedOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/RowError.java","src/main/java/com/couchbase/client/protocol/views/SpatialView.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewDesign.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/SpatialViewRowWithDocs.java","src/main/java/com/couchbase/client/protocol/views/Stale.java","src/main/java/com/couchbase/client/protocol/views/View.java","src/main/java/com/couchbase/client/protocol/views/ViewDesign.java","src/main/java/com/couchbase/client/protocol/views/ViewException.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewFetcherOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewOperation.java","src/main/java/com/couchbase/client/protocol/views/ViewOperationImpl.java","src/main/java/com/couchbase/client/protocol/views/ViewResponse.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewResponseWithDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRow.java","src/main/java/com/couchbase/client/protocol/views/ViewRowNoDocs.java","src/main/java/com/couchbase/client/protocol/views/ViewRowReduced.java","src/main/java/com/couchbase/client/protocol/views/ViewRowWithDocs.java","src/main/java/com/couchbase/client/vbucket/BucketMonitor.java","src/main/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactory.java","src/main/java/com/couchbase/client/vbucket/BucketUpdateResponseHandler.java","src/main/java/com/couchbase/client/vbucket/ConfigurationException.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/ConfigurationProviderHTTP.java","src/main/java/com/couchbase/client/vbucket/ConnectionException.java","src/main/java/com/couchbase/client/vbucket/CouchbaseNodeOrder.java","src/main/java/com/couchbase/client/vbucket/Reconfigurable.java","src/main/java/com/couchbase/client/vbucket/ReconfigurableObserver.java","src/main/java/com/couchbase/client/vbucket/VBucketNodeLocator.java","src/main/java/com/couchbase/client/vbucket/config/Bucket.java","src/main/java/com/couchbase/client/vbucket/config/Config.java","src/main/java/com/couchbase/client/vbucket/config/ConfigDifference.java","src/main/java/com/couchbase/client/vbucket/config/ConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/ConfigParsingException.java","src/main/java/com/couchbase/client/vbucket/config/ConfigType.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParser.java","src/main/java/com/couchbase/client/vbucket/config/ConfigurationParserJSON.java","src/main/java/com/couchbase/client/vbucket/config/CouchbaseConfig.java","src/main/java/com/couchbase/client/vbucket/config/DefaultConfigFactory.java","src/main/java/com/couchbase/client/vbucket/config/MemcacheConfig.java","src/main/java/com/couchbase/client/vbucket/config/Node.java","src/main/java/com/couchbase/client/vbucket/config/Pool.java","src/main/java/com/couchbase/client/vbucket/config/Port.java","src/main/java/com/couchbase/client/vbucket/config/Status.java","src/main/java/com/couchbase/client/vbucket/config/VBucket.java","src/main/java/com/couchbase/client/vbucket/provider/BucketConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/provider/ConfigurationProvider.java","src/main/java/com/couchbase/client/vbucket/provider/CouchbaseConfigConnection.java","src/main/java/com/couchbase/client/vbucket/provider/GetConfigOperationImpl.java","src/scripts/write-version-info.sh","src/test/java/com/couchbase/client/BucketTool.java","src/test/java/com/couchbase/client/CCCPAwarenessTest.java","src/test/java/com/couchbase/client/CbTestConfig.java","src/test/java/com/couchbase/client/ClusterManagerTest.java","src/test/java/com/couchbase/client/CouchbaseClientBaseCase.java","src/test/java/com/couchbase/client/CouchbaseClientMemcachedBucketTest.java","src/test/java/com/couchbase/client/CouchbaseClientTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryBuilderTest.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryMock.java","src/test/java/com/couchbase/client/CouchbaseConnectionFactoryTest.java","src/test/java/com/couchbase/client/CouchbasePropertiesTest.java","src/test/java/com/couchbase/client/CouchbaseSetWithoutTTLTest.java","src/test/java/com/couchbase/client/FailInjectingCouchbaseConnectionFactory.java","src/test/java/com/couchbase/client/FlushTest.java","src/test/java/com/couchbase/client/PaginatorTest.java","src/test/java/com/couchbase/client/ReplicaReadTest.java","src/test/java/com/couchbase/client/SpatialViewTest.java","src/test/java/com/couchbase/client/TapTest.java","src/test/java/com/couchbase/client/TestOperation.java","src/test/java/com/couchbase/client/TestOperationImpl.java","src/test/java/com/couchbase/client/TestOperationPutImpl.java","src/test/java/com/couchbase/client/TestingClient.java","src/test/java/com/couchbase/client/TestingCouchbaseClient.java","src/test/java/com/couchbase/client/VBucketCouchbaseClientTest.java","src/test/java/com/couchbase/client/ViewConnectionTest.java","src/test/java/com/couchbase/client/ViewTest.java","src/test/java/com/couchbase/client/http/HttpUtilTest.java","src/test/java/com/couchbase/client/internal/HttpFutureTest.java","src/test/java/com/couchbase/client/java/convert/JacksonJsonConverterTest.java","src/test/java/com/couchbase/client/protocol/views/ComplexKeyTest.java","src/test/java/com/couchbase/client/protocol/views/DesignDocumentTest.java","src/test/java/com/couchbase/client/protocol/views/QueryTest.java","src/test/java/com/couchbase/client/protocol/views/SpatialViewDesignTest.java","src/test/java/com/couchbase/client/protocol/views/ViewDesignTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorPipelineFactoryTest.java","src/test/java/com/couchbase/client/vbucket/BucketMonitorTest.java","src/test/java/com/couchbase/client/vbucket/BucketObserverMock.java","src/test/java/com/couchbase/client/vbucket/BucketUpdateResponseHandlerTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPDownNodeTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderHTTPTest.java","src/test/java/com/couchbase/client/vbucket/ConfigurationProviderMemcacheMock.java","src/test/java/com/couchbase/client/vbucket/MemcachedNodeMockImpl.java","src/test/java/com/couchbase/client/vbucket/NMVInjectingVBucketNodeLocator.java","src/test/java/com/couchbase/client/vbucket/ReconfigurableMock.java","src/test/java/com/couchbase/client/vbucket/VBucketCacheNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorHostnameTest.java","src/test/java/com/couchbase/client/vbucket/VBucketNodeLocatorTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserJSONTest.java","src/test/java/com/couchbase/client/vbucket/config/ConfigurationParserMock.java","src/test/java/com/couchbase/client/vbucket/config/CouchbaseConfigTest.java","src/test/java/com/couchbase/client/vbucket/config/DefaultConfigFactoryTest.java","src/test/java/com/couchbase/client/vbucket/provider/BucketConfigurationProviderTest.java","src/test/java/net/spy/memcached/auth/AuthTest.java","src/test/java/net/spy/memcached/protocol/binary/OptimizedStoreVbucketTest.java","src/test/manual/com/couchbase/client/test/CouchbaseMoxiTest.java","src/test/resources/cbclient-test.properties"],"date":1398329988000,"numberOfModifiedFiles":200},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"af0af11c3ff2e4a4f307370d4720c5d049463ec1","msg":"Better JsonDocument handling.\n\nChange-Id: I36d8e5338b70f1bd1347571a063fac2e09e94d9b\nReviewed-on: http://review.couchbase.org/36843\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","build.gradle","src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/convert/Converter.java","src/main/java/com/couchbase/client/java/convert/JacksonJsonConverter.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/view/Stale.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewRow.java"],"date":1399569847000,"numberOfModifiedFiles":16},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c54b40e2b3e656cfe78b775f784618fd8f359b91","msg":"Adding maven plugin.\n\nChange-Id: Id47c4d201e067807fdf87db8ec5b9af6236b95bd\nReviewed-on: http://review.couchbase.org/37267\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/integration/java/com/couchbase/client/java/BinaryTest.java"],"date":1400482718000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"83d581fd32886ea02f386288b42a41584ea4c264","msg":"refactoring.\n\nChange-Id: Iaa747b6576ffba9e38f2d8b5bc6ad9f56d050275\nReviewed-on: http://review.couchbase.org/37382\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/bucket/ViewQueryMapper.java"],"date":1400510082000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"efbf5c203d68dc6fa3631085677f17a422ac1b72","msg":"add simple n1ql support.\n\nChange-Id: Iaca7ba3e39ae24ae66925ac14471c8ac22d80217\nReviewed-on: http://review.couchbase.org/37383\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["gradle.properties","src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/query/N1qlQuery.java","src/main/java/com/couchbase/client/java/query/N1qlRow.java"],"date":1400676004000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"696564efe346897080ac299c75888cc05792f73b","msg":"cleanup for first dp.\n\nChange-Id: Ie988e581eed87b624fd5adb56620746d3cb654c7\nReviewed-on: http://review.couchbase.org/37500\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties","src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/QueryResult.java","src/main/java/com/couchbase/client/java/query/Stale.java","src/main/java/com/couchbase/client/java/query/ViewQuery.java","src/main/java/com/couchbase/client/java/query/ViewResult.java"],"date":1400855469000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"21cdfb928318b60fd561958c2febdc2339c4fa9d","msg":"enriching pom and adding javadoc and sources generation.\n\nChange-Id: Ifc8f4769c41378948cad4e24827894c0daff7cca\nReviewed-on: http://review.couchbase.org/37501\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1400857079000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4adfc737a1fe5ff78135186eac6cee533bc74815","msg":"start work on dp2\n\nChange-Id: Ib049f03aba417f2f836f40361ea8bf833358da45\nReviewed-on: http://review.couchbase.org/37504\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1400858461000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5bc79eed43a01df264d2dd57181ef3257901d308","msg":"adding simple DSL for n1ql\n\nChange-Id: I42b72d131d2d8224b088989ff6ab27ce6e505903\nReviewed-on: http://review.couchbase.org/37902\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/query/Expression.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/Sort.java","src/test/java/com/couchbase/client/java/query/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/QueryTest.java"],"date":1401973845000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a33b7574256b1f9f414dcd30d2f9ca287ff61898","msg":"Adding more N1QL DSL and View Query DSL.\n\nChange-Id: I985ecc860f16b967eb38e8a47f3297fac50fee6e\nReviewed-on: http://review.couchbase.org/37960\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/query/Expression.java","src/main/java/com/couchbase/client/java/query/OnError.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/Select.java","src/main/java/com/couchbase/client/java/query/ViewQuery.java","src/main/java/com/couchbase/client/java/query/dsl/Alias.java","src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/query/dsl/Functions.java","src/main/java/com/couchbase/client/java/query/dsl/Sort.java","src/main/java/com/couchbase/client/java/query/dsl/element/AsElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/Element.java","src/main/java/com/couchbase/client/java/query/dsl/element/FromElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/GroupByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/HavingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/JoinElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/KeysElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LettingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LimitElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/NestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OffsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OrderByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/SelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnionElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnnestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WhereElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/AbstractPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/AsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultAsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultFromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultGroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultHavingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultJoinPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLettingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultNestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultOffsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultOrderByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectResultPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUnnestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/FromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/GroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/HavingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/JoinPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/JoinType.java","src/main/java/com/couchbase/client/java/query/dsl/path/KeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LettingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/NestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/OffsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/OrderByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/Path.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectResultPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectType.java","src/main/java/com/couchbase/client/java/query/dsl/path/UnnestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/WherePath.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java","src/test/java/com/couchbase/client/java/query/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/QueryTest.java","src/test/java/com/couchbase/client/java/query/ViewQueryTest.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSomokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1402073946000,"numberOfModifiedFiles":73},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dba220db704395f63dde5634e52f2dd7dcd5efc3","msg":"Add support for flush.\n\nChange-Id: I4f863be52d98e008e5d612066cd75c78ff2a4f43\nReviewed-on: http://review.couchbase.org/39110\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1404466305000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9acd6f89edd03c933be4eba07051644b55f3f383","msg":"Adapt ViewResult for null and non-string keys.\n\nChange-Id: If5cb3184860d57df2401a8537edf6d7259e38cec\nReviewed-on: http://review.couchbase.org/39157\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/query/ViewResult.java"],"date":1404743437000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a75ec2edde70fc7a7688619ecb7ab3fd547622c2","msg":"dp2 release tag.\n\nChange-Id: Ic4a69e121621db426560c4aab570e35210678af7\nReviewed-on: http://review.couchbase.org/39231\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1404893765000,"numberOfModifiedFiles":1},{"authorName":"Donnerbart","authorEmail":"couchbase@donnerbart.de","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2b83bf9d2e53cebec80b69db30fa91ec477fce3a","msg":"Fixed ViewQueryTest.java\n\nChange-Id: Ifd952486746f7e707022db7192811cee0192763d\nReviewed-on: http://review.couchbase.org/38739\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/query/ViewQueryTest.java"],"date":1403616581000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"62a859573b27c26d9fd4f756665ef5358b229595","msg":"JCBC-489: Add support for replica read.\n\nChange-Id: I3383648e962624424c448044b54f43d90c2e092e\nReviewed-on: http://review.couchbase.org/39265\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties","src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/resources/logback-test.xml","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/ReplicaMode.java"],"date":1404991869000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2b6c53727fa2060268dc6ce6b64c092cb135db20","msg":"JCBC-491: Add support for counter and through the LongDocument as a result\n\nChange-Id: I1dbac4c705a52855f14554e1061474a124c387b6\nReviewed-on: http://review.couchbase.org/39351\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/LongDocument.java"],"date":1405342777000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7f6df831b84ea89e823deceda9bd77dcc92cf5e7","msg":"JCBC-492: Add support for getAndLock \u0026 getAndTouch.\n\nChange-Id: Ic1563555808084f69506ba87abbbe226b0edbd84\nReviewed-on: http://review.couchbase.org/39412\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1405430522000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f1f50a7b710d700d545a14cb4618edebb3a0a6dc","msg":"JCBC-494: Add support for unlock and touch\n\nChange-Id: Id5289d2cd54337e6f6c2628ae5ab063e9f8b0fa1\nReviewed-on: http://review.couchbase.org/39434\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1405510582000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6f8d672ff9a600780fd5d7d47d5ba6ce52bd083d","msg":"First shot at happy-path observe.\n\nChange-Id: Id81a062531bd9a10fb1dc7c9c878a4ee7b90cd2f\nReviewed-on: http://review.couchbase.org/39485\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/PersistTo.java","src/main/java/com/couchbase/client/java/ReplicateTo.java","src/main/java/com/couchbase/client/java/util/Observe.java"],"date":1405605600000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"198ef10f06b75779c3e66468e97203694e3fcb52","msg":"Adapt to latest core changes and change View API\n\nChange-Id: I3b3e9c5c5d3f9819c2fb7f40ee1f1186d853d621\nReviewed-on: http://review.couchbase.org/40296\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","docs/com/couchbase/client/java/get-found.png","docs/com/couchbase/client/java/get-not-found.png","docs/com/couchbase/client/java/replica-get-all.png","docs/com/couchbase/client/java/replica-get-found.png","docs/marbles.graffle","src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/PersistTo.java","src/main/java/com/couchbase/client/java/ReplicaMode.java","src/main/java/com/couchbase/client/java/ReplicateTo.java","src/main/java/com/couchbase/client/java/bucket/Observe.java","src/main/java/com/couchbase/client/java/bucket/ViewQueryMapper.java","src/main/java/com/couchbase/client/java/convert/Converter.java","src/main/java/com/couchbase/client/java/convert/JacksonJsonConverter.java","src/main/java/com/couchbase/client/java/document/LongDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/error/DocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DocumentDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/DurabilityException.java","src/main/java/com/couchbase/client/java/query/DefaultViewResult.java","src/main/java/com/couchbase/client/java/query/DefaultViewRow.java","src/main/java/com/couchbase/client/java/query/ViewQuery.java","src/main/java/com/couchbase/client/java/query/ViewResult.java","src/main/java/com/couchbase/client/java/query/ViewRow.java","src/test/java/com/couchbase/client/java/convert/JacksonJsonConverterTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java","src/test/java/com/couchbase/client/java/query/ViewQueryTest.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSomokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1407240951000,"numberOfModifiedFiles":39},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a92d0e3fdc8faf526ecdbcf6bff86243bd738c8a","msg":"Adding initial support for connection string.\n\nChange-Id: I8e60030809510e79212631cdea1324202ece6a7d\nReviewed-on: http://review.couchbase.org/40332\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/ConnectionString.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/env/ClusterEnvironment.java","src/main/java/com/couchbase/client/java/env/ClusterProperties.java","src/main/java/com/couchbase/client/java/env/DefaultClusterEnvironment.java","src/main/java/com/couchbase/client/java/env/DynamicClusterProperties.java","src/test/java/com/couchbase/client/java/ConnectionStringTest.java"],"date":1407321338000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bfe263b89efb8dabf2b539279a7e6172c20b70e9","msg":"Re-enabling n1ql querying.\n\nChange-Id: Ib1e115186900d69a1075f5637e347c30df195182\nReviewed-on: http://review.couchbase.org/40335\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/env/DynamicClusterProperties.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryRow.java","src/main/java/com/couchbase/client/java/query/QueryResult.java","src/main/java/com/couchbase/client/java/query/QueryRow.java"],"date":1407324419000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1c4c4f03f64dc574cb70e53f7fa841f94264d84a","msg":"moving flush to bucket manager.\n\nChange-Id: Icc832a0267c826eaa66bca59fd9575147e930cb0\nReviewed-on: http://review.couchbase.org/40336\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/CouchbaseBucketManager.java"],"date":1407325049000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b28b4b7a23f455b3662615013bf05f713e6a8ba5","msg":"Adding first batch of design doc support.\n\nChange-Id: I34fec605442c6e4e631cae1cf7f3c35553e7891c\nReviewed-on: http://review.couchbase.org/40378\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/CouchbaseBucketManager.java","src/main/java/com/couchbase/client/java/convert/JacksonJsonConverter.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/query/ViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultView.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/main/java/com/couchbase/client/java/view/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/view/DesignDocumentException.java","src/main/java/com/couchbase/client/java/view/View.java"],"date":1407424355000,"numberOfModifiedFiles":13},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f625f6f84494425239864b9f4cc0c615d05c77d","msg":"Adding more design document tests.\n\nChange-Id: Ife751f79c03a276423dcceab09ca17e9cbe67123\nReviewed-on: http://review.couchbase.org/40379\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java"],"date":1407425138000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2893e1936bc93f60a503ff816e93e748735b88b2","msg":"slight repackaging of views.\n\nChange-Id: I58281af2fc3813a0e91a57551e335670c735a3da\nReviewed-on: http://review.couchbase.org/40380\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/OnError.java","src/main/java/com/couchbase/client/java/view/Stale.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRow.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1407425399000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3aad9094860decbedd4068157aa69e5da43b9118","msg":"Moving to transcoder naming and adding a legacy transcoder.\n\nChange-Id: I80ab5e23cacab5885d2556a9cb639924caa3e7ef\nReviewed-on: http://review.couchbase.org/40496\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/bucket/CouchbaseBucketManager.java","src/main/java/com/couchbase/client/java/bucket/ViewQueryMapper.java","src/main/java/com/couchbase/client/java/cluster/ClusterBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterBucketType.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java","src/main/java/com/couchbase/client/java/convert/Converter.java","src/main/java/com/couchbase/client/java/convert/JacksonJsonConverter.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscodingException.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java"],"date":1407767497000,"numberOfModifiedFiles":21},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1dd7a0bf2ef49abe287ebdc04734e2f5eee6d325","msg":"Adding support for append and prepend.\n\nChange-Id: I6c8d5297ee4a89c8e6c6014b95558e0fb06a6eac\nReviewed-on: http://review.couchbase.org/40500\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1407771501000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fdbed10005327d7911ebc19c2dcf95f3a0869a61","msg":"Fix integer to long classcast exceptions.\n\nChange-Id: Ie9a11587ec1b3f1b97ee5d48a354955c5cbc7b41\nReviewed-on: http://review.couchbase.org/40525\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java"],"date":1407834486000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9ae1d04454c323de4f43f5838a816bc884e1e119","msg":"throw exception on cas mismatch in replace.\n\nChange-Id: I5d92e73d1c99da492df18b665852a25318749997\nReviewed-on: http://review.couchbase.org/40527\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/error/CASMismatchException.java"],"date":1407835854000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d21a95dc5e63b18e49fe47759d01c9cbf9294bf3","msg":"respect reduced views and better object handling.\n\nChange-Id: I8f9d51e46d405619d876c95a1d622f2595956dee\nReviewed-on: http://review.couchbase.org/40536\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/LongDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1407866914000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"35d3f75dacbb89b2d5e2db2c5e06a53e8fb53484","msg":"change to maven-publish plugin\n\nChange-Id: I05677cacc41c2316de5e4541f7cfb694e86116f0\nReviewed-on: http://review.couchbase.org/40537\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1407868407000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"436a750b4683f25f1b0557aed727621ba03a43fa","msg":"adding more cluster API docs.\n\nChange-Id: Idddcc68ad29c1a41c8aeeca6412322deb50e5fb2\nReviewed-on: http://review.couchbase.org/40538\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Cluster.java"],"date":1407869256000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c2d4fc6e3c35b906b5189587e6f693cb691ff89d","msg":"Remove status from document.\n\nChange-Id: I83c899fa758f95aa0d5b8e40271f8ca2b5a14aa9\nReviewed-on: http://review.couchbase.org/40558\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/LongDocument.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java"],"date":1407912996000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"883986c8612487641960f11b715c73eb7c13435a","msg":"fix occasionally failing test case.\n\nChange-Id: I9c3d2c52e4232ba6355bb8ca68ebfa75fddbae5c\nReviewed-on: http://review.couchbase.org/40559\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java"],"date":1407913226000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e000a976a2dd71ac95f3ff31f0f9c806688e0be6","msg":"disable cluster manager for now.\n\nChange-Id: Ibcec9c7e3d04922dfebad2e4284537e52ac26119\nReviewed-on: http://review.couchbase.org/40560\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/PersistTo.java","src/main/java/com/couchbase/client/java/ReplicaMode.java","src/main/java/com/couchbase/client/java/ReplicateTo.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java"],"date":1407913996000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0cfe1298644d76051c189f4114ee56efb4c83c60","msg":"provide more overloads for counter.\n\nChange-Id: I4344504a49682fd070c98da664b5a00fb98a40f6\nReviewed-on: http://review.couchbase.org/40564\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1407920549000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9d2f4e296b15a8bdbf136aaaf0c58e47ff4cae22","msg":"Prepare dp3 release.\n\nChange-Id: I8ba16abe5ada20c54d577b60bab4532776e4d7e0\nReviewed-on: http://review.couchbase.org/40569\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1407929290000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e992ca7679b4896a64a6d0bac00315b26a2dd9e0","msg":"start work on beta.\n\nChange-Id: I00ba2c7c64310f78f0c0605e61c0e4d95f9f3e91\nReviewed-on: http://review.couchbase.org/40572\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1407930108000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"adcf8f907f337e2ef2a07de1f99b4ae05dad7a80","msg":"JCBC-515: Simplify environment and collapse properties.\n\nChange-Id: Icc6a1d31e373cbc24a0a6b346bbaa6fc77a60d2f\nReviewed-on: http://review.couchbase.org/40694\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java","src/main/java/com/couchbase/client/java/env/ClusterEnvironment.java","src/main/java/com/couchbase/client/java/env/ClusterProperties.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultClusterEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DynamicClusterProperties.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java"],"date":1408365152000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0b42eb3e49168d92c8f7c27ac2552fa6048164f5","msg":"JCBC-517 - Add overloads for PersistTo/ReplicateTo only.\n\nChange-Id: I04248ed5d97537e4c111beaead8f4b6a65b2dd07\nReviewed-on: http://review.couchbase.org/40695\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1408371489000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8085289da3eb55a8e11291958d1e5226086feae4","msg":"JCBC-479: Fix comparison failures in unit tests.\n\nChange-Id: I74d8970f7ad5cacbe0cc7558884c02b48a4a749f\nReviewed-on: http://review.couchbase.org/40724\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1408456015000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"17086845cf72323cd4ec03fe8498b2497d73078a","msg":"Align logging.\n\nChange-Id: I4eb81615dc0b3fac8b30709ec178024fc0e896d8\nReviewed-on: http://review.couchbase.org/40726\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1408457850000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"322b436caa4e3d354e99b6e82d2fde86bfbd251b","msg":"Align environment changes from the core.\n\nChange-Id: I638e38e02e66cb8cc49546c47522131533f62560\nReviewed-on: http://review.couchbase.org/40794\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java"],"date":1408634155000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4b4820caa8c323332c0eab4355106b9276ea022a","msg":"JCBC-509, JCBC-514: Make sure the environment is shut down when not shared.\n\nChange-Id: Ia793d0a00b8e1e311c4b811227ee9af8c39b4c57\nReviewed-on: http://review.couchbase.org/40795\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1408641316000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f8539234828afdbd2af7c5b248ad5bdf049c13ca","msg":"JCBC-522: Add bucket info API.\n\nChange-Id: Ifb97bd0f5cde95ba68a1358749a2884b4d4bd694\nReviewed-on: http://review.couchbase.org/40823\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BucketInfoTest.java","src/integration/resources/log4j.properties","src/integration/resources/logback-test.xml","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/BucketInfo.java","src/main/java/com/couchbase/client/java/bucket/BucketType.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketInfo.java"],"date":1408689443000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d4bd65fceed0327e872ee50f8f349ad0a0b9f1c7","msg":"JCBC-513: Add support for individual bucket close.\n\nChange-Id: I1f50f14bf054d6ec468b1ed88f7ad6ce28a45060\nReviewed-on: http://review.couchbase.org/40827\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1408697889000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fb23a3494e0f8134ffe2ec29d0797f583d80562f","msg":"JCBC-524: Adding support for custom transcoders.\n\nChange-Id: I631194c5b1bd58894fe24dd34001e1e984af83fd\nReviewed-on: http://review.couchbase.org/40829\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java"],"date":1408701863000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"071801073cae77f71021c32625e4c8e25517d0e8","msg":"JCBC-527: support for cluster info.\n\nChange-Id: I3018aa71565d2d27a584bc18cb813ca81ec30559\nReviewed-on: http://review.couchbase.org/40835\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BucketInfoTest.java","src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/CouchbaseBucketManager.java","src/main/java/com/couchbase/client/java/cluster/ClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterInfo.java"],"date":1408709322000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07152b615a7ab168163df7460aa9654ebf517b3d","msg":"JCBC-526: Add support for bucket management operations.\n\nChange-Id: I70fb4b4018b2070854791c85dab6f31ce9af328a\nReviewed-on: http://review.couchbase.org/40838\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/integration/resources/log4j.properties","src/main/java/com/couchbase/client/java/cluster/BucketDoesNotExistException.java","src/main/java/com/couchbase/client/java/cluster/BucketExistsException.java","src/main/java/com/couchbase/client/java/cluster/ClusterBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterBucketType.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterBucketSettings.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java"],"date":1408716420000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0ead1fbb84f1057661b6886a2287e8e1211d4d75","msg":"Adding more javadocs.\n\nChange-Id: I2620d37e19590001e30dc0606744a3520398f370\nReviewed-on: http://review.couchbase.org/40846\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/BucketInfo.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketType.java","src/main/java/com/couchbase/client/java/bucket/CouchbaseBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketInfo.java","src/main/java/com/couchbase/client/java/bucket/Observe.java","src/main/java/com/couchbase/client/java/cluster/BucketDoesNotExistException.java","src/main/java/com/couchbase/client/java/cluster/BucketExistsException.java","src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/CouchbaseClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterInfo.java","src/main/java/com/couchbase/client/java/document/LongDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/error/BucketAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/BucketDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/CASMismatchException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentException.java","src/main/java/com/couchbase/client/java/error/DocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DocumentDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/DurabilityException.java","src/main/java/com/couchbase/client/java/error/TranscodingException.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/main/java/com/couchbase/client/java/view/OnError.java","src/main/java/com/couchbase/client/java/view/Stale.java","src/main/java/com/couchbase/client/java/view/View.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRow.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1408734013000,"numberOfModifiedFiles":45},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"35a127bcdca5731b5ae524e9f41afe5bf39389b2","msg":"Releasing 2.0.0-beta\n\nChange-Id: I18b9eb1a64cafb646113fa8b03bf464b4fe26eae\nReviewed-on: http://review.couchbase.org/40848\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1408734893000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eda616aae46ec626ab46d42f74604d3be208f40f","msg":"Start development on .next\n\nChange-Id: I4d22d050cf49c5248526649995c4be80435c158b\nReviewed-on: http://review.couchbase.org/40908\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1409051420000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ac134e8a045463046f71ef6b310d486c62fa0fe7","msg":"JCBC-540: Renaming couchbase-client artifact to java-client.\n\nThis change is made for mainly two reasons:\n\t- Allow the old and new SDK to be run in parallel\n\t- Pave the way for more language bindings (like scala-client)\n\nChange-Id: I18d34383c01d89e54c31a0542bd6c24e72006bd4\nReviewed-on: http://review.couchbase.org/41194\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","settings.gradle"],"date":1409840690000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-05:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c0eed3eb3e6fd5a12c21cb70f054985922e5278d","msg":"JCBC-551: Implements a synchronous API around the Observable layer.\n\nMotivation\n----------\nWhile providing an asynchronous API is one of the best ways to implement scalable\napplications, we fully recognize that it is probably harder to get started. Also,\nmany times the expresiveness and power of async is not needed and a similar\nsync API gets the user to his goals faster.\n\nModifications\n-------------\nAs a result, a sync wrapper around the async API has been added. Note that this\nIS A BREAKING change compared to beta1, because the Interfaces are now doing\nthe blocking operations.\n\nThe proper one-line fix is to call .async() on the sync object to get access\non the underlying async one.\n\nNote that this change also adds explicit timeouts to the environment.\n\nResult\n------\nUser are now able to use both a sync and async API depending on their needs\nand skillsets, providing the best possible experience from start to production\ngrade applications.\n\nChange-Id: I274e0bcea52f3f91173088d4fb94f5d6697dbf10\nReviewed-on: http://review.couchbase.org/41352\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/integration/java/com/couchbase/client/java/BucketInfoTest.java","src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketInfo.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/error/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentException.java","src/main/java/com/couchbase/client/java/error/FlushDisabledException.java","src/main/java/com/couchbase/client/java/error/TranscodingException.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/AsyncQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryRow.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/QueryResult.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java","src/main/java/com/couchbase/client/java/view/AsyncViewResult.java","src/main/java/com/couchbase/client/java/view/AsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/View.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRow.java"],"date":1410402909000,"numberOfModifiedFiles":52},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"49f2d91a54d3dec3f10a84d67c111bf8d0d1f996","msg":"JCBC-525: More Document and Transcoder Types.\n\nMotivation\n---------\nIn order to support all possible JSON values and also implement the \"common flags\"\nSDK interoperability proposal, this changeset adds more document types and\ntranscoders.\n\nIt is a non-breaking change and just adds additional capabilities.\n\nModifications\n-------------\nThe following document types and transcoders have been added:\n\n\t- (JsonDocument) -\u003e json objects\n\t- JsonArrayDocument -\u003e json arrays\n\t- JsonBooleanDocument -\u003e json booleans\n\t- JsonDoubleDocument -\u003e json double\n\t- JsonLongDocument -\u003e json long\n\t- JsonStringDocument -\u003e json string (quoted)\n\n\t- StringDocument -\u003e string (as passed in)\n\t- SerializableDocument -\u003e serializable\n\t- BinaryDocument -\u003e passthrough binary data\n\t- LegacyDocument -\u003e 1.* and spy compat\n\nResult\n------\nMore documents added and compatible with common flags.\n\nChange-Id: I331a62db595ae4ea1c05bb51b0cad798356c76d9\nReviewed-on: http://review.couchbase.org/41131\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/document/BinaryDocument.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonBooleanDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/LongDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonNull.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/BinaryTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JacksonTransformers.java","src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonLongTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonStringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/SerializableTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/StringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/test/java/com/couchbase/client/java/transcoder/BinaryTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonArrayTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonLongTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonStringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/StringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/TranscoderUtilsTest.java"],"date":1409576651000,"numberOfModifiedFiles":40},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6be5a7348f6eb01bcdb475c7057a6c4d05d5a194","msg":"JCBC-560: Also expose versioning information.\n\nThis changeset is inline with the latest core-io changes to\nexpose the actual version in the user agent string, as well as\nin the environment to immediately show which version gets used.\n\nChange-Id: I47e7921c8c4ee88309adbfdeaf68f06db48909ef\nReviewed-on: http://review.couchbase.org/41429\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1410857770000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"76c8e2b840d8286b8de7817f031893439390d051","msg":"JCBC-525: Register transcoders.\n\nChange-Id: I5464894994e9b0af719209774fb3abbd373ce3ab\nReviewed-on: http://review.couchbase.org/41431\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1410859673000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f1dc3c6fecd4c119c8bd5fa9767e84e4e367742a","msg":"JCBC-561: Rename parts from binary to kv (key/value) for more expresiveness.\n\nChange-Id: Ife2323646f054897709cfae00257f02559e60748\nReviewed-on: http://review.couchbase.org/41433\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/Observe.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java"],"date":1410867268000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ab5d71f336602cf4c67ab4d2b205b6777c347b3f","msg":"JCBC-544: Throw exception if view is not found.\n\nChange-Id: I04fe7b56dca99289cd0cac66716acb0463224561\nReviewed-on: http://review.couchbase.org/41438\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/error/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentException.java","src/main/java/com/couchbase/client/java/error/DurabilityException.java","src/main/java/com/couchbase/client/java/error/FlushDisabledException.java","src/main/java/com/couchbase/client/java/error/TranscodingException.java","src/main/java/com/couchbase/client/java/error/ViewDoesNotExistException.java"],"date":1410877601000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2f2429f507276225e1493c451f0f6c1eeed58fb0","msg":"Releasing 2.0.0-beta2\n\nChange-Id: I484efdbb0997b63c5e90122b3cf976133e31d5fd\nReviewed-on: http://review.couchbase.org/41441\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1410879160000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d1f4063d1a624e34987976dc82e89a591659e081","msg":"Starting development on .next\n\nChange-Id: I7b76aaaf09d3d3f5f5b563570da4c677811e9325\nReviewed-on: http://review.couchbase.org/41442\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1410879494000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"25450d2b6c118ebaf4aea66dbb488f8b9b4042ea","msg":"JCBC-557: Improvide documentation in the .document package.\n\nChange-Id: If32da68c2210b2d86edaef631e68310fb8f85568\nReviewed-on: http://review.couchbase.org/41484\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/BinaryDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonNull.java"],"date":1411128779000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"11100c0468f51242322eae5bc9109a75b6f70ee5","msg":"JCBC-558: Javadocs for bucket and async bucket.\n\nChange-Id: Icb8ae300d9141069ff652a149b19eada59dccded\nReviewed-on: http://review.couchbase.org/41492\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1411136070000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2117ec8bb90536161ba69c22c610b3e6979ee636","msg":"JCBC-565: Adapting README for GA changes.\n\nChange-Id: Ie2045178c33663cdfe58e1ee1041be0e285fb696\nReviewed-on: http://review.couchbase.org/41500\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["README.md"],"date":1411146321000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"be5dc127a71c21ad01982d46aa5f4f2e43adf411","msg":"Releasing 2.0.0\n\nChange-Id: I30be935f28c9e910deda8120c038f514d022ef7e\nReviewed-on: http://review.couchbase.org/41505\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1411151457000,"numberOfModifiedFiles":2},{"authorName":"Matt Ingenthron","authorEmail":"ingenthr@cep.net","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8281497e2187825fd94524473b1b4c674dfa884b","msg":"Fix typo: SelectDslSomokeTest -\u003e SelectDslSmokeTest.\n\nChange-Id: Id7674ee81ccd3794e7e9019b2b597889ede58160\nReviewed-on: http://review.couchbase.org/41454\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java"],"date":1410931721000,"numberOfModifiedFiles":1},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a3537b45d75efddf004a20c36e5a56949d91dcd9","msg":"Fix link in javadoc\n\nChange-Id: I1c4574dac2e02c47cc84271822277552160c9c00\nReviewed-on: http://review.couchbase.org/41904\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java"],"date":1412600467000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c74a3211ef6bc1dcd10326613b09e426e50839cc","msg":"JCBC-575: Add support for a RawJsonDocument.\n\nMotivation\n----------\nThis changeset adds the capabilities to pass in a raw (already encoded)\nJSON document, largely driven by the fact that users may already have their\nJSON stack set up and just want to pass in the data. We do not want to get\nin the way.\n\nModifications\n-------------\nAdds the raw JSON document which justs takes the string, expects its valid,\ncreates a buffer out of it and stores it down. This also is very low overhead.\n\nResult\n------\nMore flexibility in dealing with JSON documents in combination with custom\nJSON marshallers.\n\nChange-Id: Ibd7e37ae48de197df72713acd7f4daeadc352904\nReviewed-on: http://review.couchbase.org/41945\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/RawJsonDocument.java","src/main/java/com/couchbase/client/java/transcoder/RawJsonTranscoder.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/transcoder/BinaryTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonStringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/RawJsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/StringTranscoderTest.java"],"date":1412693567000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07ef89b7a5bd71f6bea849487bd71db0764ef3c3","msg":"JCBC-578: Validate bucket name before connecting.\n\nMotivation\n----------\nThe bucket name is normally not null when added by the developer at compile\ntime, but in environments like spring boot or others with runtime configurations\nit can happen that the bucket name is null for some reason.\n\nModifications\n-------------\nThe code now properly checks for that and throws a descriptive exception instead\nof failing with an NPE down the codepath.\n\nResult\n------\nIt is immediately clear what went wrong on connecting.\n\nChange-Id: I0bbcdd049b7e9888d467084da29560b0cfa35879\nReviewed-on: http://review.couchbase.org/41986\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java"],"date":1412880029000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"93ecbb04702ce4e6124148cff7290ea827ff3ced","msg":"JCBC-579: Custom equals() methods for DesignDocument and DefaultView\n\nMotivation\n----------\nComparisons are often needed during unit tests or if someone wants to\npublish views in an automated manner upfront. Without those custom equals\nits very cumbersome to verify equality on all possible fields.\n\nModifications\n-------------\nCustom equals methods added based on the properties of the objects, allowing\nfor a simple DesignDocument.equals(DesignDocument).\n\nResult\n------\nEquality checks on all possible fields are now very easy.\n\nChange-Id: I5206ba13f94d62601e61da72e6a50f34e64347ca\nReviewed-on: http://review.couchbase.org/42072\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/DefaultView.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/test/java/com/couchbase/client/java/view/DefaultViewTest.java","src/test/java/com/couchbase/client/java/view/DesignDocumentTest.java"],"date":1412881962000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"781f5552bb684ae338c902edba7d87eeed6a9fe8","msg":"JCBC-580: Custom equals for Documents and JsonArray/JsonObject.\n\nMotivation\n----------\nDocuments and the underlying content types should be able to be\ncompared easily. This satisfies use cases where a document is\nloaded and compared with a different one. Adding custom\nequals methods prevents the developer from doing deep\nassertions themselves.\n\nModifications\n-------------\nCustom equals and hashcodes are applied which take the nested\ndata into account.\n\nResult\n------\nIt is easy to compare documents and their underlying contents.\n\nChange-Id: I7557f27bf44a06d27e1fe9b6f8889ac6bcafbbfa\nReviewed-on: http://review.couchbase.org/42073\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1413181754000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c1915f60b5386b9837aadefcd05f687149d3d48b","msg":"Set version to 2.0.1-SNAPSHOT\n\nChange-Id: I4de1c7c52354ed100d05599371c0488f8038bd90\nReviewed-on: http://review.couchbase.org/42075\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon.basle@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1413203950000,"numberOfModifiedFiles":1},{"authorName":"Donnerbart","authorEmail":"couchbase@donnerbart.de","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5f173bcfc142a3b54951a5016c4245e7861a73e9","msg":"JCBC-582: Bucket details loading fails if bucket \u003e 2gb\n\nMotivation:\n\nDefaultAsyncClusterManager.getBuckets() fails with\na ClassCastException if a bucket quota exceeds\n2048 mega bytes. In addition the returned value\ndoes not represent the correct quota size.\n\nModifications:\n\nThe JSON response from the Couchbase server returns\nthe quota as bytes not mega bytes in a long value.\nAs soon as the quota is greater than the max integer\nthe quota cannot be cast into the target variable.\n\nSo we divide the returned value by 1024² to get the\ncorrect quota size in mega bytes and cast this to\nan integer value.\n\nResult:\n\nFixes the ClassCastException and the quota size.\n\nChange-Id: Ib26e0341a3bc779e27bcdf9fd82001ecec742eb6\nReviewed-on: http://review.couchbase.org/42076\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1413205012000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"80209e48ed1d698d15f7f1094a8aa1f8babb4f9d","msg":"JCBC-581: Add a thinkTime to the integration tests when bucket is created.\n\nMotivation\n----------\nThe design doc tests hang when all are run in parallel. This is because a different\ntest removed all the buckets which is fine, but then the server can\u0027t flush the\nnew bucket so quickly.\n\nThe unsolved root cause is that we reliably don\u0027t know when the bucket is created.\n\nModifications\n-------------\nAs a workaround, a configurable think time is added when the bucket is created. This is\nmost certainly only run once, since the bucket is not thrown away all the time.\n\nResult\n------\nIntegration tests now run through, even when intermingled.\n\nChange-Id: I1b5b4c83cb393800713be4c6695fd1853b7760b1\nReviewed-on: http://review.couchbase.org/42074\nReviewed-by: Simon Baslé \u003csimon.basle@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java"],"date":1413201639000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c619c61cb92d614cde6ac3b735040d7c73122b02","msg":"JCBC-578: Fail observable instead of throwing directly.\n\nMotivation\n----------\nThe previously introduced change (07ef89b7a5bd71f6bea849487bd71db0764ef3c3) correctly\nworks for the synchronous API, but fails the assumptions for the asynchronous one. The\nexpectation is that the Observable is failed, not the exception thrown on the caller\nthread right away.\n\nModifications\n-------------\nThe observable is failed, instead of throwing right away. For the synchronous API the\nchange is not noticeable.\n\nResult\n------\nMore uniform error handling for the async API on connection errors by not breaking\nthe API contract.\n\nChange-Id: Ic1b70155c2659283acc347c1a885005cf0430a9b\nReviewed-on: http://review.couchbase.org/42110\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java"],"date":1413267921000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e3bac6525f557676294978ce662342ee84647504","msg":"JCBC-584: Correctly forward CouchbaseExceptions and prevent from wrapping into Composite.\n\nMotivation\n----------\nIf an exception is re-thrown in an error handler, RxJava will wrap it into a CompositeException.\nThe intent was to just wrap it into a CouchbaseException if needed to provide a common base, and\nthe wrong handler method was used.\n\nModifications\n-------------\nThe observable is now completed properly with the right sequence so that the Composite is not\nadded by RxJava and the toplevel Exception is still the CouchbaseException (or subclasses).\n\nResult\n------\nEasier Exception-type based error handling during the connect process.\n\nChange-Id: I677b7522567173fa047b78378ff831b54ec41333\nReviewed-on: http://review.couchbase.org/42111\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java"],"date":1413268473000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"78f86a061bbd1f465354e33740a753f274e0c066","msg":"JCBC-585: Poll for all node on \"healthy\" state on bucket creation.\n\nMotivation\n----------\nA better alternative to the previously implemented \"think time\" is to poll all nodes info\nuntil they are in a \"healthy\" state - getting out of the \"warmup\" phases. While probably not\n100% accurate, it should be good enough for testing and administrative scenarios.\n\nModifications\n-------------\nThe code now polls every second for the bucket info, grabs the state of each node and only\nproceeds if all of them are in a \"healthy\" state.\n\nIt also contains a small fix to the calculated bucket size because previously it did fail with\nint/long conversions.\n\nResult\n------\nWhena bucket is created or replaced, the code now waits until the bucket is in a healthy\nstate before reporting success.\n\nChange-Id: Icbbf424682cbae04ad0f1fa83d4d1412851f08dc\nReviewed-on: http://review.couchbase.org/42117\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1413279935000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2dd909098c2b4a5e5130642941fa0d51b276e4d5","msg":"JCBC-586: Descriptive exception types for bucket (auth) failures.\n\nMotivation\n----------\nIn addition to the generic CouchbaseException toplevel exception, more\ndetailed subclasses allow for more descriptive and narrow error handling.\n\nModifications\n-------------\nThis change adds specific exceptions for invalid bucket names and passwords,\nso that the user can apply custom logic to each of them (probably reporting\nit differently, since in general they are non-transient).\n\nResult\n------\nEasier error handling for the user.\n\nChange-Id: I5c4415bbfcc639e5433c59b4a2fcd37f4e765f9d\nReviewed-on: http://review.couchbase.org/42121\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/error/InvalidPasswordException.java"],"date":1413285422000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"66062791d4fe98f8aff5c62444233cc1128288b2","msg":"JCBC-587: Never quote start/endKeyDocId in the ViewQuery\n\nMotivation\n----------\nstart/endKeyDocIDs are never JSON and therefore are not allowed to be quoted,\nbreaking the queries when used from the SDK.\n\nModifications\n-------------\nQuotes have been removed to correctly send it over HTTP to the view engine.\n\nResult\n------\nBoth fields can now be properly utilized in a view query.\n\nChange-Id: I888d1e4d8f809e5c00ddcd202287c44bef0aed49\nReviewed-on: http://review.couchbase.org/42158\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Volker Mische \u003cvolker.mische@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1413353750000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0bc965ba5bd28439c10aff9c1882ae26eaded8ba","msg":"JCBC-590: Enable RawJsonTranscoder by default.\n\nMotivation\n----------\nAs part of the change introduced in JCBC-??, capabilities were added\nto store and retrieve raw JSON data, but it was not enabled by default.\n\nModifications\n-------------\nEnables the RawJsonTranscoder (and its document type) by default, which allows\nusers to consume it without additional effort. Note that this should\u0027ve been\nin the older change and was an oversight.\n\nResult\n------\nProper use of the RawJsonDocument is now possible.\n\nChange-Id: Ia5ddae858167cad13989a51837e49b091d5ad413\nReviewed-on: http://review.couchbase.org/42159\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1413351079000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b0921cef15e527e3b7bb5d4d35bde21575b1a3b4","msg":"JVMCBC-44 : test that if bucket was closed, operations fail fast\n\nMotivation\n-----------\nWhen calling close() on a Bucket, one expects not to be able to use the bucket\noperations anymore. This was not previously the case (would results in a\nTimeoutException from the underlying AsyncBucket after a delay).\nNow the core fails the operation with a BucketClosedException.\n\nModifications\n-------------\nAdded integration tests to check behavior of Bucket once closed. Test both\nasync and sync cases.\n\nNote that with the core modification, users can be impacted if they were\nwatching for TimeoutExceptions specifically to detect a closed bucket.\n\nAlso did a quick fix on ClusterDependentTest to create test bucket with the\ncorrect password expected later.\n\nResult\n------\nThe following behaviors are expected and tested for :\nBlocking operations on a closed bucket immediately throw a BucketClosedException.\nAsync operation call the subscriber\u0027s onError method with BucketClosedException.\n\nChange-Id: I33f49052a515b06b8ebee7cadab31c6e1acd8209\nReviewed-on: http://review.couchbase.org/42203\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BucketClosingTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java"],"date":1413452082000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b8ea3dc5fc3d11110f238673d7a97dcb9dea40ac","msg":"Make sure test case depends on existing bucket.\n\nMotivation\n----------\nThe ConnectionTest did not depend on the general \"ClusterDependentTest\"\nwhich made it subject to a potential non-existing bucket, leading to\nfalse-positive assertion errors.\n\nModifications\n-------------\nMaking it extend ClusterDependentTest.\n\nResult\n------\nNo more failing tests because the bucket doesn\u0027t exist by accident.\n\nChange-Id: I4b25876114c78621ba392c1dbdaee64e5d16393d\nReviewed-on: http://review.couchbase.org/42320\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java"],"date":1413876317000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"075b4000d17ff0de689079a3a2a2c7dce92049d0","msg":"JCBC-597: Refactor View mapping into distinct class.\n\nMotivation\n----------\nThis changeset refactors the view result mapping logic into a\nseparate class, making it easier to grasp and also preparing it\nfor future enhancements (like transparent retries).\n\nModifications\n-------------\nThe view query handling is moved into a separate class and extensive\nintegration tests have been added.\n\nAlong the way, a small bug with document() calls on reduced rows has been\nfixed as well as better toString() printing on rows.\n\nResult\n------\nBetter readability and testability in the view mapping process.\n\nChange-Id: Ic07d4f93be1176f0e47754203426575e75f57b80\nReviewed-on: http://review.couchbase.org/42324\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java"],"date":1413901546000,"numberOfModifiedFiles":7},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2616392e91343fc720eeac89838c877ab71e8e2a","msg":"Adjust checks in unit tests\n\nMotivation\n----------\nBecause of JsonDocument constuctor is not very verbose, it is very easy\nto misuse it when it comes to setting expiry. Consider following two\nsignatures:\n\n  JsonDocument create(String id, JsonObject content, long cas)\n  JsonDocument create(String id, int expiry, JsonObject content)\n\nJava does not warn when small literal number used.\n\nThe second point is that counter test clearly intent to assert that CAS\nchanged on each increment/decrement. But it done is some strange way.\n\nModifications\n-------------\nFor first case, JsonDocument\u0027s expiry properly initialized. For the\nsecond case, all combinations used to ensure that CAS does not match\n\nResult\n------\nMore robust unit tests, and more clear intention revealing.\n\nChange-Id: I462a52cb50c1a89e3e7b5cce4037ea96c4fc50c6\nReviewed-on: http://review.couchbase.org/42331\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java"],"date":1413930292000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6f0c7cf2247a3ef99a71ef2edd67f1077e4646e0","msg":"JCBC-600: Null out content() on append/prepend result.\n\nMotivation\n----------\nWhen a content is appended/prepended to a already existing document,\nthe server protocol does not return the \"final\" content. It is better\nto set the content to null instead of a wrong value - since the actual\ncontent is not just the appended/prepended chunk.\n\nModifications\n-------------\nThe content is nulled out on append and prepend. Tests have been added\nand documentation improved.\n\nResult\n------\nMore accurate application semantics, as well as improved documentation\nand testing.\n\nChange-Id: I6648ef00525424f046d4dd2f1738a5581adb99f0\nReviewed-on: http://review.couchbase.org/42348\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1413981001000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d0c1cfa5e98e628dbca7a604bb52120a84e8aa22","msg":"JCBC-601: Expose returned CAS value on remove() responses\n\nMotivation\n----------\nSince remove calls on the server return the CAS value, it makes\nsense to expose this information to the user.\n\nModifications\n-------------\nBuilds on the core-io change (JVMCBC-48) and forwards the value into\nthe actual user-visible response. Test cases and documentation are\nadapted appropriately.\n\nResult\n------\nThe user is able to consume the CAS value on remove.\n\nChange-Id: I4369c1a6bb25d6f7fb5eeac4c4abd82378682fe6\nReviewed-on: http://review.couchbase.org/42346\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1413978087000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0560e3e2d0fbad9d9d2dbe9dc1e05fe327f0a2ef","msg":"JCBC-602: Handle CAS mismatches on remove\n\nMotivation\n----------\nWhen a CAS value is passed down together with a remove request,\nthe server performs a CAS check. Previously, the response was\nnot properly respected and the user had no idea if the check\nsucceeded or not.\n\nModifications\n-------------\nTo be in line with the other methods, a CASMismatchException\nis issued in case of such a state.\n\nResult\n------\nThe user can catch and handle such errors/exceptions now properly\nand in line with similar methods.\n\nChange-Id: I9dc619648227fe0294f42e36e9d3d4f7544b968e\nReviewed-on: http://review.couchbase.org/42347\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1413979504000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"44e5e590b14634d7ffbbddaf69dd05f19b59f08a","msg":"JCBC-589 : Versioning information stored in property file\n\nMotivation\n----------\nFor now, versioning information is extracted from the Manifest.MF via\nPackage class. In cases where the sdk is integrated into a fat jar (or\nshadow jar), manifest information is lost, and the sdk cannot give a\ncomplete PACKAGE_NAME_AND_VERSION.\n\nModifications\n-------------\nVersioning information is now stored into a properties file, of which a\ntemplate is added to src/main/resources folder. Gradle will execute git\ncommand to produce version number and replace tokens in the properties\nfile with correct strings.\n\nDefaultCouchbaseEnvironment loads the properties file to retrieve the\nversion number. In case this is not possible the previous behavior of\nshowing \"unknown\" is maintained.\n\nThe file is named com.couchbase.client.java.properties in order to\nremain distinguishable even when flattened in a fatjar along with the\njava client source for example (a generic name would have caused\npotential for the wrong file to be picked up in such a configuration).\n\nNote that if git command cannot be executed by Gradle (eg not in path\nunder windows), it will put the build date in there (in the format\nunknown-yyyyMMdd).\n\nIf the sdk cannot get hold of the properties file, then we\u0027ll still have\n\"unknown\" for both implementationVersion and specificationVersion (but\nthis has been tested inside both shadow jars and manually created fatjar\nso this isn\u0027t the case as long as the properties file is present there).\n\nResult\n------\nBuilding the jar includes a com.couchbase.client.java.properties file\ncontaining complete sdk version info.\n\nRepackaging into a fat jar doesn\u0027t break the version retrieval feature.\n\nChange-Id: I7f1752fd891ca60a3192c941badd6b16373635b8\nReviewed-on: http://review.couchbase.org/42349\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/resources/com.couchbase.client.java.properties"],"date":1413983631000,"numberOfModifiedFiles":3},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"33ccb87b9a08e03afdc0a01f7973f4a0d7c449a3","msg":"JCBC-604: Move Observe utility class to core-io\n\nMotivation\n----------\nEach wrapper of core-io library have to implement Observe polling\nfeature. This way is more error prone and harder to maintain good\nquality of this implementation, which in fact will be shared.\n\nModification\n------------\nPull Observe utility classes from java-client to core-io. And wrap\nPersistTo/ReplicateTo enums from core-io library with the ones from\njava-client to preserve API compatibility\n\nResult\n------\nDuplication reduced (considering java-client and jruby-client\nlibraries). Potentially expanded coverage for the Observe\nimplementation.\n\nDepends-On: http://review.couchbase.org/42362\nChange-Id: Ia2e7602f707a616655dd46f5db5718e674ba983c\nReviewed-on: http://review.couchbase.org/42363\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/PersistTo.java","src/main/java/com/couchbase/client/java/ReplicateTo.java","src/main/java/com/couchbase/client/java/bucket/Observe.java"],"date":1414009938000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3b03630abe3ca0c1f12c3cff1f67a1516f8ef1c9","msg":"JCBC-589: userAgent in core overwritten on purpose\n\nMotivation\n----------\nAfter modifying the feature to get version number from the sdk, another\nproblem was found: when attempting to get version from both the core\nsdk and the java-client sdk, using the userAgent() method both return\nan user agent string with the java-client\u0027s information.\n\nThis is in fact by design, so that the core sends userAgent information\nrelative to the client to the outside world. On the contrary, the class\nproperty PACKAGE_NAME_AND_VERSION contains version information\nspecific to the real package (core or java client) of the Environment on\nwhich it is stored.\n\nVariable shadowing makes this distinction hard to see, and makes the\nUSER_AGENT overwriting look like a bug.\n\nModifications\n-------------\nInstead of shadowing PACKAGE_NAME_AND_VERSION, introduced new property\nSDK_PACKAGE_NAME_AND_VERSION in DefaultCouchbaseEnvironment.\n\nCommented on the write of USER_AGENT property to indicate this is by design.\n\nResult\n------\nJava client version information replaces the Core\u0027s USER_AGENT. Core will send\nsuch information to the outside world, identifying itself as a java sdk.\nFrom java sdk, calling userAgent() on any CoreEnvironment default\nimplementation will thus provide information about the java sdk version.\n\nPACKAGE_NAME_AND_VERSION will contain info about the core.\nSDK_PACKAGE_NAME_AND_VERSION will contain info about the java sdk.\n\nCalling packageNameAndVersion() on a DefaultCoreEnvironment instance\nprovides version information on the core.\n\nCalling packageNameAndVersion() on a DefaultCouchbaseEnvironment\ninstance provides version information on the java sdk.\n\nChange-Id: I3c8b01ca556fa941fd8a118ee88bdb8882473d88\nReviewed-on: http://review.couchbase.org/42415\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1414138680000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"44a530d6f1ef85166d03a85c01c404e8d3ac93aa","msg":"JCBC-606: Release buffers in transcoders + tests\n\nMotivation\n----------\nAfter some leaks were reported by Netty, it was determined that in the\nvarious transcoders, ByteBuf were inconsistently released. Most of them\ntake the ByteBuf and convert it in another format (eg JSON) and don\u0027t\naccess the buffer after that, which is a good candidate point for the\nrelease of the buffer.\n\nAdditionally, even when the transcoder released the buffer on success\nit was not released before throwing a TranscodingException.\n\nWe would gain from a standard \"automatic\" way of releasing the buffer\nin both success or error in decoding. But transcoders that produce an\noutput which still holds the buffer (eg BinaryTranscoder) should not\nrelease it.\n\nModifications\n-------------\nThe AbstractTranscoder now releases the buffer in case of both success\nand error, provided the corresponding \"shouldAutoreleaseOnXXX\" methods\nreturn true (which is the default).\n\nBinaryTranscoder has shouldAutoreleaseOnDecode return false, whereas it\nhas shouldAutoreleaseOnError return true, allowing BinaryDocument to\nkeep hold of the ByteBuf down the line.\n\nCorresponding tests have been put in place. They test both success and\nerror in decode operation. BinaryTest checks that the success case\ndoesn\u0027t release the buffer.\n\nOn JsonTranscoder, a specific static method converts ByteBuf to Json.\nThis method doesn\u0027t release the buffer, and has been documented and\ntested to reflect that this is on purpose.\n\nResult\n------\nBy default, any implementation of AbstractTranscoder will release its\ncontent buffer after decode operation, either successful or in error.\n\nBinaryTranscoder doesn\u0027t release buffers on decode success but does on\ndecode error.\n\nAll transcoder tests pass, and check the coherence of the buffer refCnt\nreference count after decode operation for the type of transcoder.\n\nNote that something should be done to inform the user that it is his\nresponsibility to manually release the buffer of a BinaryDocument.\n\nChange-Id: I1f62a832fc67eab78b4a12d4f8af371b3c89ab17\nReviewed-on: http://review.couchbase.org/42417\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/BinaryTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/RawJsonTranscoder.java","src/test/java/com/couchbase/client/java/transcoder/BinaryTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonArrayTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonLongTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonStringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/RawJsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/StringTranscoderTest.java"],"date":1414146747000,"numberOfModifiedFiles":14},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"784a5b0870ba4f11c1130dcc48c775bac4543b2e","msg":"JCBC-610: Fix decoding of BinaryDocument\n\nMotivation\n----------\nBinaryTranscoder currently refuses to decode BinaryDocuments because\nTranscoderUtils says that a document with BINARY_COMPAT_FLAGS is not in\nfact a binary document. This is a bug to be corrected.\n\nModifications\n-------------\nRefactored TranscoderUtils to recognize BINARY_COMPAT_FLAGS as binary.\nAdded a mask to easily extract the common flags part of a 32bit integer\nand implemented unit tests to check behavior of both the hasBinaryFlags\nmethod and the BinaryTranscoder.\n\nResult\n------\nNew tests passes and BinaryDocuments can be correctly identified by the\nadequate TranscoderUtils method, thus decoded by the BinaryTranscoder.\n\nChange-Id: I54c5ebfdc555f3a0441c21068f3192fdfdf96d9c\nReviewed-on: http://review.couchbase.org/42597\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/test/java/com/couchbase/client/java/transcoder/BinaryTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/TranscoderUtilsTest.java"],"date":1414663525000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1fa75eb3a927facbfbef3ef4650d31767fbee052","msg":"JCBC-612: Temporarly disable checkstyle in build\n\nMotivation\n----------\nHaving checkstyle plugin activated in gradle build but no checkstyle\nconfiguration yet causes the build to fail.\n\nModifications\n-------------\nDisable checkstyle plugin in gradle build until a checkstyle config is\nchosen and put in place.\n\nResult\n------\nBuild doesn\u0027t fail due to checkstyle errors anymore.\n\nChange-Id: Ibe6ce6e2d864b5a33c819252bd7b5957c1a85f94\nReviewed-on: http://review.couchbase.org/42654\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1414748257000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"79735698cdf3535789b32c09409cbbb9b40b6ca0","msg":"JCBC-611: Improve readability of TranscoderUtils\n\nMotivation\n----------\nDealing with flags, bit shift operators and legacy flag vs common flag\nspecification is a non-trivial brain gymnastic. Improve readability of\ncode related to that in TranscoderUtils to make the spec more visible\nand the different parts more explicit.\n\nModifications\n-------------\nImproved javadoc of the COMMON_FLAGS_MASK, added explicit constants for\nLEGACY flags and rewritten initialization of COMPAT flags constants.\n\nReworked the hasCommonFlags method to only look at common flags bits.\n\nAdded a hasCompressionFlags method to correctly detect compression flag\nin the future.\n\nReworked the hasXXXFlags to correctly detect each type of document.\n\nResult\n------\nAll tests pass and flag-related code is more readable and documented.\n\nChange-Id: I3bb051d279a3a207028baa69763059bd98a5954d\nReviewed-on: http://review.couchbase.org/42609\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java"],"date":1414673655000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"224a2d9d693816608478226dbde86eb6633413c8","msg":"JCBC-623: Upgrade core-io to 1.0.1\n\nMotivation\n----------\nUpgrading core-io to the latest bugfix release.\n\nChange-Id: I042e4e0e59430e2cd9c9817d30db622136da42dd\nReviewed-on: http://review.couchbase.org/42738\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1415087944000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ac2733f309be2a4efebb3ced960d49797f288a9b","msg":"Prepare 2.0.1 Release\n\nChange-Id: Ie598021ecf39e980eaaabe1408f6f703b78dd115\nReviewed-on: http://review.couchbase.org/42739\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1415089677000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff6701204b5193c7bfd0888c0ef549b00dc4b181","msg":"JCBC-518: No intro page on the javadoc\n\nMotivation\n----------\nWe need a simple page to welcome the user and guide him to the best\nplace to get started. Also, external links to netty and other projects\nare needed so that javadoc can resolve them.\n\nModifications\n-------------\nThis change adds a welcome page with a simple pointer to the best\nstarting point, as well as external link references to the build\nso they are picked up and the user can click his way through.\n\nResult\n------\nBetter navigateability through the javadocs.\n\nChange-Id: I8af5513cabded82455b383ae441a11ddca28d451\nReviewed-on: http://review.couchbase.org/42765\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","docs/teaser.html"],"date":1415116629000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6d0c851ba7625c2ba7c5f62c27f848adf72df2ed","msg":"JCBC-613: Add checkstyle.\n\nMotivation\n----------\nWe need proper checkstyle rules that need to be enforced across the project.\n\nModifications\n-------------\nThis change adds the styles we agreed on for now, separate commits will follow\nwith the actual code changes.\n\nResult\n------\nConsistent styles!\n\nChange-Id: I79af9e989d65ef17ab7788d6ebffbd7b23e0a054\nReviewed-on: http://review.couchbase.org/43130\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","config/checkstyle/checkstyle.xml"],"date":1415792808000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9b6b4e3415a4ecde9609c9ee9fa6fa051561d3db","msg":"JCBC-630: Add toString to Bucket\n\nMotivation\n----------\nWhen logging, it is more interesting to see significant information on\na Bucket than just its memory reference (default toString).\n\nModifications\n-------------\nAdded toString overload for CouchbaseBucket and CouchbaseAsyncBucket.\nThe String representation is in the form \"Bucket[\u003cname\u003e]\" and\n\"AsyncBucket[\u003cname\u003e]\".\n\nResult\n------\nLogged Buckets now display meaningful information.\n\nChange-Id: I8addce1e453f9effa578c822456e685753712629\nReviewed-on: http://review.couchbase.org/43357\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1416301438000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"77063b116167879ce7497534e669014ad8a12066","msg":"JCBC-624: improve JsonObject.getNUMBER methods\n\nMotivation\n----------\nWhen stored and read back, a JsonObject long field for example can be\nrestored as an Integer (because it is small enough). This leads to a\nClassCastException when calling the getLong method.\nSame is true for the three Number-related get methods : getLong, getInt\nand getDouble.\nThis is also true for equivalent JsonArray methods.\n\nModifications\n-------------\nThe methods getLong, getInt and getDouble now all expect just a Number\ninstance in the Json content. If the Number is of the asked type, or if\nit is null, it is returned directly. Otherwise it is converted to the\nasked type by calling e.g. Number.longValue() method and letting Java\nautobox the value.\n\nThis modification has been made in both JsonObject and JsonArray.\n\nAn integration test  was added (because this is only visible when\nstoring and transcoding the document), along with two new unit tests in\nJsonObjectTest (for conversion and null management).\n\nDocumentation on getNUMBER methods reflect the fact that conversion\ncould induce rounding or truncation (eg going from double to long).\n\nResult\n------\nPutting a number in a JsonDocument, storing it and getting it back in\nany numerical form now works correctly. Nulls are returned correctly\nwhen value is not present. No more ClassCastExceptions occur as long as\nthe value is numerical. Same for JsonArrayDocuments.\nAll tests pass.\n\nChange-Id: Ia3ad4e7b7ee9f0b74499aeec0067c88ef9b5925a\nReviewed-on: http://review.couchbase.org/43359\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/JsonDocumentTest.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1416307640000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c0cfae8b57b35fee6168eaa5c3c7a2a257e40fae","msg":"document IndexOutOfBoundsException, not null\n\nMotivation\n----------\nIn a JsonArray, the only error condition on get methods is when the\nindex provided is negative or too large. In this case, methods don\u0027t\nreturn null as advertised in documentation but rather throw a\nIndexOutOfBoundsException.\nThis is the correct behavior, and should be reflected in documentation.\n\nModifications\n-------------\nDocumented the fact that get methods fail in IndexOutOfBoundsException\nand not by returning null.\nAdded a quick unit test to show this Exception is expected.\n\nResult\n------\nDocumentation better reflects behavior of get methods, test passes.\n\nChange-Id: Ib59f08c2caf15ac8b6d9edd8d513fa020c4549a1\nReviewed-on: http://review.couchbase.org/43362\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java"],"date":1416310699000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"54b0784c3fc544763a03684530eb68cb5db95d7d","msg":"Depend on the latest core-io SNAPSHOT\n\nChange-Id: Icf29de8990c0a347e04638e45f2b106ca15d6dad\nReviewed-on: http://review.couchbase.org/43405\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1416398149000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4437790e0ce91c28702687d7276b449f29022f8b","msg":"JCBC-583: Fix leaks out of the netty ByteBuf pool when decoding.\n\nMotivation\n----------\nSome paths of the decoding process did not properly release the ByteBufs back to the\npool which lead to increased unnecessary GC.\n\nModifications\n-------------\nWhen the ByteBuf is not needed anymore, it is proactively released.\n\nResult\n------\nNo leak reports when working with view rows and N1Ql components.\n\nChange-Id: I57c0a7fde683a13342ea78dd718a3417a43816fa\nReviewed-on: http://review.couchbase.org/43407\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java"],"date":1416403917000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f98980929e4f745af9c160eb3915b06f1b81aad9","msg":"JCBC-614: Add Json builders from Map and List\n\nMotivation\n----------\nFor quality of life of developper, it is interesting to have factory\nmethods that allow building JsonObject and JsonArray instances from\nrespectively a Map and a List.\n\nThese source collections should be checked for invalid content such as\nnull keys or values of unsupported type.\n\nModifications\n-------------\nAdded factory method from(Map\u003cString, ?\u003e) on JsonObject.\nAdded factory method from(List\u003c?\u003e) on JsonArray.\n\nAttempting to use such methods with an empty collection will\nresult in the creation of an empty JsonValue, whereas a null input\nwill throw a NullPointerException.\n\nSub-collections are authorized, with the same restrictions. Incorrect\nsub-collections will cause a ClassCastException (which may have a\ncause, depending on the error condition).\n\nNull values are now authorized, especially by JsonValue.checkType.\n\nAdded unit tests to check behavior of factory methods, especially in\nregard to invalid input (null keys in map, values of an\nunsupported type).\n\nResult\n------\nUsers can now build JsonObjects from a Map and JsonArrays from a List.\nAll new tests pass.\n\nChange-Id: Ie07b66166c91d5440f6f821fefd9493f16c2180e\nReviewed-on: http://review.couchbase.org/43440\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1416426391000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2c3bd0705f25f33b6dc39ce6f34ae0038fcba99e","msg":"Set the version to 2.0.2-SNAPSHOT\n\nChange-Id: I0e18fec8bae9102e6be18dbadae5b417367b3899\nReviewed-on: http://review.couchbase.org/43554\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1416829521000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f5f019d82be2e42ac177ba1733fb7b50f1330c3","msg":"JCBC-638: Do not allow null or empty document IDs or negative expiry.\n\nMotivation\n----------\nNull or empty IDs are not supported and need to be rejected immediately. Also\nnegative expiration times are ambiguous and should be avoided.\n\nModifications\n-------------\nThis changeset adds IllegalArgumentChecks right into the AbstractDocument to make\nsure invalid JsonDocument params are not passed down into the core where they\npotentially cause harm.\n\nResult\n------\nBetter usability and stability when not supported Document constructs are\ncreated.\n\nChange-Id: I5dd30ae5e06f4cf97dfb37f05322ea368076d013\nReviewed-on: http://review.couchbase.org/43765\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/test/java/com/couchbase/client/java/document/JsonDocumentTest.java"],"date":1417425223000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c532dbebbd3151ac6e56c82377a584e04ddd6f1c","msg":"JCBC-559: Retry View Responses if possible.\n\nMotivation\n----------\nIn various scenarios, the server can respond with non 200-status view responses, especially\nduring failover and rebalance. To make the client more robust, most of these responses indicate\nan automatic retry, but not all of them.\n\nThe 1.4* SDK had sophisticated retry logic based on http status codes, as well as looking\ninto the response bodies if needed, so this changeset brings the same functionality to the\n2.0 SDK.\n\nModifications\n-------------\nIn the asynchronous view response stream, there is now a ViewRetryHandler which will inspect\nthe response status code and if needed, error the stream with a static exception (to avoid\noverhead of creating a new one, since its internal only and no stack is needed). This exception\nis then captured by an error handler and a retry (after a 10ms delay) is triggered.\n\nNote that all other exceptions will be allowed to pass through, as well as specific error bodies\nwhich have been identified to be \"correct\" responses and need to bubble up to the user - such\nas a missing view.\n\nThe current code will retry until it gets a successful response, once a fail fast mode is\nimplemented there can be an option added to cancel it right away.\n\nResult\n------\nMore resilient error handling when transient server response errors are recieved, especially\nduring rebalance and failover. The implementation is now on par with what we had in the\n1.4 SDK.\n\nChange-Id: I7e59c22f001c1053515e60ab74336b9181df785d\nReviewed-on: http://review.couchbase.org/43556\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/test/java/com/couchbase/client/java/view/ViewRetryHandlerTest.java"],"date":1416835529000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68e169b2bcfe251f5087a96748af66a4ecaaa1b7","msg":"JCBC-640: Improve Null handling in JsonValues\n\nMotivation\n----------\nThere is currently a NULL constant in JsonValue but it cannot be added\nin a JsonObject or JsonArray. Furthermore, when one wants to add a null\nvalue to a JsonObject, one has to perform an explicit cast in order to\ndo it (though the target type doesn\u0027t matter).\n\nWe aim at providing more ways to handle nulls int JsonObject and Array\nand to make those options either more explicit or natural (principle of\nleast astonishement).\n\nModifications\n-------------\nAdded putNull method in JsonObject and addNull method in JsonArray.\n\nFurthermore, put(String, Object) and add(Object) respectively recognize\nJsonValue.NULL and treat it as a simple null value.\n\nJsonValue.NULL can also be contained in a Map or List passed to the\nfactory methods of respectively JsonObject and JsonArray and will also\nbe treated as a simple null value in this case.\n\nAdded relevant unit tests.\nAdded an integration test in JsonDocumentTest to check that null values\nare correclty persisted and loaded back.\n\nResult\n------\nVarious ways for the user to include a null value in his JsonObjects or\nJsonArrays.\nNew tests related to nulls pass.\n\nChange-Id: Idf3312519f918ee5d584f70e0e60b4b14de02e44\nReviewed-on: http://review.couchbase.org/43832\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/JsonDocumentTest.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1417519525000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4317ebe46c0c1b369f24f88efcf7d48f241736dd","msg":"JCBC-644: More efficient timeout checks when blocking.\n\nMotivation\n----------\nThe timeout() operator is very powerful in RxJava, but also has more\noverhead and scheduling associated. In the simple case where the code\njust needs to block finally and wait for a result, the latch of the\nBlockingObservable can be reused - instead of waiting infinitely apply\na custom timeout.\n\nModifications\n-------------\nThe BlockingObservable code with the latch has been extracted into\na utility class (for internal use only for now). All of the last\nresort timeout and blocking calls have been changed to use the\nextracted method instead of the Rx timeout() calls.\n\nNote that the blocking operations which expose an Iterator on\nViews and Query cannot be converted, because this optimization\nonly works on single-result operations.\n\nResult\n------\nLess GC and scheduling overhead, because the simple blocking\nlatch is reused. It also avoids https://github.com/ReactiveX/RxJava/issues/1919\nwhere possible, although not in all cases.\n\nChange-Id: I4520ffad1a3195ea65fd8e29d01f49e10d1fc698\nReviewed-on: http://review.couchbase.org/43904\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/test/java/com/couchbase/client/java/util/BlockingTest.java"],"date":1417596580000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c6abebf198766457f2087562faf28cbc61c6bdf6","msg":"Prepare 2.0.2 Release\n\nChange-Id: Ie6ee7e6c3e787fcd2c038873f80419fb8066488d\nReviewed-on: http://review.couchbase.org/43956\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1417720700000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0aa459c2d042611a24cb72b149a2109bc56c7948","msg":"Start 2.1.0 development.\n\nChange-Id: Iebf7537c86629ce26c447b68b5e47814da15d456\nReviewed-on: http://review.couchbase.org/44011\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1417780090000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"56e01d43bcaf14d79e617925bea18bf66f8c5400","msg":"JCBC-633: Add Iterator to sync ViewResult\n\nMotivation\n----------\nAdding an iterator to ViewResult allows for nice for() syntax, without\nhaving to pull out the iterator manually.\n\nModifications\n-------------\nAdds the Iterator\u003cViewRow\u003e interface to the ViewResult and implementation,\njust proxying through to the rows() automatically.\n\nResult\n------\nMore streamlined use of ViewResult and rows when iterating sync.\n\nChange-Id: I573da4e94c1cdc7c2a9ebc35af654a3ba5bae5be\nReviewed-on: http://review.couchbase.org/43557\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/ViewResult.java"],"date":1416836952000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8b29f69c8e7a8e968ffc2fa566d257e3f253d510","msg":"JCBC-651: Allow putting collections in JsonValues\n\nMotivation\n----------\nWe already added factory methods to JsonObject and JsonArray to create\nthem from collections (respectively Map and List).\nIt would be even more easy to also allow such collections to be added\non an instance as sub elements, converting them to the corresponding\nallowed type on the fly.\n\nModifications\n-------------\nAdded put(key, Map) and put(key, List) to JsonObject.\nAdded add(Map) and add(List) to JsonArray.\nAll four methods transform the collection to a JsonValue using adhoc\nfactory method then call the corresponding overload.\n\nAdded tests to check this behavior.\n\nResult\n------\nUsers have now more options to add Maps and Lists to a JsonObject or a\nJsonArray instance, provided the Map and List conforts to limitations\ndescribed in the factory methods. They are added as sub-JsonObject or\nsub-JsonArray and should be retrieved as such.\n\nAll tests pass.\n\nChange-Id: I80e78a4a37e4c3b53242c5c0b7155b2f052fc68b\nReviewed-on: http://review.couchbase.org/44186\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1418235362000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fc56b4a09745d001accab4afbda69fb002a5d86b","msg":"JCBC-653: Respect development flag on view query.\n\nMotivation\n----------\nWhen development(boolean) is executed on the ViewQuery, the value\nis ignored.\n\nIn addition, the BBOX param is not used in a regular view query,\nso it should be removed.\n\nModifications\n-------------\nThe changeset respects the development param and removes the unused\nBBOX param from the internal datastructure.\n\nResult\n------\ndevelopment(boolean) now works as expected and the unused BBOX param\nis removed.\n\nChange-Id: I16ff16cfdfd20e6897377c9c003011eee34c8a75\nReviewed-on: http://review.couchbase.org/44242\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1418310573000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"57729bb2af35d9bbf92be56e1a10322068779766","msg":"JCBC-657: Explicitly release content when not used in transcoder\n\nMotivation\n----------\nWhen the content() is not explicitly in the transcoder, it needs to be\nreleased so that on mutating operations, the pool does not leak. Note\nthat it will leak slowly and not really noticable, because the server\nresponse is very small for non-get responses.\n\nBut it should be released so that the chunks can be reused by the pool.\n\nModifications\n-------------\nExplicitly release() the content buffer if not null and not used later.\n\nResult\n------\nBetter reusability for the pool on mutating operations, leads to less\nmemory pressure on the chunks.\n\nChange-Id: I705141036b06a103b668ee395d3b426e32425ab3\nReviewed-on: http://review.couchbase.org/44380\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1418728687000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0f6f11e571126247c68fe4fbc21103a71dbd9835","msg":"JCBC-658: LegacyTranscoder cannot work on direct ByteBuf\n\nMotivation\n----------\nWith the \"no copy\" optimization introduced in 1.1.0 core-io, the\n.array() is not available on a direct ByteBuf anymore.\n\nModifications\n-------------\nThis code fixes the LegacyTranscoder to not operate on the array()\nand instead read the bytes into a fresh array.\n\nResult\n------\nNo failing tests and more flexible behavior on both direct and non-direct\nbyte buffers.\n\nChange-Id: I5548129934d366555c821c1a2dc7465707df1e91\nReviewed-on: http://review.couchbase.org/44381\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java"],"date":1418730127000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c6ca219a111d5494c7b777fb11f2947e839ebf88","msg":"JCBC-576: Add support for geospatial views.\n\nMotivation\n----------\nGeospatial indexing and querying will be a main feature of upcoming releases\nand therefore needs to be supported in the java SDK. This implementation is\nnot compatible with the previous experimental geo support and can only be used\nwith subsequent server releases (see the product feature matrix for the actual\nrelease version).\n\nModifications\n-------------\nAdding support consists of two items:\n\n\t- querying through the SpatialViewQuery\n\t- managing spatial views through the DesignDocument\n\nA separate SpatialViewQuery has been introduced to reflect the builder that\nonly supports the params that a view query can actually understand. Responses\nhave been adapted but are very similar by intention to the regular view ones.\n\nResult\n------\nSupport for geospatial index querying in the new server versions. Not backwards\ncompatible with \"older experimental\" geo index implementations.\n\nChange-Id: I1515710a7f2268c2e396b6adafb161903a59dbc4\nReviewed-on: http://review.couchbase.org/44015\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/view/AsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/AsyncSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/AsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultView.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/main/java/com/couchbase/client/java/view/SpatialView.java","src/main/java/com/couchbase/client/java/view/SpatialViewQuery.java","src/main/java/com/couchbase/client/java/view/SpatialViewResult.java","src/main/java/com/couchbase/client/java/view/SpatialViewRow.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRow.java","src/test/java/com/couchbase/client/java/view/SpatialViewQueryTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1417786744000,"numberOfModifiedFiles":25},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8e4e9b9e040c592245a441e4a2618f15061bf8c1","msg":"JCBC-661: View defer() needs to include the request on retry.\n\nMotivation\n----------\nWhen defer() is used to retry an operation on resubscribe, the actual\nrequest needs to be created fresh to, since it contains the Subject. If\nthe core detects that the request included subject is already completed,\nit will not retry it but rather return immediately.\n\nModifications\n-------------\nCreate a new request on every defer for both regular and spatial views.\n\nResult\n------\nCorrectly retrying the request and not failing downstream because\nByteBufs have already been used.\n\nChange-Id: I4b55e35213fbfb52ea9b3490dcf05c1542b07532\nReviewed-on: http://review.couchbase.org/44474\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1418911647000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3dd586c4f9214b963b869f326677351f905ae779","msg":"Document that TimeoutException are wrapped\n\nEvery operation documented as throwing a TimeoutException in fact throws\na RuntimeException wrapping a TimeoutException.\nUpdated javadoc to reflect that.\n\nChange-Id: Iabacb330724cc4dd0f7f393d8eca42965aef38b3\nReviewed-on: http://review.couchbase.org/44525\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/view/SpatialViewResult.java","src/main/java/com/couchbase/client/java/view/SpatialViewRow.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRow.java"],"date":1419009314000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f81c850578cb29fa233d9220839508ff477853a","msg":"JVMCBC-663: Correctly escape Json in toString()\n\nMotivation\n----------\nThe Json specification indicates that control characters in Json must\nbe escaped. A subset of characters have a simple escape sequence with\nan antislash (eg: \\n, \\b) while other must be represented in unicode 16\nbits representation \\uXXXX.\n\nJsonObject and JsonArray currently don\u0027t produce escaped Json via their\ntoString methods.\n\nModifications\n-------------\nModified JsonArray and JsonObject toString methods so that they rely on\nthe underlying Jackson transcoder to produce an output that is correct\nin respect to Json escaping.\n\nAdded escaping tests for special characters.\n\nResult\n------\nAdding a String that contains special characters like a carriage return\nin a JsonObject or JsonArray now produce correctly escaped Json when\ntoString is called. New tests validate that.\n\nChange-Id: I04cc7aa87c11a7b9ec28a70237230bdbb6a6936c\nReviewed-on: http://review.couchbase.org/44574\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1419240588000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"151ed05617b0c60e4e0ad2dc7df6a1ecd1a78c7c","msg":"JCBC-668: Remove empty() factory methods on Documents.\n\nMotivation\n----------\nRecently a (valid) check has been added which makes sure\nthat every Document has a valid ID. This renders the\nempty() factory methods useless, since their usage will\nfaill imediately.\n\nModifications\n-------------\nRemove the empty() factory methods to prevent their usage\nand failure at runtime.\n\nResult\n------\nPreventing incorrect API usage and removing dead methods.\n\nChange-Id: I470ce5d9d84cb0702f3ffd58447a88b8d9eb6b6c\nReviewed-on: http://review.couchbase.org/44705\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/BinaryDocument.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonBooleanDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/RawJsonDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java"],"date":1419859365000,"numberOfModifiedFiles":11},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbe06dc88e325d04a58f228c11109cb91c72ae83","msg":"JCBC-669: toMap and toList deep convert JsonValue\n\nMotivation\n----------\nOn JsonObject and JsonArray respectively, toMap and toList are expected\nto convert the JsonValue to a collection. But what about sub-values of\ntype JsonObject/JsonArray? They should also recursively be converted to\njava collections.\n\nModifications\n-------------\nInstead of just returning a copy of the backing collection, toMap and\ntoList check each value and if it is a JsonObject/JsonArray, calls the\ntoMap/toList method recursively.\n\nAlso added a sanity check to prevent a JsonValue to add itself as a sub\nvalue (now throwing an IllegalArgumentException).\n\nModified DesignDocument to rely on getNames() to iterate over content,\nnot toMap().entrySet() (as it expects to find sub-JsonObjects in there).\n\nAdded tests to validate these.\n\nResult\n------\nThe user can now convert a JsonObject to a Map and a JsonArray to a\nList, without getting any references to the SDK json-related classes in\nthese (instead only having Maps and Lists where we had JsonObjects and\nJsonArrays).\n\nHe will also be cut off with an IllegalArgumentException if he tries to\nadd a JsonValue to itself.\n\nAll integration and unit tests pass (including new ones).\n\nChange-Id: I92c54bbfde14491db4d0262084a4a9072c298927\nReviewed-on: http://review.couchbase.org/44642\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonArrayTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java"],"date":1419422400000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8c796dd7823678de6330836b83bcef089a9256ef","msg":"JCBC-671: Ignore bad responses after retry handling.\n\nMotivation\n----------\nWhen the view retry handler kicks in, it retries the view operation, but\nthe retryWhen handler emits all the \"bad\" responses as well. The code\nafterwards instead only expects one good result to be emitted.\n\nModifications\n-------------\nThe code now only returns the last() result, which is the good one, after\nretrying succeeded. In addition, the code properly frees the info bytebufs,\nsince they are not accessed anymore when retried.\n\nResult\n------\nCorrect retry handling so that ever only one result is emitted.\n\nChange-Id: I00cf65f49151e91b3db18122a59f399f0bd2fdf9\nReviewed-on: http://review.couchbase.org/44896\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/test/java/com/couchbase/client/java/view/ViewRetryHandlerTest.java"],"date":1420455817000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"12921da34500c036013157904ce1e129b52ca113","msg":"JCBC-662: Detect server feature availability\n\nMotivation\n----------\nMore and more features are only available on newer versions of server,\nand the SDK has to maintain a clear picture of the compatibility matrix\nwhich is getting harder to do explicitely via environment variables.\n\nWe need a way of easily and programatically detect if a feature is\navailable on a specific instance of a Cluster (eg Spatial View are only\nfound on cbserver \u003e\u003d 3.0.2).\n\nModifications\n-------------\nAdded Version to represent a version number (major.minor.patch).\nAdded CouchbaseFeature, an enum of all testable features known to the\ncurrent version of the SDK with the server version from which each was\navailable.\n\nAdded helper class FeaturesHelper with a method to check for a feature\non a given Cluster (or rather the ClusterManager\u0027s ClusterInfo).\nIt will parse the info, find out the tiniest server version and check\nthat version vs the feature\u0027s minimum required version.\n\nAdded utility method \u0027ignoreIfMissing\u0027 on ClusterDependentTest to allow\nintegration tests to easily skip tests if the required feature is not\navailable.\n\nResult\n------\nAnyone is now easily able to check if the connected cluster can provide\na given feature. Internally, integration tests can be skipped if that\u0027s\nnot the case.\n\nAll new tests pass.\n\nChange-Id: Ia93cc63c8f383fc141896a5ff30a66c76d8b2445\nReviewed-on: http://review.couchbase.org/44520\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/cluster/ClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterInfo.java","src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java","src/main/java/com/couchbase/client/java/util/features/Version.java","src/test/java/com/couchbase/client/java/util/features/FeaturesTest.java","src/test/java/com/couchbase/client/java/util/features/VersionTest.java"],"date":1419004241000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68dfa40e64c4a83735515521c53b02327674cf46","msg":"JCBC-672: Use timer instead of interval on view retry.\n\nMotivation\n----------\nOn a view retry, the handler should only initate the retry once, instead\nof over and over again on the interval.\n\nModifications\n-------------\nUse the timer instead of interval on the Observable to re-initiate the\nretry logic.\n\nResult\n------\nCorrect behaviour on view retry.\n\nChange-Id: I685dba9c38925affd589a5b8e72c790ba9687498\nReviewed-on: http://review.couchbase.org/44900\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java"],"date":1420471603000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5de1b0d21ff48f4b9c363a6dae389836c92f1b61","msg":"JCBC-673: Retry cancelled view requests too since they are idempotent.\n\nMotivation\n----------\nView requests can be freely retried, even when the node is removed and\nforefully cancelled because it was in-flight. This makes sure that\nless view operations are cancelled at the user level.\n\nModifications\n-------------\nExplicitly also retry RequestCancelledExceptions from the core layer.\n\nResult\n------\nTransparent view retries when a node is removed or failed over.\n\nChange-Id: I71573232bd55b8a2f2deb28eb3807932586f8b1b\nReviewed-on: http://review.couchbase.org/44902\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java"],"date":1420472629000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1b9b1f37e105d9fe9c1f9f4a12e7510e1dcba482","msg":"JCBC-622: Add name and description to generated pom.\n\nMotivation\n----------\nThese two properties were previously added by hand, but need to be part\nof the POM for maven central publishing.\n\nModifications\n-------------\nAdded the name and description, similar to the core-io implementation.\nAlso, Simon and Sergey have been formally added as developers.\n\nResult\n------\nNo more manually adding those properties by hand.\n\nChange-Id: I16b3ac391227b5ee68a60315917f50d1b769a480\nReviewed-on: http://review.couchbase.org/45023\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-on: http://review.couchbase.org/45026","modifiedFiles":["build.gradle"],"date":1420630506000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"98486a17727e8e0e1177fe4593f0d95a6691991b","msg":"JCBC-675: Inverse logic for view retry on 404 responses.\n\nMotivation\n----------\nThe current code has troubles to decide if a 404 response should be\npropagated or retried, since the response has been changed in 3.0.2\nwhen a view is not found.\n\nModifications\n-------------\nThis code inverts the logic, checking explicitly for the phrase returned\nwhen a node is not provisioned, making sure only this case is retried\nand the others are propagated.\n\nResult\n------\nMore robust handling of 404 responses against different node versions.\n\nChange-Id: I0557050dff1242b782e05a3af1fe8346cfb917ec\nReviewed-on: http://review.couchbase.org/45021\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-on: http://review.couchbase.org/45025","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java"],"date":1420629145000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"411bbd745009df4ab8cdc1f1dc941efa9cf278bf","msg":"JCBC-665: n1ql-dp4 Refactor Query into Statement\n\nMotivation\n----------\nIn dp4 queries are not just a string from the query language, but they\ncan have additional parameters. The current implementation just assume\nthere\u0027s no other relevant parameter.\nWe need to introduce the concept of a Statement (the current Query dsl)\nand allow to construct queries with either just a Statement, or with\nparameters (positional or named).\n\nModifications\n-------------\nWhat follows are BREAKING CHANGES:\n\nRefactored Query class into Statement class (including in tests, vars,\njavadoc). As a side effect, fixed the references to Query in javadoc of\nSpatialViewQuery and ViewQuery.\n\nThe Query interface now represents a complete N1QL dp4 query, that is a\nStatement and some other params. Such queries are sent to the server by\ntransforming them into Json (the N1QL server accepts Json body in POST\nfor queries).\nThree implementations have been added: SimpleQuery replaces the use of\nQuery in previous versions, while ParametrizedQuery and PreparedQuery\nallow to fill values for positional or named parameters in a Statement.\n\nPrevious methods query(String s) on buckets have been removed. Ad hoc\nquerying is still possible by providing a complete json representation\nof the query, parameters and all included, through the queryRaw method.\n\nThe equivalent of previous query(Query q) method is now query(Statement\ns) as the original Query interface has been renamed to Statement.\n\nGenericQueryRequest has been refactored in core to use factory methods\nto distinguish between a simple statement and a full json query. The\nlatest is now in use in CouchbaseAsyncBucket.\n\nAdded tests for the construction of N1QL json from various Queries.\n\nResult\n------\nUser now construct Statements using the DSL, that they use in a Query.\nThese conforms better to the dp4 specification of N1QL querying, and\nwill ultimately allow for optional and named parameters to be used.\n\nChange-Id: I148fb2694bffe0e4235f5a151186037e92713656\nReviewed-on: http://review.couchbase.org/44595\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/ParametrizedQuery.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/SimpleQuery.java","src/main/java/com/couchbase/client/java/query/Statement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultOffsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/OffsetPath.java","src/main/java/com/couchbase/client/java/view/SpatialViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1419280202000,"numberOfModifiedFiles":16},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"733ce5e8f60629d9070fa8bb636f56aa0e90b5d6","msg":"JCBC-674: API for prepared statements\n\nMotivation\n----------\nIn N1QL dp4, prepared statements are a bit different from parametrized\nstatements. Executing a prepared statement requires two steps: obtain\nthe query plan then later on execute the query plan.\n\nModifications\n-------------\nAdded classes to represent a PREPARE Statement (the one for step 1, that\nallows to obtain an execution plan), and the QueryPlan itself.\n\nPreparedQuery now uses the QueryPlan and can value parameters.\n\nAdded methods on (Async)Bucket to obtain a QueryPlan from a\nPrepareStatement (step 2 is just using a PreparedQuery in the existing\nmethod).\n\nRefactored the various Query classes with a common base AbstractQuery,\nfixed the unit tests in QueryToN1qlTest.\n\nAdded an integration test for Queries (work in progress).\n\nResult\n------\nUsers can now obtain a QueryPlan from a Statement and execute said plan.\n\nChange-Id: I3b7cba7adeeaf8d7a1b32b2d87d25ec3e45f53cc\nReviewed-on: http://review.couchbase.org/45000\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AbstractQuery.java","src/main/java/com/couchbase/client/java/query/ParametrizedQuery.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/QueryPlan.java","src/main/java/com/couchbase/client/java/query/SimpleQuery.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1420557913000,"numberOfModifiedFiles":12},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9c6fb20228cea6ce0d202d6fa3eeef45de122b91","msg":"JCBC-677: remove queryRaw from API\n\nMotivation\n----------\nOffering a way to bypass the DSL and checked API by providing a full raw\nN1QL request will probably lead to abuse.\n\nModifications\n-------------\nEncourage going through the API and DSL, which reflect what is really\nsupported in N1QL, by removing the queryRaw methods from the API.\n\nOnly leave it on CouchbaseAsyncBucket as a package-protected method in\norder to allow tests and internal usage only.\n\nResult\n------\nLess right for user to circumvent the client and craft bad N1QL queries.\n\nChange-Id: I09e9d7cb82b32afc67c894fed37ed117b18d6574\nReviewed-on: http://review.couchbase.org/45078\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1420729871000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"73510ef74db59544948ecb1a334e2c1d1897a94a","msg":"JCBC-678: support more parameters for N1QL query\n\nMotivation\n----------\nIt makes sense that some request parameters from N1QL specification be\ntuned by the user. Offer an API to do that for relevant parameters.\n\nModifications\n-------------\nAdded QueryParams, following the Parameter Object pattern, to allow to\nset various relevant query parameters for N1QL. Added consistency enum.\n\nAdded unit tests to check the produced JSON query and the coherence of\nthe API.\n\nAdded method on JsonObject to remove an entry from the JSON, by key.\n\nResult\n------\nUsers now can further tune their N1QL queries with relevant parameters.\n\nChange-Id: If5153f86a09c351a8c3adfdac41a2493cc6e3156\nReviewed-on: http://review.couchbase.org/45091\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/query/AbstractQuery.java","src/main/java/com/couchbase/client/java/query/ParametrizedQuery.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/QueryParams.java","src/main/java/com/couchbase/client/java/query/SimpleQuery.java","src/main/java/com/couchbase/client/java/query/consistency/ScanConsistency.java","src/test/java/com/couchbase/client/java/query/QueryParamsTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1420743029000,"numberOfModifiedFiles":12},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ceb1eb3ecb31b322003467c7370e81bf998bef18","msg":"JCBC-676: factory methods for all Query\n\nMotivation\n----------\nFor consistency with the rest of the API and centralization of Query\ncreation, use factory methods on Query rather than public constructors.\n\nModifications\n-------------\nAll xxxQuery constructors made packaged protected, instanciation moved\nto Query (now an abstract class).\n\nChange-Id: I07a5a5a6c8742301a54e79c3d9a5166879706a58\nReviewed-on: http://review.couchbase.org/45142\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/query/AbstractQuery.java","src/main/java/com/couchbase/client/java/query/ParametrizedQuery.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/SimpleQuery.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1420817041000,"numberOfModifiedFiles":8},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e39b595dc2e77d2be2a418a483a7ba303706a3fc","msg":"JCBC-680: adapt (Async)QueryResult to new response\n\nMotivation\n----------\nIn the core, the response for N1QL has been enriched : multiple errors\nand delayed final status on the request. Java client must be adapted to\nreflect these changes.\n\nModifications\n-------------\nReworked AsyncQueryResult and QueryResult to better reflect the data in\ncore response.\nCouchbaseAsyncBucket now correctly build the whole data (and should also\ncorreclty release underlying buffers).\n\nResult\n------\nCore and Client response on Query are closer.\n\nChange-Id: I9c3b0c07a9e084a17e7b6cc8a3255b0306c9c7fd\nReviewed-on: http://review.couchbase.org/45205\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java"],"date":1420823770000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"31ec3320211839391d97c4b7e5ae92dd57f3205d","msg":"Enable ByteBuf leak detector and log4j logging on tests.\n\nMotivation\n----------\nWe need to enable the PARANOID leak detector as well on the client to\nmake sure we fix all leaks.\n\nChange-Id: Ib9f47101b8014981f55d15e5b42c9c1ea743b774\nReviewed-on: http://review.couchbase.org/45269\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/resources/log4j.properties","src/test/resources/log4j.properties"],"date":1421161632000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"26fdbe5d00cdbb1bdd2f439090e039a803c73f69","msg":"JCBC-682: Free ByteBufs on get* before filtering them out.\n\nMotivation\n----------\nIn all get* variants, the results are filtered on non-success. Since\ncontent is still allocated in the responses, it needs to be properly\nfreed before filtering since the later code never has a chance to\ndo so properly.\n\nModifications\n-------------\nFree the allocated contents when the result is filtered out.\n\nResult\n------\nNo leaks when non-success responses for get* variants are returned.\n\nChange-Id: I59a539e5fe6bb7cd0d9e54b1a5db1c9c93359bc3\nReviewed-on: http://review.couchbase.org/45310\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1421229970000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cb5319c580b360c9936fc18a037f14dfcc5cf235","msg":"Skip QueryTest if feature unavailable\n\nThe QueryTest is run if server packages N1QL (versions \u003e\u003d 3.5.0) or if\nquery is explicitely enabled on the environment.\n\nChange-Id: Id760ec2eecc5a83619367bc42fc7fb1f96182ea1\nReviewed-on: http://review.couchbase.org/45276\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java"],"date":1421170383000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3d54d8b85a4643b120513c0cac1668c77068c7f6","msg":"JCBC-674: Refactor prepared statements.\n\nMotivation\n----------\nThe current prepared statements API is great, but it can be made a bit\nsimpler in terms of working with statements. The API can hide the\nPrepareStatement and therefore reduce the surface level for the user.\n\nModifications\n-------------\nqueryPrepare has been streamlined to pepare and it now accepts any\nstatement. If it is a normal one, it is automatically prepared before\nsent to the server.\n\nResult\n------\nEasier way to access and work with prepared statements.\n\nChange-Id: I2ac46c9b3c8575e1e5f00268b92fab4b873c31da\nReviewed-on: http://review.couchbase.org/45428\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1421398424000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ec777c47d088200673587ebade57eac17d4452ac","msg":"JCBC-683: allow raw statements in Query\n\nMotivation\n----------\nSome statements like \"CREATE PRIMARY INDEX\" are not supported by the DSL\nand we should offer users a way of doing them.\n\nModifications\n-------------\nAdded overloads to simple/parametrized factory methods in Query for such\nstatements.\n\nAdded test of a simple raw statement to N1QL.\n\nResults\n-------\nUsers can issue non-DSL statements like \"CREATE PRIMARY INDEX\".\n\nChange-Id: I77dc9eb9be4f923627755ba5901670bd8591516c\nReviewed-on: http://review.couchbase.org/45437\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Query.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1421404895000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1fc2c0060e2fa81587eaf53ed72f835d3fe48afd","msg":"Using raw statement to create index in test\n\nMaking sure that N1QL primary indexes are at least created on test\u0027s\nbucket before testing N1QL features.\n\nChange-Id: Iea06c91f19843f0c487a9cd43788bddb884b0673\nReviewed-on: http://review.couchbase.org/45439\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java"],"date":1421405808000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c993702b572a85a63299f69a25904813b28688a5","msg":"Report unparsable ByteBuf in Excepton.\n\nMotivation\n----------\nWhen the JSON buffer cannot be parsed for some reason, it needs\nto be included in the error message for easier bug hunting.\n\nChange-Id: I2b0aa18e49bfaebf06b20fc5af78e2f787ac2e41\nReviewed-on: http://review.couchbase.org/45442\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java"],"date":1421406457000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b714600b77837be306b9b29a957c9f6bd9dfd075","msg":"JCBC-684: Fix leaks in BucketManager\n\nMotivation\n----------\nThe BucketManager has a few places where ByteBufs are not properly\nreleased.\n\nModifications\n-------------\nProperly release allocated ByteBufs back to the allocator.\n\nResult\n------\nBucketManager does not leak byte buffers anymore.\n\nChange-Id: I7922b563e4c89d966168a122dac2d513d5668449\nReviewed-on: http://review.couchbase.org/45438\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java"],"date":1421404911000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"49e0262feeae37de692a8524f8ce637c87a199ae","msg":"JCBC-686: Make QueryResult iterable.\n\nMotivation\n----------\nIf the blocking query API is used, adding the Iterable interface provides\nsome nice syntactic sugar to iterate over rows with a for loop.\n\nModifications\n-------------\nMake the QueryResult implement the Iterable for the QueryRows and return\nthe iterator right away.\n\nResult\n------\nIts now easier to just loop over the rows in the blocking api.\n\nChange-Id: Icd167d84a16dc0d182203ec77b08f01520c25639\nReviewed-on: http://review.couchbase.org/45447\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java"],"date":1421409231000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"48113169d85f5811bb335b64af0d30602e6aa44d","msg":"JCBC-685: Offer escaped id Expression method\n\nMotivation\n----------\nSome identifiers in N1QL need to be escaped by backticks, for example\nwhen they contain a dash. We need a method to create such identifier\nExpressions.\n\nModifications\n-------------\nAdded method \"i\" on Expression to create such escaped identifiers. The\nmethod can create a list of identifiers, which are then separated by a\ncomma and space, each of them then escaped using `.\n\nAllowed From clause in DSL to accept an Expression as identifier via\nFromPath.\n\nResult\n------\nUsing identifier like \"beer-sample\" is possible by escaping it using i.\nAlso, using such an Expression in From clause is now also possible.\n\nChange-Id: I3d368e175371b64df02ba0125130ea4e0f19172f\nReviewed-on: http://review.couchbase.org/45443\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultFromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/FromPath.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java"],"date":1421406754000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6c3e1ff6eab5398285bcdbfa59c08a06ec6657be","msg":"JCBC-687: Block QueryResult construction\n\nMotivation\n----------\nIn the current implementation, each separate getter uses the async\nstream and blocks on it. This has the effect that if one of the getters\nis not called, the underlying stream has no subscription and buffers\nare not released.\n\nModifications\n-------------\nInstead of consuming and blocking in each getter, consume all data of\nthe response straight from the constructor.\nThis blocks longer but we are sure that everything gets consumed and\nreleased properly.\n\nBucket.query(query, timeout, timeunit) now uses the timeout to\nrepresent maximum time it takes for the server to return a complete\nresponse, including streaming of all rows.\n\nResults\n-------\nClients may wait longer for the response, but when it arrives it is\ncomplete and there\u0027s no need to worry about underlying buffers or\ncalling every getter.\n\nA client having used the signature with a small timeout may break\nsince until now said timeout would reprensent the time it takes the\nserver to serve first chunk of the response.\n\nChange-Id: If35edc4e0e32efc110a8dbba7ececb3eb9515143\nReviewed-on: http://review.couchbase.org/45450\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java"],"date":1421416502000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d8a10f2e585a1bef7febd969683317783f9741c9","msg":"Prepare 2.1.0-dp release\n\nChange-Id: Icdd3559c68007ba3b6a9dfc0fc4518d739ebf521\nReviewed-on: http://review.couchbase.org/45462\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1421419728000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"50439b9aff117f03fa1599da15cd6c631346385b","msg":"Change master back to 2.1.0-SNAPSHOT\n\nChange-Id: I63ee74350ffdae9a830d0c9785adde7c4382a12b\nReviewed-on: http://review.couchbase.org/45463\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1421421587000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9c21cc4eb67fb903f9adc96d93c103aa8d2662e7","msg":"JCBC-646: Reuse new observe customization functionality.\n\nMotivation\n----------\nThe corresponding change in core-io makes it possible to configure\nthe observe poll interval delay. The java-client needs to be adapted\nto make use of the new functionality.\n\nModifications\n-------------\nThis changeset passes the environment delay down to the observe calls.\n\nResult\n------\nConfigurable observe poll intervals.\n\nChange-Id: I5999edbc6c4d223b0bf026b88b8e28b50febc7fa\nReviewed-on: http://review.couchbase.org/44522\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1419005423000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ecf393ffe69828d564dec99940b396c7d300af0d","msg":"Override environment core builder setters.\n\nMotivation\n----------\nThe core environment builder setters need to be overridden, so that\nwhen used in a fluent API the proper return value is used.\n\nChange-Id: If01897db73218588b612e17addedde91f063f0d1\nReviewed-on: http://review.couchbase.org/45569\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1421678555000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbafeca4def4ba77a053c750e561662c732349d1","msg":"JCBC-689: Throw exception when cluster manager passwd is wrong.\n\nMotivation\n----------\nWhen a illegal password is used on the cluster manager, a proper\nexception needs to be thrown that clearly shows what\u0027s going on.\n\nModifications\n-------------\nThe code now checks the return status and throws a InvalidPasswordException\nwhen it gets an unauthorized response from the server. If it is a different\nerror, a regular couchbase exception is thrown.\n\nResult\n------\nUsers will detect more quickly when they\u0027ve entered a wrong password.\n\nChange-Id: I8aefd1adae7ed93e8d15ac3cb35d6e7366e289b1\nReviewed-on: http://review.couchbase.org/45572\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1421683342000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5ebc3f9d4df44dddb1de4867a74377de10b653f7","msg":"JCBC-691: Expose n1ql\u0027s requestId/clientContextId\n\nMotivation\n----------\nN1QL server assigns a requestId to each request and also lets the caller\nset a clientContextId. Both are returned in the response, which allows\nto track queries, log, logical operations, etc...\n\nThese should be exposed in the client\u0027s result.\n\nModifications\n-------------\nQueryResult and AsyncQueryResult now have getters for requestId and the\nclientContextId.\n\nAdded tests for these getters in QueryTest + a test on truncation of the\nclientContextId to 64 bytes on server side.\n\nImproved QueryTests a bit.\n\nLimitations\n-----------\nCurrent N1QL dp4 builds don\u0027t include consistency checking, which causes\nfirst run of each statement to fail to return results... This has been\ntemporarily worked around by issuing a SELECT * in @BeforeClass.\n\nChange-Id: Ibd7069884f043143c76f187ead8037b5af515e4c\nReviewed-on: http://review.couchbase.org/45860\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java"],"date":1422037378000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1ded28af3ba61e638ee5a9d33feb2b6a4544274b","msg":"bump latest stable version in README\u0027s pom\n\nalso added links to the forums and blog\n\nChange-Id: Ide712a5b2fd836153e77273841c81225581c0924\nReviewed-on: http://review.couchbase.org/45796\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1422037653000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"401f57a620d21249ca359db52751b3c4f6dd7755","msg":"JCBC-692: fix lock on creating DefaultQueryResult\n\nMotivation\n----------\nUsers reported that all they get when trying to do a n1ql query is a\ntimeout. This comes from a race condition/deadlock that happens when\ninstantiating the DefaultQueryResult (blocking on each component of the\nAsyncQueryResult).\n\nModifications\n-------------\nOnly ever block once, in CouchbaseBucket, instead of multiple times in\nthe DefaultQueryResult constructor, by using a zip.\n\nConstructor now only deals with collections or scalar types, not with\nObservables.\n\nResults\n-------\nAcquiring a query result synchronously should now work as expected.\n\nChange-Id: I535d51ba9d67077fba99d209f936efdd5458802d\nReviewed-on: http://review.couchbase.org/45868\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java"],"date":1422280800000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4a6015856e41978d5c7a3ea529509491a3e76d7d","msg":"JCBC-542: Expose more specific KeyValue errors.\n\nMotivation\n----------\nThis changeset builds on top of JVMCBC-132 and exposes the specific error\ncodes as proper errors/exceptions to the user. This especially includes\nE2BIG and TMPFAIL.\n\nModifications\n-------------\nThe operations have been modified to take the new errors into account\nand convert them into proper exceptions. In addition, a \"catch all\"\nhas been added.\n\nDocumentation for all new exceptions has been improved and added.\n\nIn addition to the return codes from the server, a proper check has\nbeen put into place so that document IDs are not longer than 250\nbytes - which would be rejected by the server anyway.\n\nResult\n------\nEasier error handling and exposure for errors back up to the user\nlevel.\n\nChange-Id: Ic5262612156f0487186c0c2b23933caf22c5fc8b\nReviewed-on: http://review.couchbase.org/45874\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/error/CouchbaseOutOfMemoryException.java","src/main/java/com/couchbase/client/java/error/RequestTooBigException.java","src/main/java/com/couchbase/client/java/error/TemporaryFailureException.java","src/test/java/com/couchbase/client/java/document/JsonDocumentTest.java"],"date":1422291210000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f7389dc2750f5beba3b371be849a3f8ef39250ad","msg":"Add Builder overrides for proper chaining.\n\nMotivation\n----------\nThe returned builder needs to be the one from the client, otherwise\nthe core environment gets built and not the extended one from the\njava client.\n\nModifications\n-------------\nBuilder methods have been properly overriden, and also sanity warnings\nhave been put into place to tell the user when his max lifetime is\nsmaller than the max configured blocking timeouts.\n\nChange-Id: I198d226c3d19af3de1471cf0bd419251fea326b8\nReviewed-on: http://review.couchbase.org/45926\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1422368122000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da4e8f54643a6e06493eae6892ae9b84325af473","msg":"Improve javadocs for RequestCancelledException.\n\nChange-Id: I5d1648128aa513f27bca36c68ab23a9bc6a9f350\nReviewed-on: http://review.couchbase.org/45928\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1422370517000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b05fec1caed3c3fca1d57e81c13bb8d7752b818a","msg":"JCBC-628: Add JsonValue factory method fromJson()\n\nMotivation\n----------\nAdd another way of creating JsonObject/JsonArray, from JSON Strings.\n\nModifications\n-------------\nAdded fromJson() static method on both JsonObject and JsonArray, named\nlike that to avoid confusion with \"from\" method called with a String.\n\nAdded unit tests to check behavior.\n\nResults\n-------\nUsers can now easily create a JsonArray/JsonObject from a JSON String\n(provided they know the kind of JSON value the String contains).\n\nChange-Id: I6d880d1a5444cac5c67483edd661df60c954fe9d\nReviewed-on: http://review.couchbase.org/45929\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1422370679000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d9c0335ed8bf140a80c997537557af564df3fea3","msg":"JCBC-694: Add method to prepare String Statement\n\nMotivation\n----------\nWhile creating Query from a simple String is possible in the API, no\npublic way of doing the same when preparing a QueryPlan exist.\n\nModifications\n-------------\nAdded an override on Bucket and AsyncBucket to accept preparation of\nString statements.\n\nThis is using new (and tested) factory method on PrepareStatement.\n\nImproved documentation to also show that placeholders are ok in such\nstatements.\n\nResults\n-------\nUsers can now prepare a statement given in String format.\n\nChange-Id: I90fc7b605b297b844615e131efe070eef62c6786\nReviewed-on: http://review.couchbase.org/45932\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/Query.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1422375594000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2e9824ba407f393d90b1a34497689cf26fdcb864","msg":"Prepare 2.1.0-dp2 release\n\nChange-Id: I5d410aa7f8d9dd26bbf47434c1ec2f2e30864c67\nReviewed-on: http://review.couchbase.org/45963\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1422434663000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"500fa8f01ee8bda417f29cbb7909d748899f0378","msg":"JCBC-407: Allow DNS SRV bootstrap.\n\nMotivation\n----------\nIn order to allow users to centralize their seed nodes list in\nDNS records, DNS SRV should be utilized to automatically fetch\nthose records.\n\nModifications\n-------------\nNot all DNS SRV informations are supported, weighting and priority\nare not.\n\n\t- dnsSrvEnabled() must be set on the environment.\n\t- only one record is passed into the seed node list\n\t- this node is used as the dns srv lookup record\n\t- the fetched list is then used to bootstrap the cluster\n\nNote that the fallback path is that the node passed in for DNS SRV\nbootstrap will be used as the A record for further bootstrap.\n\nHere is a sample set of records (replace _couchbases if you have\nsslEnabled on the environment):\n\n_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node1.example.com.\n_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node2.example.com.\n_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node3.example.com.\n\nResult\n------\nIt is now possible to fetch a bootstrap list through DNS SRV.\n\nChange-Id: I7168ff9a1341d2d1bd90c7b735e9217c4498610e\nReviewed-on: http://review.couchbase.org/45983\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/util/Bootstrap.java","src/test/java/com/couchbase/client/java/util/BootstrapTest.java"],"date":1422452157000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"995a517c37bc48c6d25ce6a2c4cb9877a10dec1c","msg":"Remove printlns from tests.\n\nChange-Id: I41e86ec393a88b11db84889282eaa8a632650197\nReviewed-on: http://review.couchbase.org/46031\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonArrayTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java"],"date":1422523774000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e0a7b741812aa8ea8fdaf3ece6d4b14bf57a4ef6","msg":"JCBC-696: Expose the list of nodes directly on the BucketInfo.\n\nMotivation\n----------\nBased on user feedback it was identified that direct access to the list\nof nodes in the cluster/bucket makes it easier to consume it for\nfurther processing at the user level.\n\nModifications\n-------------\nIterate over the raw response, filter out the hostnames (without port)\nand expose it directly as a getter. A test has been modified to make\nsure it works as expected.\n\nResult\n------\nEasier access to the list of nodes in that cluster.\n\nChange-Id: Ia4538c8ace57a2ba426562d286f725cccc3c5e5b\nReviewed-on: http://review.couchbase.org/46030\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BucketInfoTest.java","src/main/java/com/couchbase/client/java/bucket/BucketInfo.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketInfo.java"],"date":1422523560000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"82914466fbd13efe015499df33170353f1abc903","msg":"Change master back to 2.1.0-SNAPSHOT\n\nChange-Id: I698566cb8ca199307330453ddb53f591bbbb1658\nReviewed-on: http://review.couchbase.org/46037\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1422527736000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7347b7a87591265372aadf9148c8a63ca44a8ed7","msg":"JCBC-539: Add NodeLocatorHelper to help mapping IDs to nodes.\n\nMotivation\n----------\nIn some cases it can be helpful to know to which node of the cluster\na specific document ID maps. In order to not expose lots of core-io\ninternals, a helper class is introduced which encapsulates the\nfunctionality.\n\nModifications\n-------------\nThe helper class subscribes itself to the configuration provider in\norder to be always up-to-date on the latest configuration. It provides\nboth information on all nodes in the config, but also exposes methods\nto explicitly map IDs to nodes.\n\nNote that this class is stateful, since it subscribes to the changes\non the configuration provider.\n\nResult\n------\nEasy and small surface area access to the underlying id \u003d\u003e node\nmapping.\n\nChange-Id: I241c36eb652f06e333dc6eb27a5392a02b7d7b94\nReviewed-on: http://review.couchbase.org/46075\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/NodeLocatorHelperTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/util/NodeLocatorHelper.java"],"date":1422531854000,"numberOfModifiedFiles":6},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ce97d37508f048ad3481c1bfbf0fca30a37da3f7","msg":"correctly override keepAliveInterval\n\nthis change relates to JVMCBC-21.\n\nChange-Id: I48efb9bc57c85c3b9caa456755fa2e25b5920860\nReviewed-on: http://review.couchbase.org/46039\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1422528382000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon@couchbase.com","authorTimeZone":"GMT+00:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7607d34465b45f73e5cb32df52b89c185ccf2d55","msg":"Revert \"correctly override keepAliveInterval\"\n\nThis reverts commit ce97d37508f048ad3481c1bfbf0fca30a37da3f7.\n\nChange-Id: If7ad39a80a01690b48cc1fc302e348aa1504036f\nReviewed-on: http://review.couchbase.org/46138\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1422630509000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c53079264dc59c17f6aafcbc3e94e7d7c2ca0f6b","msg":"correctly override keepAliveInterval\n\nthis change relates to JVMCBC-21.\n\nChange-Id: I8a112cc44f38d513e03fbb5a70ebae4cf34d6100\nReviewed-on: http://review.couchbase.org/46140\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1422528382000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"716a7c6649e17d6bef6737250a12cf5853ec920a","msg":"JCBC-698: Increase disconnect timeout and make Bucket#close() use it.\n\nMotivation\n----------\nAfter closer inspection, the disconnect timeout set to 5 seconds looked too\nshort. It  has been increased to 25 seconds. Also, the bucket close method\nwas using the management timeout, but of course should also use the\ndisconnect timeout.\n\nChange-Id: I1d2ef62a8005ee4e56cb254eb5460e27252883b7\nReviewed-on: http://review.couchbase.org/46224\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1422871007000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df923915457eb6ca41041fabc02651b1794c9f8e","msg":"JCBC-701: Error with DocumentDoesNotExistException on remove\n\nMotivation\n----------\nCurrently the catch-all CouchbaseException is thrown, which does\nnot provide the proper semantics needed.\n\nModifications\n-------------\nThrowing the proper exception makes it possible for the user to\napply fine grained control and retry logic as needed, so this\nchange adds a test to verify.\n\nResult\n------\nCorrect exception thrown on remove when the document is not found.\n\nChange-Id: Icb2614e91d624ababc40a2f2794382001e91d1d1\nReviewed-on: http://review.couchbase.org/46310\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BinaryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1422954016000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07eea349a1c1b8fe16f90ef6bdcf777f639e69cc","msg":"JCBC-702: Avoid flatMap for insert/upsert/replace.\n\nMotivation\n----------\nFlatmap is more expensive (gc, syncing) and is not needed in this\ncase were a simple conversion is happening.\n\nModifications\n-------------\nflatMap is converted to a regular map, giving a slight performance\nboost and better GC characteristics. In addition, it is now in\nline with all the other methods in the bucket for similar\noperations.\n\nResult\n------\nSimpler implementation and slightly better performance and GC\nbehaviour.\n\nChange-Id: I42d0fc2c120474aa187235da268feb1d5ded815e\nReviewed-on: http://review.couchbase.org/46324\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1422970641000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"01b505ab651be5637d2074fca63de92120f88c70","msg":"Prepare 2.1.0 Release\n\nChange-Id: I741abbe5ea316e6c19ff91633b5434a50bdc10a3\nReviewed-on: http://review.couchbase.org/46377\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","build.gradle","gradle.properties"],"date":1423039948000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d1807b154a7663a699f0ecbefb5500ee5c20a7a7","msg":"Start working on 2.1.1\n\nChange-Id: I5c47ebd4345b1c0ebd854c932785858640225767\nReviewed-on: http://review.couchbase.org/46576\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["gradle.properties"],"date":1423467489000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5c47d043bd3badba784833ed5985b96bd4ab8a38","msg":"JCBC-703: Optimize PersistTo.NONE \u0026\u0026 ReplicateTo.NONE\n\nMotivation\n----------\nCurrently when someone uses the mutation overloaded methods\nwith persistence constraints, even when both are set to NONE\nthe caller incurs some overhead since we call into Observe\nat least one time (with flatMap). This can reduce performance\neven when those calls are not needed.\n\nModifications\n-------------\nShort circuit incoming requests to just use the regular\nmutation method and never call into the Observe loops.\n\nResult\n------\nBetter performance, especially in the case where someone uses\nthe overridden methods and then through some external flag/variable\nsets it to NONE.\n\nChange-Id: If8a8b89e9946052c61278e8ef239e75ec8cf3d0b\nReviewed-on: http://review.couchbase.org/46580\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java"],"date":1423468407000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5dc10b04e4820cb42916d3fa61f3c610cda630f4","msg":"Depend on core-io 1.1.1-SNAPSHOT\n\nChange-Id: I76836056b83930bee15e8f3eb58ae480871942aa\nReviewed-on: http://review.couchbase.org/46582\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle"],"date":1423473245000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"22afd9ee39aa72028dd56da0a42b6e5956a2fd06","msg":"JCBC-704: Funnel all durability errors into a DurabilityException.\n\nMotivation\n----------\nCurrently the documentation states correctly that all durability errors which\nviolate the requirement are caught and raised in the DurabilityException.\nThis is currently only the case on one mutation method, all the others\nneed to follow suit.\n\nModifications\n-------------\nProperly catch and collect the errors on mutation and remove observe methods.\n\nAlso the BinaryTest has been renamed to KeyValueTest for clarity.\n\nResult\n------\nProper exception thrown as advertised in the docs.\n\nChange-Id: I6afa1d5d9de6cf9e0295ad550624349f50d4d4ae\nReviewed-on: http://review.couchbase.org/46593\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1423490240000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c45a2bdb6fa0a49d711dae815188f629f010a139","msg":"JCBC-706: Make certain Document an JsonValue subclasses serializable.\n\nMotivation\n----------\nWhile building spark integration, it was found that some objects need\nto be serializable in order to be transferred over the network by\nspark. We found that it also makes sense to make them serializable\ndirectly in the java-client where the actual types support it.\n\nModifications\n-------------\nSerilization has been added to:\n\n\t- JsonObject\n\t- JsonArray\n\t- All Document* subtypes other than LegacyDocument and\n\t  BinaryDocument because their content types are not\n\t  serializable.\n\nTests have been added to prove its working.\n\nResult\n------\nTransparent serialization for document types and json values.\n\nChange-Id: I5a9a032376ec63b115500fa2916ac95cb6ac2ea7\nReviewed-on: http://review.couchbase.org/46679\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonBooleanDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/RawJsonDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/test/java/com/couchbase/client/java/SerializationHelper.java","src/test/java/com/couchbase/client/java/document/JsonDocumentTest.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1423650726000,"numberOfModifiedFiles":16},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e08698328f19428b35dcd2b22337aa59db6a7007","msg":"JCBC-707: Avoid String conversions in the JsonTranscoder.\n\nMotivation\n----------\nWhen converting to and from JsonObjects in the JsonTranscoder, we\ncan avoid going through Strings since Jackson supports writing\nand reading into byte arrays directly.\n\nThis reduces garbage collection (especially in larger docs), since\nno Strings are allocated temporarily in the TLAB.\n\nModifications\n-------------\nAdd methods which convert to and from JsonObjects to ByteBufs directly\nand use them in the transcoder.\n\nResult\n------\nLess GC produced and quicker conversions.\n\nChange-Id: Id22ee27957787705be84aba8aeeb70ae5fe27c74\nReviewed-on: http://review.couchbase.org/46682\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java"],"date":1423658412000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30f6c9cfc6c389e7945812dfd883718dbde71b3f","msg":"Pass RetryStrategy to Observe for fail fast support.\n\nChange-Id: I952b7f47aa3489c0ea2be27f675757d3e82f3b34\nReviewed-on: http://review.couchbase.org/46624\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1423555146000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a829e392118c4bf9a5b72648afe85a6fdacac781","msg":"JCBC-708: Exception for most probable lock failures\n\nMotivation\n----------\nFor lock related operations, the server doesn\u0027t have an explicit error\ncode for lock-specific errors (like the key is already locked or the cas\nprovided to unlock is wrong). It returns TEMPFAIL. Another transient\nerror code is BUSY, where we are sure this is not related to locks.\n\nDistinguish between these two by introducing a new Exception. Don\u0027t hide\nthe ambiguity by returning a CASMismatchException (when the actual error\ncould be another transient one).\n\nModifications\n-------------\nAdded new TemporaryLockFailureException, thrown when receiving TEMPFAIL.\n\nBREAKING: unlock now throws TemporaryLockFailureException when the cas\ndoesn\u0027t match, because the server doesn\u0027t let us know for sure, so a\nCASMismatchException could hide another problem.\n\nAmended tests and added a test for double locking failure.\n\nResults\n-------\nClient can be sure a transient error is not related to locks when\nreceiving a TemporaryFailureException.\nOn the other hand, lock problems are the most probable cause for the new\nexception, TemporaryLockFailureException.\nUnit tests and integration test pass.\n\nChange-Id: I53c6fc1db480ec212b399b01e8bff72bb73e7bf1\nReviewed-on: http://review.couchbase.org/46692\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/error/TemporaryLockFailureException.java"],"date":1423668874000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cbf0ffa7d814f5a4b735fdf22819ebfb04ea9cc9","msg":"JCBC-707: Make sure to account for array offsets.\n\nMotivation\n----------\nWhen the array is backing more than one ByteBuf the code needs to\nmake sure to only grab the slice which is actually belonging to\nthe specific ByteBuf.\n\nModifications\n-------------\nCalculate the offset + index range for the byte[] slice before\nsending it over to jackson.\n\nResult\n------\nMore resilient extraction logic.\n\nChange-Id: I46a80fce5584e179e34aea9a622b5139efecfdda\nReviewed-on: http://review.couchbase.org/46690\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java"],"date":1423664485000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e980ab60595117c57c839f74d396b80584c4fb69","msg":"JCBC-709: Make view and spatial view query serializable.\n\nMotivation\n----------\nMaking the query objects serializable allows us to transmit them\nover the network in connectors like spark.\n\nModifications\n-------------\nSerializable interface is extended and also proper equals methods\nhave been put into place to facilitate equals comparisons.\n\nResult\n------\nAllow the possibility to serialize query objects.\n\nChange-Id: Id68df2eddefc7eb2f05d7bf8a4ff570b9fc18281\nReviewed-on: http://review.couchbase.org/46740\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/SpatialViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/test/java/com/couchbase/client/java/view/SpatialViewQueryTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1423755196000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b598a58b368d98ad64c2ee528f70db290d6e5080","msg":"JCBC-711: Prepare statements to be Serializable\n\nMotivation\n----------\nIn order to use N1QL capabilities in Spark, Query implementations must\nbe Serializable. This in turns necessitate the underlying statements to\nbe Serializable...\n\nModifications\n-------------\nIntroduced an intermediary interface to explicitly distinguish between\nthe (non-serializable) DSL and other statements. Used this interface in\nAbstractQuery to ensure all its fields are Serializable.\n\nEach statement used in various Query implementations is now of the\nSerializableStatement kind. When passing in a DSL, it is converted to a\nSerializable alternative using RawStatement.\n\nResult\n------\nStatements stored in Query implementations are now Serializable, paving\nthe way to fully Serializable queries.\n\nChange-Id: I1ca76f8b8056bf2e7ef644358ea88691f3814eb9\nReviewed-on: http://review.couchbase.org/46934\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/AbstractQuery.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/QueryPlan.java","src/main/java/com/couchbase/client/java/query/SerializableStatement.java","src/test/java/com/couchbase/client/java/query/StatementSerializationTest.java"],"date":1424164121000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3d4b629d18b077df60ef9c9b5d3f831d0b728aad","msg":"JCBC-711: Make Query and QueryParams serializable.\n\nMotivation\n----------\nTo allow N1QL queries to be run through spark and other components,\nthe queries need to be serializable. Also the params which are\nattached to the queries need to be serializable.\n\nModifications\n-------------\nQuery and QueryParams have been made serializable, tests added to\nmake sure it works properly.\n\nResult\n------\nN1QL queries can be used through spark and other components that\nrequire this functionality.\n\nChange-Id: Ib73800d8eeff7ef4a9a2c0039cd0dca7d2199c00\nReviewed-on: http://review.couchbase.org/46935\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/QueryParams.java","src/test/java/com/couchbase/client/java/query/QueryParamsTest.java","src/test/java/com/couchbase/client/java/query/QueryTest.java"],"date":1424174599000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5b5e0efb1d533ee2489e50e1cf4281436f900b8d","msg":"JCBC-713: Fix leak in flush()\n\nMotivation\n----------\nThe upsert response content was not properly released, this is now\nfixed.\n\nChange-Id: Ia4f3f194973c76e5156a2779309fec50c7f707d6\nReviewed-on: http://review.couchbase.org/46951\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java"],"date":1424194340000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b3b15e279f57706da1c84dcffe22c6b93757fb5c","msg":"JCBC-717: expose N1QL signature\n\nMotivation\n----------\nN1QL signature is relevant to some users reviewing N1QL. It is exposed\nin the core since JVMCBC-153 and should be exposed as well in client.\n\nModifications\n-------------\nAdded signature as an Observable\u003cJsonObject\u003e in AsyncQueryResult and as\na JsonObject in QueryResult.\nAdded an integration test for the signature.\n\nThis change depends on JVMCBC-153 in core.\n\nResults\n-------\nUsers can retrieve the signature section of the N1QL response as a\nJsonObject.\n\nChange-Id: I75d798b71a27b188b4bd5fbc273b01acb6eb8e37\nReviewed-on: http://review.couchbase.org/47230\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java"],"date":1424717438000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cf0ec88206b969389ed05dea24e32cb4282ab599","msg":"JCBC-712: Cache info() call on the view response.\n\nMotivation\n----------\nSince the underlying core change now does not allow more than one\nsubscription, the info() call needs to be cached since it can\nbe accessed twice if the response is !\u003d 200.\n\nModifications\n-------------\nCache the info() observable buffer and pass it on, leading to only\none upstream subscription.\n\nResult\n------\nNo double subscription exceptions.\n\nChange-Id: Id9af446886532494529b65926bcf1c3838c75bad\nReviewed-on: http://review.couchbase.org/46950\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/test/java/com/couchbase/client/java/view/ViewRetryHandlerTest.java"],"date":1424194121000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f0ef8a81a0639f625fd6ca2a7a0fe2a12221de79","msg":"JCBC-719: Rework bucket flush internals.\n\nMotivation\n----------\nThe current flush approach did work, but it was not good for a number of\nreasons.\n\n\t- It used a blocking poll in an asynchronous call - this should\n\t  not be done of course.\n\t- It only did poll for one specific document, but instead we\n\t  need to poll for documents in all partitions to make sure\n\t  flush is completely done.\n\nModifications\n-------------\nThe flushing mechanism is now separated into its own helper class and tests\nhave been added to make sure its working properly.\n\nResult\n------\nMore correct and functional flush polling against all vbuckets instead of\none.\n\nChange-Id: If00c9aac95a3ab554b9b993c189731fb5ca3b034\nReviewed-on: http://review.couchbase.org/47399\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/test/java/com/couchbase/client/java/bucket/BucketFlusherTest.java"],"date":1424961013000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f2d10da61995613d474e2d14261f6cf517e9f1b5","msg":"Prepare 2.1.1 release\n\nChange-Id: I87d37fa3cf26df675d1086754cfd814bff86aca5\nReviewed-on: http://review.couchbase.org/47543\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","build.gradle","gradle.properties"],"date":1425293261000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ec58d7e3baca64cc308ab123b4b1987236f8465a","msg":"Start development on 2.1.2\n\nChange-Id: Iaf5e69e0b7fe36db101e78da618d13b726227a58\nReviewed-on: http://review.couchbase.org/47939\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1425909051000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"335bb7aa27db0a8e20547dd6336810925bf478e8","msg":"JCBC-723: touch unknown key throws DocumentDoesNotExistException\n\nMotivation\n----------\nUnlike most similar operations, currently touch won\u0027t throw a specific\nDocumentDoesNotExistException when the provided key is unknown, but a\nmore generic CouchbaseException with content \"NOT_EXIST\". It can be\nexpected that the correct and more specific exception be used.\n\nModifications\n-------------\nThe async touch now throws the DocumentDoesNotExistException when the\nprovided key is unknown. This is thus true as well of the sync touch.\nTests and documentation has been updated accordingly.\n\nResults\n-------\nUsers receive a more meaningful exception when they try to touch a doc\nthat doesn\u0027t exist.\n\nChange-Id: Iea0987230a305ebc2e881364ceeb5ee26425c742\nReviewed-on: http://review.couchbase.org/47946\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1425920673000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4b33a454199224c74799f100df759ea6c982c78d","msg":"JCBC-724: Dump specific environment parameters\n\nMotivation\n----------\nEnvironment\u0027s toString is used to dump parameter values, but for now\nthe DefaultCoreEnvironment\u0027s implementation is used, which doesn\u0027t dump\njava-client specific parameters.\n\nModifications\n-------------\nThe core implementation has been changed to expose a protected method\nthat dumps all parameters into a StringBuilder. This is overridden in\njava client to also dump DefaultCouchbaseEnvironment-specific params.\n\nResults\n-------\nDefaultCouchbaseEnvironment toString now contains parameters specific to\nboth the core and the java-client.\n\nChange-Id: I41b80d3dc13399e270e2129360d37780a95759c3\nReviewed-on: http://review.couchbase.org/48006\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java"],"date":1425988511000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"377f2529de10016fdda3305185a43da41d770183","msg":"JCBC-725: expose n1ql metrics as a specific object\n\nMotivation\n----------\nThe info() part of the query response describes the metrics in N1QL.\nThose are quite well defined and could be represented by a specific\nclass instead of the raw generic JsonObject.\n\nModifications\n-------------\nIntroduced QueryMetrics, constructed from a metrics JsonObject.\nAll query results (sync and async) now return this instead of a more\ngeneric JsonObject.\n\nAdditionally, improved the documentation of AsyncQueryResult and\nQueryResult and marked some classes/interfaces as Experimental.\n\nAdded a unit test case for QueryMetrics.\n\nResults\n-------\nExtracting meaningful information from the info() part is now easier.\nOne can still access the underlying raw data by calling asJsonObject().\n\nChange-Id: If9fba0256363e62b286c696d35176305a25581ab\nReviewed-on: http://review.couchbase.org/48010\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryMetrics.java","src/main/java/com/couchbase/client/java/query/QueryResult.java","src/test/java/com/couchbase/client/java/query/QueryMetricsTest.java"],"date":1426003560000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"52fb7d851e5ef055519f158af494969862455587","msg":"JCBC-729: Faster decoding of int/long numbers.\n\nMotivation\n----------\nPreviously the code was using a rather slow fallback through\nan exception from int to long, so decoding long values is not\nperformant enough.\n\nModifications\n-------------\nThe code now uses Jackson parser methods to get the Number back\nright away (since jackson figures out the type for us), which not\nonly makes the code simpler but also removes costly path through\nthe exception.\n\nIn addition, some faster direct accessor methods are now used instead\nof the one that force conversion.\n\nResult\n------\nFaster decoding of long values.\n\nChange-Id: If1fff2808019ed2ae11358e31be48209f980441d\nReviewed-on: http://review.couchbase.org/48165\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/JacksonTransformers.java"],"date":1426168025000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"868cbce08c576255c5f0cc6d783a4890a831e067","msg":"Override core environment builder settings.\n\nChange-Id: Ieca6972038a9094bd370a24571ccc97ef1c378da\nReviewed-on: http://review.couchbase.org/48172\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1426173346000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"63629c68d42ed267d989e816f90c11f89d42375b","msg":"JCBC-728, JCBC-731: Fix JsonLongDocument decode and counter default value.\n\nMotivation\n----------\nThe JsonLongDocument decoding process did not take the 0x0 flags into account,\nwhich are used when using the counter operations (since on the server it is\nstored as a string, not as a number).\n\nAlso, it was uncovered that the counter() default, different to what is documented\ndefaults to the incr value instead of 0.\n\nModifications\n-------------\nThis changeset implements the proper decoding process of the JsonLongDocument if\nthe flags are 0x0 and also sets the counter default value to 0.\n\nIntegration tests are now more extensive and test the interaction of the various\ncounter options together with get and also an upsert operation.\n\nResult\n------\nInteroperability between counter, get and upsert/insert/replace, as well as\nthe correct default value as advertised in the docs.\n\nChange-Id: I69765016f97d0a1247b6d0b2b2386ac78c7f38bd\nReviewed-on: http://review.couchbase.org/48311\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/transcoder/JsonLongTranscoder.java"],"date":1426492196000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+00:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7acf180b9a1463ee7deb6114484d53b520dcade7","msg":"JCBC-735: N1QL signature is an Object\n\nMotivation\n----------\nThe N1QL response signature field was expected to be just a JSON sub\nobject but turns out to be any JSON entity.\nThus the QueryResponse signature method should return Object and not\nJsonObject.\n\nModifications\n-------------\nQueryResult and AsyncQueryResult signature methods now deal with Object\ninstead of JsonObject.\n\nThe parsing of response\u0027s JSON to Object is done so that, when relevant,\na JsonObject or JsonArray is returned (not Map and List as in default\njackson unmarshalling).\n\nFor that, a new static method has been added to the JsonTranscoder. It\nalso ignores and skips leading whitespaces.\n\nTest for the various signatures possibilities has been added.\n\nResult\n------\nThe fact that the N1QL\u0027s signature can be any JSON valid value is now\ntaken into account.\n\nChange-Id: Ie5ca6165bcd6f3a10ab435553db06d80ae8f4d28\nReviewed-on: http://review.couchbase.org/48694\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultQueryResult.java","src/main/java/com/couchbase/client/java/query/QueryResult.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1427222900000,"numberOfModifiedFiles":8},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"86f4fed4d7d9cb38205c54bf1cf016801ea10b1d","msg":"JCBC-554: Provide retry/backoff utility wrapper\n\nMotivation\n----------\nExponential retry and backoff is an useful pattern and it makes sense\nto provide an utility class to the SDK users to do that.\n\nModifications\n-------------\nAdded a Retry utility class that allows to describe a retry pattern by\nwrapping the source.\nAn alternative is to directly use Observable.retryWhen with the new\nRetryWhenFunction.\n\nBoth approaches take a RetryWithDelayHandler, a class that allows to\ndescribe the retry pattern (max attempts, retry delay and how it grows,\nexceptions that can be retried or on the contrary cancel retry cycle).\n\nAdded CannotRetryException to denote when a retry attempt failed. It\nshould always have the Exception that triggered the latest retry as its\ncause.\n\nClasses in the util.retry package are marked as Public but Experimental.\n\nAdded various unit tests to check the retry behavior.\n\nResult\n------\nUsers can more easily apply a retry pattern to their Observables, either\nby calling a wrapping function or passing a RetryWhenFunction to their\nObservable\u0027s retryWhen operation.\n\nChange-Id: I6d51d834d9f4e1ea101da98d2b1c8ea9369f6c0a\nReviewed-on: http://review.couchbase.org/48373\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/error/CannotRetryException.java","src/main/java/com/couchbase/client/java/util/retry/Retry.java","src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java","src/main/java/com/couchbase/client/java/util/retry/RetryWhenFunction.java","src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java","src/test/java/com/couchbase/client/java/util/retry/ErrorsAttemptsTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryBuilderTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWhenFunctionTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWithDelayHandlerTest.java"],"date":1426590072000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"648d37738ff159ceeaf9d3176dffef3a75a2c972","msg":"JCBC-740: Expose View errors as Observable\n\nMotivation\n----------\nA related core issue has been addressed (JVMCBC-176) and as\na result the view and spatial view results need to expose the\nerror in an observable instead of the plain JsonObject.\n\nThe reasoning behind that is the errors can also come after\nrows have already been emitted. The core also moved the erorrs\nfrom the info observable into a separate errors observable, which\nmakes it easier to grab errors but also needs slight changes\nto the language binding in order to properly identify them.\n\nModifications\n-------------\nThe signatures have been adapted from error JsonObject to\nObservable\u003cJsonObject\u003e. Also, the response mapper has been\nmodified to align with those changes and most importantly\nthe retry handler has been adapted to do the maybeRetry\nbased on the error and not on the info portion.\n\nResult\n------\nCorrect behaviour when a view error is reported after the\nrows have been emitted.\n\nChange-Id: Ie984be68b00f5abd75fec3bf68a380bb963b741f\nReviewed-on: http://review.couchbase.org/48985\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/AsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/AsyncViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/SpatialViewResult.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/test/java/com/couchbase/client/java/view/ViewRetryHandlerTest.java"],"date":1427824256000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f0abd0f169b5fb0da91d60f7f0e5c29f287cc5f9","msg":"Prepare 2.1.2 Release\n\nChange-Id: Id3fe2e0375581d1c0c62eeda46cc2322e809fee0\nReviewed-on: http://review.couchbase.org/49163\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1428062500000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ba3627449d415f678df6a4c723822b84578d843f","msg":"Start development on 2.2.0\n\nChange-Id: Ic6c77bdad967b6c478e84cc5be917d1431f53d15\nReviewed-on: http://review.couchbase.org/49299\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1428390730000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ea463192742d40c48087b130036e831e61220a94","msg":"Reuse default bucket and hostname.\n\nMotivation\n----------\nBoth the CouchbaseBucket and CouchbaseAsyncBucket previously\ndefined the default bucket and hostname.\n\nModifications\n-------------\nThe code changes now expose it public on the async cluster (so it\nis also reusable by other parties) and reuse it on the sync cluster\ncomponent.\n\nResult\n------\nLess duplication, more reuse.\n\nChange-Id: I08b1a7aefa472ef28e5d7c4d42e31e4472cbd329\nReviewed-on: http://review.couchbase.org/49307\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1428411993000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"554717304c6098cb7c2f6aeaaaed68d893833795","msg":"Upgrade Readme to 2.1.2\n\nChange-Id: I52717c3c207cc47365d05adfd56722a9b6f03d1e\nReviewed-on: http://review.couchbase.org/49427\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1428561988000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bca9d7b8604e42606dfa4fadbe137fab27737557","msg":"Fix failing assertion test in query\n\nChange-Id: Ifa89bc82334a57d94aafa6b9aff2bfd89ba8502a\nReviewed-on: http://review.couchbase.org/49430\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java"],"date":1428571311000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"47b6dd130b966f9b9261a3227e9743e91762e0ba","msg":"JCBC-730: Implement exists() functionality.\n\nMotivation\n----------\nThe exists() method, internally based on the observe command, can\nbe used to see if a document exists on the server without having\nto load the full document.\n\nModifications\n-------------\nThis changeset implements the exists() method based on the observe\ncommand, by sending a request to the active partition and checking\nif it is either persisted or just stored in memory.\n\nResult\n------\nexists functionality is now available on the bucket api.\n\nChange-Id: Ib31fc8583f5fb8831297e569f3eb29c580e4481f\nReviewed-on: http://review.couchbase.org/49440\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1428578787000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e5353c4a0ecd5b13fbd29d9606959960f823ad4f","msg":"JCBC-744: Implement Repository and very basic upsert/get.\n\nMotivation\n----------\nDue to popular demand a repository with entity mapping (POJO)\ncapabilities will be provided in the 2.2.0 timeframe.\n\nModifications\n-------------\nThis changeset brings the very basic code infrastructure in\nplace (a repsitory, accessible from the bucket) and allows\nto upsert and get a very simple POJO (no nested objects,\nno args constructor required).\n\nResult\n------\nStarting off the repository implementation with simple\nupsert/get capabilities.\n\nChange-Id: I6b82cd9e6cd14838553b229c3311fd30767c4504\nReviewed-on: http://review.couchbase.org/49377\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/repository/User.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/repository/AsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseAsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseRepository.java","src/main/java/com/couchbase/client/java/repository/Repository.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/RepositoryMappingException.java","src/main/java/com/couchbase/client/java/repository/mapping/annotation/Field.java","src/main/java/com/couchbase/client/java/repository/mapping/annotation/Id.java"],"date":1428504439000,"numberOfModifiedFiles":18},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e611ab573aae253bb6eeb1b61812bbb0e6da087b","msg":"JCBC-732: Extend Expression class.\n\nMotivation\n----------\nAs part of the DSL overhaul for 4.0, the Expression class needs to\nbe extended.\n\nModifications\n-------------\nThe Expression class has been overhauled, tests added and lots of overloads\nhave been put in place so that most of the time, x() can be avoided.\n\nResult\n------\nMore tests and less clutter when working with expressions.\n\nChange-Id: I65749a0e59ba8be8ec2acc121a9e45876b9892bb\nReviewed-on: http://review.couchbase.org/49449\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java"],"date":1428589706000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"34f11dfa1b38d81c1ccbc42d279b3f22db233dcb","msg":"JCBC-748: join/nest key clause uses ON KEYS syntax\n\nMotivation\n----------\nIn N1QL, the correct syntax for a on-keys clause in a NEST or JOIN is\n\"ON KEYS Expression\" not \"KEYS Expression\" as currently implemented.\n\nAlso there\u0027s a clause that uses KEYS keyword, but differently:\nwhen referencing primary keys (document IDs), the \"USE KEYS\" syntax\nshould be used. This syntax expects strings or array of strings (not a\ntoken).\nCould be implemented as a useKeys(...) method next to the current keys\nmethods.\n\nModifications\n-------------\nKeysElement now takes an enum to denote the type of KEYS clause.\n\nKeysPath \"keys\" methods for the JOIN side of things have been renamed to\n\"onKeys\", added \"useKeys\" for the FROM side of things (referencing a\nprimary key).\n\nonKeys and useKeys accept an array of Strings.\nUseKeys with array of size 1 will only produce a String in query, not a\nJSON array.\n\nRefactored unit tests where ON KEYS was expected.\nModified unit tests where USE KEYS what meant instead of ON KEYS.\n\nResults\n-------\nAll unit tests passing, one can now do a FROM clause on the primary key,\nusing useKeys(...) methods. The syntax for JOINs key-clause has been\nfixed in onKeys(...) methods.\n\nChange-Id: I6da78c7518b15c3893939afe3fb4877dd3dcd375\nReviewed-on: http://review.couchbase.org/49606\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/element/KeysElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/KeysPath.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1428942225000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a472359fe09cd15558c9a4aee8dbac63197f23e8","msg":"JCBC-744: Add support for @Field alias\n\nMotivation\n----------\nIt should be possible to have a different name in the JSON field\nthan the field name in the object.\n\nModifications\n-------------\nThe user can now supply an explicit @Field(\"alias\") which will be\nused as the JSON field key instead of the actual object field name.\n\nResult\n------\nMore flexible field mapping.\n\nChange-Id: If783ea54a8fa3334f86c15864c5524a7f9d7934e\nReviewed-on: http://review.couchbase.org/49859\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/repository/User.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/annotation/Field.java"],"date":1429278467000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fa5967a2274c6247f27ed3b45ca2b4432ac9183d","msg":"JCBC-749: Bringing includeDocs back to 2.x (2.2.0)\n\nMotivation\n----------\nThe 1.x SDK provides \"includeDocs\" as part of the query, which will trigger a\n\"bulkGet\" behind the scenes. In the 2.x SDK one can easily simulate that with\nflatMap and bulk operations, but it makes it necessary to fall back to\nasync operations.\n\nIf someone is using the sync API, we need to make sure to get the best\nperformance. Currently, the only option is to call .document() on every\nrow, which is slow since it does a serial get call for every row.\n\nModifications\n-------------\nThis changeset adds the \"includeDocs\" query option to the builder. In addition,\nthe logic checks if it is enabled and if so, it flatMaps the documents through\nimplict get() calls in the async flow, leading to very efficient bulk calls\neven on the blocking API.\n\nThe actual API does not change on the rows, because internally it lazily\nevaluates if the document is already set or not, which means that the\nold behaviour is still there too.\n\nResult\n------\nVery efficient document loading, even on the blocking API. It can also\nbe used on the async API for convenience.\n\nChange-Id: I5a12faa4a934906f6b1ba2ce464c9f487bf2cf3f\nReviewed-on: http://review.couchbase.org/49805\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/SpatialViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/test/java/com/couchbase/client/java/view/SpatialViewQueryTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1429200109000,"numberOfModifiedFiles":13},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"007883b7db9565a9c41a265eff5cc66221c7b1d6","msg":"JCBC-744: Bring out annotations one level.\n\nMotivation\n----------\nIt makes more sense to move the annotations to the repository\nlevel and not under the mapping package.\n\nModifications\n-------------\nMoved the annotations package one level up by using the IDE\nrefactoring facilities.\n\nChange-Id: Ibab5bb669f84b4cbc7b0df8bc12cbcccd764f61d\nReviewed-on: http://review.couchbase.org/49888\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/repository/User.java","src/main/java/com/couchbase/client/java/repository/annotation/Field.java","src/main/java/com/couchbase/client/java/repository/annotation/Id.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityProperties.java"],"date":1429517210000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbe3f51d3b06e376e5489dc5574a76741d4e6efb","msg":"JCBC-744: Wrap Entity and Property Metadata\n\nMotivation\n----------\nThe entity and property metadata need to be fully encapsulated to\nmake them testable and also future proof.\n\nModifications\n-------------\nThe common metadata has been extracted into property and entity\nmetadata with clearer interfaces.\n\nResult\n------\nBetter separation of concerns.\n\nChange-Id: I2303a5d5e103176521c78e08227f61126b81e0af\nReviewed-on: http://review.couchbase.org/49889\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/PropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityProperties.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java"],"date":1429519450000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6b523b26d8643fc05854facd8bfdcb3ec97302c6","msg":"JCBC-744: Add metadata caching.\n\nMotivation\n----------\nIn order to avoid the overhead of re-generating the metadata all\nthe time, a simple CHM has been added to cache the metadata once\ngenerated.\n\nModifications\n-------------\nA ConcurrentHashMap stores the already generated metadata. Note that\nthere is currently no way of \"expiring\" items, but the number of\nentities during runtime remain static and relatively small, most\nof the time (since the expectation is that they are not generated\nnew at runtime).\n\nResult\n------\nBetter performance by avoiding metadata generation overhead all\nthe time.\n\nChange-Id: I0a96f8e318118036f6ddbf49dfb7d886e5c8d976\nReviewed-on: http://review.couchbase.org/49890\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java"],"date":1429520323000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9d21afb150404a50331566371736cc8c7bca7cc","msg":"JCBC-744: Enforce String @Id type.\n\nMotivation\n----------\nSince the document ID needs to be a string, the code should check\nthat early as part of the entity mapping.\n\nModifications\n-------------\nA type check has been added on the type and now reports an exception\nwhen the String assertion does not hold.\n\nResult\n------\nWell defined boundary on what is supported for the @Id types.\n\nChange-Id: I6e4c120379253f60160cf6819ae25c34c024741e\nReviewed-on: http://review.couchbase.org/49891\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java"],"date":1429521393000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a052a42d73f3e1290f0f2e55f6585c3ece7c7726","msg":"fixes tests after integrating JVMCBC-183\n\nthe BinaryResponses need a status code, eg. from the list in\nResponseStatusConverter.\n\nChange-Id: I0d943f4919427d64e1283391d353777d6aa84847\nReviewed-on: http://review.couchbase.org/49989\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/bucket/BucketFlusherTest.java"],"date":1429631083000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9ceff1d24fa4313e8a3df8ebf87fd8eb540211cc","msg":"JCBC-750: let DSL cover n1ql tutorial steps upt to 25\n\nMotivation\n----------\nin SelectDslSmokeTests, only part of the tutorial steps are covered and\nsome have evolved. Make sure that steps up to #25 are now covered and up\nto date, making simple additions to the DSL if needed.\n\nhttp://query.pub.couchbase.com/tutorial/#25\n\nModifications\n-------------\nSelectDslSmokeTests now tests tutorial steps up to step #25.\nSome steps have been updated to reflect changes in DP4.\n\nFunctions have been extracted into separate helper classes, by category.\nSort now has an option not to explicitly state the order.\n\nChoice has been made not to provide the DSL for the shortcut AS syntax\n(omitting the AS like in \"FROM tutorial t\" vs \"FROM tutorial AS t\").\n\nResults\n-------\nSmoke tests pass, including new tests for steps 15-25.\n\nChange-Id: I72459f08dfc622bba75475db4b0cef4456405a1f\nReviewed-on: http://review.couchbase.org/49901\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Functions.java","src/main/java/com/couchbase/client/java/query/dsl/Sort.java","src/main/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/MetaFunctions.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1429542419000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0a34ea65c6ba9cd646b4030f829594f57021acb2","msg":"JCBC-752: add DSL support for collections (ANY, ARRAY, ...)\n\nMotivation\n----------\nN1QL language has support for several collections predicates (or\ncomprehensions): ANY, EVERY, ARRAY and FIRST.\n\nModifications\n-------------\nAdded new class Collections that allows to build (with its own mini DSL)\nthe four comprehensions: ANY, EVERY, ARRAY and FIRST.\n\nAdded unit tests to verify this mini DSL.\nUpdated SelectDslSmokeTests where the new DSL could be used instead of a\nplain x(...) expression.\n\nResults\n-------\nUsers are now able to use Collections in their expressions (eg. in a\nSELECT clause or WHERE clause), as demonstrated in the smoke tests.\n\nChange-Id: Ia2554799ca7755a4feed2ef73bd1e51b5668f131\nReviewed-on: http://review.couchbase.org/49990\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/functions/Collections.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CollectionsTest.java"],"date":1429561835000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0896e44936c3bb26376b5bf1cafe7efd3282a996","msg":"JCBC-755: implement rest of N1QL tutorial and adapt DSL\n\nMotivation\n----------\nContinuing work from JCBC-750, implementing rest of the steps from the\nN1QL tutorial into SelectDslSmokeTest, and adding missing operators or\nfunctions in the DSL along the way. Note that 3 steps make use of DML\nwhich will be covered later.\n\nModifications\n-------------\nAdded remaining steps from tutorial to smoke tests.\n\nGroupByPath can now directly use identifiers in String form.\n\nModified KeyPath so that distinction between a String constant key vs an\nidentifier key is more explicit (constant keys: xxxKeysValues methods).\n\nAdded sum and distinct functions in AggregateFunctions.\n\nAdded DateFunctions (with strToMillis, datePartStr), NumberFunctions\n(moved round there from Functions), StringFunctions (with lower and\nsubstr).\n\nIn Expression, added x method to convert a statement, sub method to\nconvert a statement as a sub-statement between parenthesis, path method\nto construct a path from Expressions separated with dots.\nAdded arithmetic operators add, subtract, multiply and divide.\n\nAdded a Case mini-DSL for case and case search expressions\n(eg. CASE a.id WHEN b.subid THEN 1 ELSE 0 END).\n\nRemoved Functions class (all have been moved in xxxFunctions classes in\nthe functions package).\n\nMarked various DSL classes as @Experimental yet @Public.\n\nResults\n-------\nExcept for tutorial steps where DML is used, all steps are covered by\nthe SelectDslSmokeTest.\n\nChange-Id: I5a71614c6d8beb6a8de0b94c086d3c68c66bf91b\nReviewed-on: http://review.couchbase.org/50061\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/query/dsl/Functions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/Case.java","src/main/java/com/couchbase/client/java/query/dsl/functions/DateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/MetaFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/NumberFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/StringFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultGroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/GroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/KeysPath.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1429718495000,"numberOfModifiedFiles":16},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aa732ef8eccc8115f81985b2738462c863797e97","msg":"Fix compiler warnings and errors.\n\nChange-Id: I7bb695915bd35d2567000d04542173937888881a\nReviewed-on: http://review.couchbase.org/50190\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java"],"date":1429891744000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"834a7dfe164614476afb5769230d33031f4c9fdf","msg":"JCBC-761: DSL for index creation\n\nMotivation\n----------\nUp until now there was no DSL for index creation (primary nor secondary)\nso this improvement is needed.\n\nModifications\n-------------\nAdded full DSL for both primary and secondary index creation. Starting\npoint is in Index static methods.\n\nAdded Path and Element implementations for all possible clauses (Index,\nOn, Using, Where, With).\n\nAdded tests to validate the DSL.\n\nResults\n-------\nIndexes can now be created via the DSL rather than raw simple queries.\n\nChange-Id: I664a073f8a0b4dba9cdb3ad435172ce977599c75\nReviewed-on: http://review.couchbase.org/50274\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/query/Index.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OnElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UsingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WithIndexOptionElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/CreateIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultCreateIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexType.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WithPath.java","src/test/java/com/couchbase/client/java/query/IndexDslTest.java"],"date":1430133945000,"numberOfModifiedFiles":22},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a576d51127975a9e069098f1347d8f682a182bd9","msg":"JCBC-762: DSL for index dropping and building\n\nMotivation\n----------\nAfter having built DSL for index creation, we can add the two other\nindex management operations: building a deferred index and dropping an\nindex.\n\nModifications\n-------------\nAdded full DSL for index dropping and index deferred building. Starting\npoint is again in Index static methods.\n\nUsingPath has been renamed to UsingWithPath since in CREATE it combines\nthe two. A true UsingPath (without other operators) has instead been\nintroduced for DROP and BUILD.\n\nDrop is implemented using DropPath and UsingPath, build is implemented\nusing BuildIndexPath, IndexNamesPath (to specify the list of index\nnames to build) and UsingPath. Corresponding elements (that all escape\nnames) have been introduced.\n\nAdded relevant tests to IndexDslTest.\n\nResults\n-------\nIndexes can now be dropped via the DSL rather than raw simple queries.\nIndexes that are created with the \"defer\" option can now be built using\nthe DSL as well.\n\nChange-Id: Iad0076330536ad523a65164514e6862b53affa94\nReviewed-on: http://review.couchbase.org/50318\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Index.java","src/main/java/com/couchbase/client/java/query/dsl/element/BuildIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/DropIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/Element.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexNamesElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/BuildIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultBuildIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultDropPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultIndexNamesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DropPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexNamesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WithPath.java","src/test/java/com/couchbase/client/java/query/IndexDslTest.java"],"date":1430215500000,"numberOfModifiedFiles":20},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7e06dbf3709f6038725a4e696fa7c20fb18959d1","msg":"JCBC-744: Extend repository API to CRUD ops and refactor.\n\nMotivation\n----------\nPreviously only simple get and upsert were implemented, this\nchangeset adds full CRUD capabilities.\n\nAlso, to make it possible to use cas values and other metdata\nwithout interfering with business logic, the EntityDocument\nshould be introduced.\n\nModifications\n-------------\nBoth the sync and async repository API has been extended and\nproxies through to the underlying bucket API. Tests have been\nadded to assert basic CRUD type functionality through the object\nmapping API.\n\nEntityDocument has been introduced and both sync and async\nAPI have been adapted.\n\nResult\n------\nMore methods available on the repository, but still not fully\non par with the bucket level APIs.\n\nChange-Id: I33a3cf9cab5b5ffffff7f0200cf31bf02cd63dfb\nReviewed-on: http://review.couchbase.org/50323\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/repository/User.java","src/main/java/com/couchbase/client/java/document/EntityDocument.java","src/main/java/com/couchbase/client/java/repository/AsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseAsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseRepository.java","src/main/java/com/couchbase/client/java/repository/Repository.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityMetadata.java"],"date":1430203515000,"numberOfModifiedFiles":11},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e1d4cf94c7eb5ff1b83e52ecb20b1df4e297efd9","msg":"JCBC-764: fix index creation DSL\n\nMotivation\n----------\nThe N1QL documentation was incorrect, which led to the Index creation\nDSL being incorrect:\n - where clause should be before using clause, not after\n - with clause should not use backticks\n\nModifications\n-------------\nRemoved backticks from WithIndexOptionElement.\n\nModified path for CREATE INDEX so that WHERE comes before USING.\n\nResults\n-------\nThe full DSL for secondary index creation is now correct.\n\nChange-Id: I160e6c922b6d0f7cada92a403e9759e14f63437f\nReviewed-on: http://review.couchbase.org/50385\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/element/WithIndexOptionElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WherePath.java","src/test/java/com/couchbase/client/java/query/IndexDslTest.java"],"date":1430319650000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9708250d536cad9b2b294c2992a6e69992c8875","msg":"Prepare 2.2.0-dp Release\n\nChange-Id: I615df1ff17a270937abce19a7a866172e90bd28b\nReviewed-on: http://review.couchbase.org/50411\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1430373366000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"40b339ec7312b32b84ce298eedbfa808dba09f99","msg":"JCBC-756: DSL for all N1QL functions\n\nMotivation\n----------\nN1QL comes with a large set of functions in different categories, that\nshould be implemented in corresponding helper classes in the form of\nExpression-returning functions.\n\nModifications\n-------------\nAdded helper classes with all functions (providing high-value overloads\nwhen relevant), in the following categories:\n - Aggregate\n - Array\n - Comparison\n - Conditional\n - Date\n - JSON\n - Meta\n - Number\n - Object\n - Pattern Matching\n - String\n - Type Checking and Type Conversion\n\nEach is covered by unit tests.\n\nResults\n-------\nUsers can now call N1QL from within the DSL.\n\nChange-Id: If1860c35fca78c070b44efb3e4964c30181554b9\nReviewed-on: http://review.couchbase.org/50327\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ComparisonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ConditionalFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/DateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/JsonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/NumberFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ObjectFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/PatternMatchingFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/StringFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/TypeFunctions.java","src/test/java/com/couchbase/client/java/query/dsl/IndexDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ComparisonFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ConditionalFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/DateFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/JsonFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/MetaFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/NumberFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ObjectFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/PatternMatchingFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/StringFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/TypeFunctionsTest.java"],"date":1430236794000,"numberOfModifiedFiles":25},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07e63ed9a72fe95cb28cae4e53abb5de78c28201","msg":"JCBC-766: ViewQuery passes keys separately to the core, as JSON\n\nMotivation\n----------\nRecently, a change was made so that the core switches to POST when it\ndetects that a View query is too large. Body of the post is the keys\nparameters (the only one allowed, and also the most probable culprit for\nsize), extracted for url and set as JSON.\nOnly problem is that the client url-encodes the keys, which isn\u0027t valid\nwhen contained in JSON, so it fails in production.\n\nA change has been made in the core to require keys separately, as a json\narray. This must in turn be taken into account in java-client.\n\nModifications\n-------------\nViewQuery.keys() now stores the JSON array separately. When constructing\na ViewQueryRequest, it is directly passed as a JSON string.\n\nUnit tests have been added to make sure keys are stored separately.\n\nAn integration test has been added to make sure that a long set of keys\ndoesn\u0027t fail.\n\nAdditionally, due to a bug in IntelliJ 14+ not picking up resources\nfolders for custom sourceSets, resource folder for \"integration\" is now\nexplicitly \"src/test/resources\". IntelliJ14 will use that due to the bug\nand Gradle will pick it up.\n\nChange-Id: Ife8a51372be781350f218fec8c93b35926fe0dff\nReviewed-on: http://review.couchbase.org/50705\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/integration/resources/log4j.properties","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java","src/test/resources/data/view/key_many.txt"],"date":1431014643000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5b7f28a6ca6bc67c5dd67a10ea87556b49d8845b","msg":"Back to 2.2.0-SNAPSHOT\n\nChange-Id: I5e92703e2e739660e5f2a0cf9554003f9590aae6\nReviewed-on: http://review.couchbase.org/50839\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","build.gradle","gradle.properties"],"date":1431348659000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ccdada2044f46843ac5c9f3f689a2d16d7b59380","msg":"JCBC-766: fix ViewQueryTest.shouldHandleKeys\n\nthe assertion was no longer valid, fixed test and re-ran all unit tests.\n\nChange-Id: I008cb154d232f805df0d110b541563536e5cd326\nReviewed-on: http://review.couchbase.org/50842\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1431354962000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bb9153fc1c55f8ae36edb29450144458ea7d95e9","msg":"JCBC-768: add unit tests for Case DSL\n\nMotivation\n----------\nThe Case DSL has recently been added to the SDK but without unit tests.\n\nModifications\n-------------\nAdded unit tests for Case helper class to test various CASE...END N1QL\nconstructs.\n\nResults\n-------\nBetter test coverage for N1QL DSL.\n\nChange-Id: I935d5d4f6c949b76fc8466af4706ee6762ebb3fb\nReviewed-on: http://review.couchbase.org/51096\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/functions/Case.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CaseTest.java"],"date":1431703266000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"18519f2c2da352bfc36af4d525329d111ab61fe5","msg":"JCBC-769: fix javadoc for RetryBuilder\n\nMotivation\n----------\nThe class javadoc for RetryBuilder is incorrect, starting point should\nbe static methods anyOf, allBut and any.\n\nModifications\n-------------\nFixed the class javadoc.\n\nAlso mentioned the behavior when errors keep\noccurring past the maxAttempts allowed number of retries (a specific\nCannotRetryException is raised), both in class javadoc and on max and\nonce methods javadoc.\n\nResult\n------\nJavadoc for RetryBuilder is more accurate.\n\nChange-Id: Ifda20d53ced7828c5b57bd133a32053ed3889cd6\nReviewed-on: http://review.couchbase.org/50964\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java"],"date":1431511418000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"07b01b9c62368b39869e4c349dbdc6b6e5607ea6","msg":"JCBC-774 join should accept Expressions in N1QL DSL\n\nMotivation\n----------\nUnlike most other cases (like from()), the operations on the LetPath\ndon\u0027t accept Expressions, only Strings. This is counterintuitive when\none wants to escape a namespace in a JOIN for example.\n\nModifications\n-------------\nAdded Expression overloads in the LetPath (joins, nests, unnests).\nAdded corresponding tests.\n\nResults\n-------\nUsers of the DSL can now do a JOIN on an Expression, allowing them to\nescape the namespace for example.\n\nChange-Id: I35012077e362861188dfe2478347356f2c6365d2\nReviewed-on: http://review.couchbase.org/51438\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LetPath.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1432636074000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"44dedaa1aa6b6779d722f36c70802a1bf14c4f23","msg":"Add toString() to QueryMetrics.\n\nChange-Id: I7a61e83214829f69894b41ecb47681d789dbfa63\nReviewed-on: http://review.couchbase.org/51211\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/QueryMetrics.java"],"date":1432033664000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ad82249bc502d211691f435686f558d10c01c216","msg":"JCBC-772: query(Statement) needs to check for a QueryPlan\n\nMotivation\n----------\nthe query(Statement) is intended as a shortcut, but also needs\nto take into account that a QueryPlan might be passed in.\n\nModifications\n-------------\nThe method now checks if the input statement is a query plan and\nif so wraps it into a Query.prepared() instead of a Query.simple().\n\ncode like bucket.query(QueryPlan) is now possible.\n\nResult\n------\nEasier way to query with a query plan.\n\nChange-Id: I9d86ed082d83746b53b3b248f2dfbc3755bd5404\nReviewed-on: http://review.couchbase.org/51210\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1432033402000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"64ee1f26b48044f6764de6510532cc5f740aa702","msg":"take JVMCBC-201 overloads of ioPool/scheduler into account\n\nChange-Id: Ie206237d86aca4c4a6b24ba0e29c2db069534a48\nReviewed-on: http://review.couchbase.org/51366\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1432312797000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"87ef6325f91e8f280d399c05a02cfb72e88275e2","msg":"JCBC-780: add sortCount to QueryMetrics\n\nMotivation\n----------\nThe Query team introduced a new metric that shows the number of results\nbefore it is trimmed down (eg. by a LIMIT clause). This should be also\nexposed as a QueryMetrics method.\n\nModifications\n-------------\nAdded sortCount() method to QueryMetrics.\nModified unit tests to account for it.\n\nResults\n-------\nUsers can now see this metric directly, not having to fall back to the\nJsonObject raw version of the metric representation.\n\nNote that if the metric is not returned by the engine, this method\nreturns 0.\n\nChange-Id: I3cb309f65dd60a2c0899972e76d753df6fdc30d6\nReviewed-on: http://review.couchbase.org/51950\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/QueryMetrics.java","src/test/java/com/couchbase/client/java/query/QueryMetricsTest.java"],"date":1434025276000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c137640b60dd26126aebc423f54e930bc4686f99","msg":"JCBC-781: Allow DCP to be enabled from the builder.\n\nMotivation\n----------\nDCP was always enable-able from the system property, and it should\nbe through the builder too. DCP is still experimental.\n\nModifications\n-------------\nRemove the hardcoded exception when enabled so it can be set\nthrough the builder.\n\nResult\n------\nUsers can now explicitly enable experimental DCP support through\nthe builder.\n\nChange-Id: Id186c5cbd10924b3e653b0718d8c1ac938c91f67\nReviewed-on: http://review.couchbase.org/52101\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1434439772000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"116fde65806ec4b84033a616fc8434cf2c8446b7","msg":"Override Builder methods.\n\nChange-Id: Id4872df12d930bca3f429d8e52acdfa16a5b8bb2\nReviewed-on: http://review.couchbase.org/52100\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1434438252000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"99eb6f4d8614a715542e37f0df1e20a75c20c6b3","msg":"Adapt tests for recent server and core-io fixes.\n\n1.2.0 core API has chanted slightly and also the GSI indexes are\nnow the default on the server. Test adaptions for proper\ncompilation and assertions.\n\nChange-Id: I8a5346ee10a47eefe4d4bcb12e9cc129772c322b\nReviewed-on: http://review.couchbase.org/52278\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/bucket/BucketFlusherTest.java"],"date":1434698889000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3961b6df7ca1676f3180a1bafd17900bc1e8c6e3","msg":"JCBC-784: Allow to explicitly check for not existing document on counter.\n\nMotivation\n----------\nCurrently, there is no way to fail if the counter document does not exist\nat all. In the \"old\" SDK, this option was available.\n\nSince conditionally incrementing or decrementing a counter only when it\nexists has its use cases, this functionality should be provided again.\n\nModifications\n-------------\nThe overload with no initial value now does not forward to \"0\" intial,\nbut utilizes the protocol level semantics to set the expiry to 0xffffffff\nwhich will return a NOT_EXISTS on the server if the document does not\nexist.\n\nThis status is now explicitly translated into an exception, leading into\nthe wanted DocumentDoesNotExistException. Tests have been adapted\nproperly.\n\nWhile this is not an API breaking change, it changes behaviour, but\nthe benefits outweigh the potential breakage (the workaround is to\njust manually set 0 as the initial value).\n\nResult\n------\nThe SDK now exposes a proper way to deal with non-existing\ndocuments for the counter operation.\n\nChange-Id: Ie473cb6c3d77d385f144416fd724024c12de2d90\nReviewed-on: http://review.couchbase.org/52276\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1434697448000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff33d7dbbe8cee706efa1a41a12cfade05a49f47","msg":"JCBC-789: Remove AtomicReferences from Blocking#blockForSingle\n\nMotivation\n----------\nWhile profiling SDK code, it was found that there is a portion\nof AtomicReferences allocated. It turns out that they can be\nreplaced with volatiles only, since they only use get/set\nsemantics.\n\nModifications\n-------------\nThe subscriber has been refactored out of the helper method since\nvolatiles are not allowed inside a method. The AtomicReferences\nhave been replaced with plain volatile calls.\n\nResult\n------\nLess allocations on the hot code paths, since all the features\nof an AtomicReference are not even needed.\n\nChange-Id: I6583a6cee10c9d9ec5f73c15b03273295a7ef5e3\nReviewed-on: http://review.couchbase.org/52422\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/Blocking.java"],"date":1435047991000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"24e74891eb888e32d5aa0e5261f5ed2ca095f2f4","msg":"JCBC-767: add use index hint to query DSL\n\nMotivation\n----------\nThe Query team introduced a new clause to hint at which index(es) to use\nin a query. This comes in the form of a USE INDEX clause after the FROM\nclause.\n\nModifications\n-------------\nAdded HintPath and HintIndexElement to represent this new clause.\nIntroduced a new IndexReference class that wraps an escaped index name\nand an optional USING GSI|VIEW suffix.\nAdded unit tests for the HintPath.\n\nResults\n-------\nUsers can now hint at which index(es) to use. New tests pass.\n\nChange-Id: I99dcd4d90730f605a48951f8088cffddc46e0e89\nReviewed-on: http://review.couchbase.org/52590\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/element/HintIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/AsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultAsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultHintPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/HintPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexReference.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1435319763000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b8293ae1e0c2e7b083942bfdb0e5c6601bc5ed2a","msg":"JCBC-790: Ignore partial replica read failures on ReplicaMode.ALL\n\nMotivation\n----------\nThe accompanying change in core-io now quickly fails if the replica\nis not available. This change silents those errors, leading to\nthe fact that if the replica is not available, only a subset\n(the responding) replicas is returned.\n\nModifications\n-------------\nThe replica read code has been refactored into its own class for\nclarity and better future testability. The code is restructured\nso that individual filtering and error handling happens on\na per-operation basis, errors are silenced and logged.\n\nAPI docs have been updated to reflect this new behaviour.\n\nResult\n------\nMore resilient getFromReplica calls when replicas are not\navailable.\n\nChange-Id: I00ef787d57a4acb76b344e66476730769ef08318\nReviewed-on: http://review.couchbase.org/52702\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java"],"date":1435663914000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b320fb1059bbfe2bb0cb16b70491a7bdf987d474","msg":"JCBC-652: Support DesignDocument Options\n\nMotivation\n----------\nThe view engine currently supports 2 options which can be overridden\non a per desing-document basis: updateMinChanges and\nreplicaUpdateMinChanges. They need to be exposed on the DesignDocument\nAPI so they can be set.\n\nModifications\n-------------\nThe DesignDocument has been extended to optionally support setting\nthose two options and will send them as part of the HTTP request\nif needed.\n\nResult\n------\nThe options can now be configured by the user when a design document\nis created or modified.\n\nChange-Id: I47215116d849777276312d7e0ab021fba713ff9a\nReviewed-on: http://review.couchbase.org/52828\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java"],"date":1435930750000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b1be70ccc944ea212743eeb47b35609e94bd98e1","msg":"JCBC-805: Implement getFromReplica with Iterator\n\nMotivation\n----------\nOn the blocking API, at the moment on the List\u003cD\u003e API is available,\nwhich is not flexible enough in the error case. In addition, a\nsimilar Iterator\u003cD\u003e API needs to be exposed where the user can\npull out documents as they arrive (and optionally stop iterating\nif they have what they need).\n\nModifications\n-------------\nThe Iterator blocking API has been added to the Bucket interface\nand implemented accordingly. Simple integration tests have been\nadded with precautions since they only work if the setup is\ncorrect and matching the assertions.\n\nResult\n------\nMore flexible replica read API during node failures.\n\nChange-Id: Ia678444cfb72f1703c85c831746355de53ee20df\nReviewed-on: http://review.couchbase.org/53012\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ReplicaReadTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1436426873000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0f29c2b53490812a127e7e44945a7d6c140bd8ad","msg":"JCBC-810: Cache getFromReplica to avoid eager unsubscription leaks.\n\nMotivation\n----------\nA common pattern to execute is getFromReplica(ALL) and then use methods\nlike first() or take(n) to get specific objects out of the observable.\n\nA problem has been identified with eager unsubscriptions and object\nleakage (the contained ByteBufs are not properly freed on the unsubscribed\nobservable).\n\nModifications\n-------------\nBy using the cache() operator, the emitted values are cached and a potential\nunsubscribe is disconnected. Since a maximum of 4 values can be emitted, this\nshould not be a problem.\n\nThe ReplicaMode has been extended to provide how many nodes might be affected\nso that a size hint can be provided to cache() and keep the memory overhead\nas low as possible.\n\nResult\n------\nUsing first() or take(n) methods on the getFromReplica() method work without\nissues and leaks.\n\nChange-Id: Ieae5c08f1edd41745c9c2d64db657cdc5208fdb7\nReviewed-on: http://review.couchbase.org/53218\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/ReplicaMode.java"],"date":1436953807000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cbc4c9a06c7c5733e63078382a57548ae0499fd6","msg":"JCBC-782: Make CouchbaseAsyncBucket cold.\n\nMotivation\n----------\nSince all the calls against the core layer are considered hot,\nthis brings along some limitations which are not obvious. The\nmain issues we ran into in the field are:\n\n\t- Retry logic can\u0027t work because the retried subject\n\t  is the same as the failed one.\n\t- Fallback code is eagerly evaluated, leading to\n\t  inconsistent and surprising results\n\nBy wrapping the hot observables into a defer method, they\nwork like cold observables.\n\nModifications\n-------------\nThis changeset only cares about the CouchbaseAsyncBucket\nto not make the changeset larger than it should be.\n\nResult\n------\nAll methods on the CAB are now cold.\n\nChange-Id: Iecfed8697418932d746b32660adc1b2765b44eb3\nReviewed-on: http://review.couchbase.org/53228\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1436962668000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3e17d939b770ccd16ad9dea63a77c3265f91ccb1","msg":"JCBC-782: Make Other Async APIs cold.\n\nMotivation\n----------\nSince all the calls against the core layer are considered hot,\nthis brings along some limitations which are not obvious. The\nmain issues we ran into in the field are:\n\n    - Retry logic can\u0027t work because the retried subject\n      is the same as the failed one.\n    - Fallback code is eagerly evaluated, leading to\n      inconsistent and surprising results\n\nBy wrapping the hot observables into a defer method, they\nwork like cold observables.\n\nModifications\n-------------\nThis changeset moves the rest of the async API to cold.\n\nResult\n------\nAll other methods on the async API are now cold.\n\nChange-Id: I02ba50d938595ba21810b647a02ad146b164ad82\nReviewed-on: http://review.couchbase.org/53232\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java"],"date":1436965981000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a9f22259c94dd19f7eaffadd5c979d75018fa80c","msg":"JCBC-795: Named Prepared Statement support\n\nMotivation:\n-----------\nThe query team introduced the possibility to name prepared statements.\nInstead of keeping the whole Query Plan, one can simply send the name\nwhich is a way lighter payload.\nIf not given one in the \"PREPARE...\" statement, the server will generate\na name and cache the plan as well.\n\nAdditionally, to avoid livelock situations, one can also provide a\nfallback \"statement\" value that will get executed should the name not be\nfound on the node.\n\nModifications\n-------------\nThis change gets rid of the QueryPlan class, replaced by PreparedPayload\nwhich only stores the name and the original statement (for future retry\nsupport).\nThe fallback feature is used to re-prepare the original statement with\nthe name if it is not found on the node. This also will be needed for\nautomatic retry, and prevents a livelock situation in said retry (by\nensuring that the nodes will all converge to a state where the statement\nis prepared and named similarly).\n\nAsyncQueryResult\u0027s info is now a stream of QueryMetrics directly in the\nconstructor signature.\n\nAdded a DigestUtils class that can encode a String in SHA1, used as the\nidentifier for a given statement (low chances of collisions between two\nwell-formed N1QL statements).\n\nTests have been added and amended, but integration testing is not\nentirely possible while there\u0027s no mean of removing a prepared statement\nfrom the server\u0027s cache.\n\nModified integration tests ClusterManagerTest (avoid dropping buckets\nthat aren\u0027t related to the test) and QueryTest (use scanConsistency and\nwait at beginning of test to avoid a \"index rollback\" due to flush).\n\nResults\n-------\nAll tests pass, prepared statements are referenced by name instead of\nsending the whole execution plan over the wire. They also provide the\nPREPARE statement as a fallback statement.\n\nChange-Id: Iae5d07aa91828501a0fd1c97983a293bf2568854\nReviewed-on: http://review.couchbase.org/52781\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryResult.java","src/main/java/com/couchbase/client/java/query/NamedPreparedStatementException.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/PreparedPayload.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/util/DigestUtils.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/query/QueryTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java","src/test/java/com/couchbase/client/java/query/StatementSerializationTest.java"],"date":1435837470000,"numberOfModifiedFiles":17},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f0aa8d2c70e99d003b14be9859dce83282c1b898","msg":"JCBC-809: Named Prepared Statement retry handling\n\nMotivation:\n-----------\nSince the cache of plans is not (yet) distributed, we want to be able to\nintelligently retry (re-prepare the statement) if the name is not known.\n\nWe also want to give a coherent name to our prepared statements in order\nto have the same names on all nodes.\n\nModifications\n-------------\nThis change modifies the queryPrepared() method so it will chain retry\nlogic to it:\n - retry at least once if a NamedPreparedStatementException is\n thrown\n - perform additional retries if the RetryStrategy demands it (for that\npurpose, request lifetime is measured from the first invocation of\nqueryPrepared)\n\nSince now the NamedPreparedStatementException is thrown when the name is\nnot found but it also means that the statement was re-prepared on the\nnode, the maximum number of attempts is guaranteed to be capped at the\nnumber of query nodes in the cluster (no livelock anymore).\n\nAdded doc on DigestUtils.\n\nTests have been added and amended, but integration testing is not\nentirely possible while there\u0027s no mean of removing a prepared statement\nfrom the server\u0027s cache.\n\nQueryTests integration test have been amended to work with NOT_BOUNDED\nconsistency to avoid problems with current builds.\n\nResults\n-------\nAll tests pass, a PreparedQuery is retried if the N1QL service says it\ndoesn\u0027t know about a prepared statement with that name.\n\nChange-Id: I6622aa6da67df0a61ccb89c7bded18f0d6c30899\nReviewed-on: http://review.couchbase.org/53036\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/util/DigestUtils.java"],"date":1437558561000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"46af0e701f07c4a11ec443f9a4df07b9e143aa9d","msg":"JCBC-815: Do not let the CouchbaseEnvironment.Builder implement the Env IF.\n\nMotivation\n----------\nA constant source of confusion has been the fact that the CouchbaseEnvironment\nBuilder also implements the CouchbaseEnvironment. Also, this meant that methods\nwhich are not supported on the builder needed to throw exception or (worse)\nreturn null.\n\nModifications\n-------------\nThis changeset removes the interface implementation and consequently gets\nrid of the unneeded getters on the builder.\n\nThe environment code has been adapted to access the fields in the builder\ndirectly, instead through its getter methods.\n\nResult\n------\nThe builder is now clearly distinguishable from the built environment\nitself and also does not have to throw unsupported exceptions on methods\nwhich are not meant to be called at all.\n\nChange-Id: I30b9d10214244c10c25c1a85e14c3ae6ffb8dfbf\nReviewed-on: http://review.couchbase.org/53543\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1437571200000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"10cdefebba1432a46662e6107903585570c7d7a8","msg":"JCBC-814: Refactoring query-related code out of AsyncBucket\n\nMotivation:\n-----------\nIn CouchbaseAsyncBucket, the code relative to executing N1QL queries is\nstarting to take too much space, becoming more difficult to maintain.\nExternalize all the actual implementation into a separate class.\n\nModifications:\n--------------\nRefactored private methods queryRaw and queryPrepared as well as actual\nimplementation for prepare into a separate class QueryExecutor.\n\nSeparated executing a prepared query and executing it with retry so both\noptions are available to power users.\n\nThe QueryExecutor is accessible through a CouchbaseAsyncBucket protected\nmethod (that could be used for mocking it).\n\nFixed unit tests where a PREPARE is asserted.\n\nEnvironment is also accessible from Bucket.\n\nResults\n-------\nCode for query execution is isolated and will be easier to find and to\nmaintain. Retry behavior can be implemented by the client through using\nQueryExecutor.preparedQuery instead of preparedQueryWithRetry.\n\nUnit tests and query integration tests pass.\n\nChange-Id: I597e796769fd7ea4fb3d0052d55ad9ba2d7cbd2e\nReviewed-on: http://review.couchbase.org/53548\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/core/QueryExecutor.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1437582658000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da59308c3709a715e3aa1981a4e84d5e59abcea0","msg":"Prepare 2.2.0-dp2 Release\n\nChange-Id: I4eb9ba6637fb555ce96f922696189b892405ce59\nReviewed-on: http://review.couchbase.org/53613\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1437674475000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eefb91079dbac565ab6a6a270e9940cc5670d3cc","msg":"JCBC-818: Disable Prepared Statements for DP2\n\nMotivation\n----------\nThe implementation has changed twice already and the server side\ncommunication protocol is still heavily in flux.\n\nThis changeset disables prepared statements until we can bring it\nback in a solid and supported fashion for 2.2.0 GA.\n\nChange-Id: I1eaf59569ace0b2516b13436c9d71c8e80437096\nReviewed-on: http://review.couchbase.org/53737\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/QueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1437980820000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b7432bcde883edc02b871470d5408734d8e9a157","msg":"JCBC-817: Rename parametrized to parameterized for consistency reasons.\n\nMotivation\n----------\nIt was decided, while parametrized is correct in form, that throughout\ndocumentation and SDKs the term \"parameterized\" should be used instead,\nsince it appears to be the primary form according to the oxford\ndictionary.\n\nSince this API hasn\u0027t been stableized yet until 2.2.0, we can make this\nchange now better than later.\n\nModifications\n-------------\nThis changeset replaces all parametrized occurences with the parameterized\nform.\n\nResult\n------\nConsistent naming of concepts across docs and SDKs.\n\nChange-Id: I1dc030bedf687a77bad2c54b0ce887c1cdc39e53\nReviewed-on: http://review.couchbase.org/53736\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/ParameterizedQuery.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/SimpleQuery.java","src/test/java/com/couchbase/client/java/query/QueryTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1437979906000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7059705cb8503ddb9e6f09bcb17de412c5909229","msg":"JCBC-819: Implement a Bucket Consumer for Events\n\nMotivation\n----------\nIt makes sense to allow storing events in a couchbase bucket,\nmainly to showcase how it works. In production it might come\nin helpful if those events are sent to a different cluster\nwhich collects and aggregates those statistics.\n\nModifications\n-------------\nAdding the BucketConsumer and allow to use either insert or\nupdate of the documents.\n\nResult\n------\nA simple to plug consumer which writes the events into a\nbucket as json data.\n\nChange-Id: Id9f3a9bba1721f468a110d5d3160f2cb7077d25b\nReviewed-on: http://review.couchbase.org/53798\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/event/consumers/BucketConsumer.java"],"date":1438085460000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7f0edf021108b17c0771af379f625a5f7b098207","msg":"JCBC-823: Expose maxParallelism as QueryParam.\n\nMotivation\n----------\nFor performance optimizations on queries, the maxParallelism\nparam has been added to optionally override the server side\ndefault.\n\nModifications\n-------------\nThe QueryParam now exposes the option and passes it down to\nthe query engine if set. Tests adapted to make sure it works\nas specified.\n\nOne oddity is that the server expects the number as a string,\nso our code converts the int to a string.\n\nResult\n------\nMaxParallelism supported for n1ql queries.\n\nChange-Id: I42985f7e8ca5396b4f76148b04f67f439c2317d5\nReviewed-on: http://review.couchbase.org/53931\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/QueryParams.java","src/test/java/com/couchbase/client/java/query/QueryParamsTest.java"],"date":1438272279000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bbd08078d651ddf433274f4044cacb8a1e7b6915","msg":"JCBC-825: Expose MutationToken on Document\n\nMotivation\n----------\nAs a prepration for enhanced durability and optimized n1ql queries, the\nmutation token needs to be exposed on the document itself.\n\nModifications\n-------------\nThe Document API has been extended to support the token, but since it is optional\nit is backwards compatible (nulling out if not supported).\n\nIf the user does not want to use mutation tokens, even custom documents will continue\nto work, only if mutation tokens are enabled the custom documents need to implement\none more method to create the document with the mutation token.\n\nResult\n------\nThe mutation token is exposed and can be utilized from user and sdk space.\n\nChange-Id: Id7bf5eb5c3e67f027f746ba92dd15f9c73eea9c2\nReviewed-on: http://review.couchbase.org/54133\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/BinaryDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/EntityDocument.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonBooleanDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/RawJsonDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/BinaryTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonLongTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonStringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/RawJsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/SerializableTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/StringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java"],"date":1438774084000,"numberOfModifiedFiles":28},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aeefbf8f841c4d2fc0b455daf08cb7a591bea4b4","msg":"JCBC-826: Support for Enhanced Durability\n\nMotivation\n----------\nThe java client needs to be adapted in order to pass the mutation\ntoken down to the observe calls.\n\nModifications\n-------------\nAdapting the bucket api to call the underlying observe methods\nwith the mutation token.\n\nResult\n------\nObserve will now transparently use the new logic if mutation\ntokens are enabled.\n\nChange-Id: Ib921765e70a92a572968ac458e24ae3fdb2d4ccf\nReviewed-on: http://review.couchbase.org/54138\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1438785656000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95aa07856829ebb155c68ce52b807a93879344a0","msg":"JCBC-828: Always apply a server side timeout on query.\n\nMotivation\n----------\nIn order to avoid queries running forever on the server side,\nthe client side timeout should be always be applied, since\nthere is no point in running the server side execution code\nwhen the client has timed out and is not listening anymore.\n\nModifiations\n------------\nBy default, the 75s environment timeout will be used on the\nasync API, as well as the sync API. If the sync api overrides\nthe client side timeout, it will be mirrored. Note that\nthe user can always tune the timeout on the QueryParams,which\nalways takes precedence. This is important for super long running\nqueries which might take longer than 75s.\n\nResult\n------\nAvoid running queries infinitely on the server if the client\nstopped waiting some time ago.\n\nChange-Id: I434dd438f304ca71ca5cee27e01b21fde15b44a3\nReviewed-on: http://review.couchbase.org/54168\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AbstractQuery.java","src/main/java/com/couchbase/client/java/query/QueryParams.java"],"date":1438860723000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cde09f7cdbed8d8c7bf4169c61fed8de7b806b1a","msg":"JCBC-829: Change API for new prepared statements handling\n\nMotivation\n----------\nThe agreed spec includes transparently handling the prepared statement,\nso a new adhoc query option needs to be introduced, as well as the\nprepare() methods removed from the public API.\n\nModifications\n-------------\nThe prepare() API is removed from the async and sync API, and the new\nquery option is added to the query params.\n\nResult\n------\nCleanup for upcoming prepared statement changes.\n\nChange-Id: I673d7c66efb454cba412f24fbff36ad01e3f5d76\nReviewed-on: http://review.couchbase.org/54410\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/QueryParams.java"],"date":1439453223000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"615dccbdfb8b5e112026c2ac26cc4b66549ca5cd","msg":"JCBC-829: Add LRU Query Cache\n\nMotivation\n----------\nSince prepared objects are nor transparently cached, we need a thread\nsafe LRU cache to handle the objects.\n\nModifications\n-------------\nWithout pulling in a nother library, for now we synchronize a\nLinkedHashMap extension which provides LRU semantics with very\nlittle code necessary. In the future, custom implementation can\nprovide better throughput, but it should be more than enough\nto start with.\n\nResult\n------\nLRU cache implemented, ready to be used in later code.\n\nChange-Id: I7457549c2168f552a18778e9967d5240a50fcfcc\nReviewed-on: http://review.couchbase.org/54412\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/QueryExecutor.java","src/main/java/com/couchbase/client/java/util/LRUCache.java","src/test/java/com/couchbase/client/java/util/LRUCacheTest.java"],"date":1439463926000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30722a8636b50cbf801fbea7fd1fa58b15d19f21","msg":"JCBC-830: Handle EXISTS response on append/prepend.\n\nMotivation\n----------\nWhen an append/prepend operation is called with the cas\nvalue set and the requests value does not match with the\nserver one, it will return with an EEXISTS (same as on\na replace operation, for example).\n\nModifications\n-------------\nThe proper mapping from EXISTS to a CASMismatchException\nhas been coded, as well as adding integration tests to\navoid regressions in the future.\n\nResult\n------\nEXISTS on append/prepend are now properly converted into\nthe right exception type.\n\nChange-Id: I7a054503a8bf1dbbbfdb76e5d7d8c8fc4fb2da1a\nReviewed-on: http://review.couchbase.org/54498\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1439811105000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5216638c192e64bf77747901f60f49c833f21e5f","msg":"Align System -\u003e RuntimeMetricEvent rename with core.\n\nChange-Id: I781576e38012b1a104d90a3c58574ab86bd0efdb\nReviewed-on: http://review.couchbase.org/54575\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1439969299000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8963fccc5c15657ec2c65ec85c9373e761cd6f77","msg":"JCBC-829: Internalize Prepared Statements Execution\n\nMotivation\n----------\nThe final step of the prepared statement rework includes using\nthe LRU cache and conditionally either executing the cached\nprepared payload or running the prepare code first.\n\nModifications\n-------------\nThe code and tests have been modified to remove all external\nvisibility of \"prepared objects\", and also now the cache wipe\nmethod is exposed on the bucket API.\n\nResult\n------\nAutomatic and internal execution of prepared statements, but\nwithout retry logic on errors (which will come in a later\ncommit).\n\nChange-Id: Iaf97e9a08e60a168db75c01f7b875ca3485ade29\nReviewed-on: http://review.couchbase.org/54444\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/ParameterizedQuery.java","src/main/java/com/couchbase/client/java/query/PreparedPayload.java","src/main/java/com/couchbase/client/java/query/PreparedQuery.java","src/main/java/com/couchbase/client/java/query/Query.java","src/main/java/com/couchbase/client/java/query/core/QueryExecutor.java","src/test/java/com/couchbase/client/java/query/QueryTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java","src/test/java/com/couchbase/client/java/query/StatementSerializationTest.java"],"date":1439537208000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dcea8835c79db253a5b12b06554d09b29801c7c6","msg":"Override core-io builder methods to align with recent changes.\n\nChange-Id: I1a65d8c9a7c78f45277f243cc45efc3e87c8c94f\nReviewed-on: http://review.couchbase.org/54586\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1439988288000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"299f38383c808bb8b180e00cca1d340f39f0dbe5","msg":"JCBC-829: Retry logic for prepared statements execution\n\nMotivation:\n-----------\nExecution of queries marked as no ad-hoc are implemented through\nprepared statements and a local cache of execution plans.\nHowever, such executions should be made more resilient to a few N1QL\nside errors by repreparing and re-executing once.\n\nModifications:\n--------------\nQueryExecutor\u0027s dispatchPrepared now has a retry logic in place. It will\npeek into the result of an EXECUTE (in the N1QL sense, corresponding to\nthe executePrepared method) and redo a PREPARE followed by EXECUTE if\nthere\u0027s a retry-warranting error.\n\nThis is only done once, but is active both if the statement is in cache\nor not.\n\nQueryExecutor has been reworked in order to allow unit testing. Unit\ntests have been added that verify various scenarios around prepared\nstatements, cache and retry.\n\nResults:\n--------\nNon ad-hoc queries are now retried once when the executed plan is\ndetermined to be outdated (errors 4050, 4070 and some 5000s).\nQueryExecutor unit tests pass.\n\nChange-Id: Iffe03bbbe3f760ff20964a71f44ff1b6d575d115\nReviewed-on: http://review.couchbase.org/54592\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/error/QueryExecutionException.java","src/main/java/com/couchbase/client/java/query/core/QueryExecutor.java","src/test/java/com/couchbase/client/java/query/core/QueryExecutorTest.java"],"date":1439998570000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"48384ccad55ef91bcf33b51a968796402eac453b","msg":"JCBC-834: Fix spatial query using default query timeout\n\nMotivation:\n-----------\nSpatial queries should use the default VIEW timeout instead of the query\ntimeout.\n\nModifications:\n--------------\nMade CouchbaseBucket.query(SpatialViewQuery) use the view timeout from\nthe environment. Also documented where the default timeouts come from on\nview/spatial/n1ql query method javadocs.\n\nResults:\n--------\nThe spatial queries now use the view timeout by default, as advertised.\n\nChange-Id: I9e3b8e1784f14c01303e2aa8dee25438c6a7d1ac\nReviewed-on: http://review.couchbase.org/54811\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1440495879000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9325c6a2ec210e5074591494196747b39707a4d0","msg":"JCBC-836: Durability Requirements for append, prepend and counter.\n\nMotivation\n----------\nIn addition to the regular mutation methods, append, prepend and counter\nreturn cas values (or mutation tokens) so in turn they can be observed\nfor durability requirements.\n\nThe proper overloads need to be exposed for public consumption.\n\nModifications\n-------------\nThanks to no default arguments in java, a plethora of overloads\nhas been added to both the sync and async API to expose durability\nrequirements on the append, prepend and counter methods.\n\nResult\n------\nSupport for durability requirements on append, prepend and counter.\n\nChange-Id: Iee1777f8da4d4958ed9787741e75b5465559aaf5\nReviewed-on: http://review.couchbase.org/54810\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1440494718000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"36ebb9042d43f7262209b99197a65ce8796568b1","msg":"JCBC-833: Prefix all Query-related classes with N1ql\n\nMotivation:\n-----------\nIn order to maintain naming consistency and avoid confusion, classes\nlike Query and related (eg. QueryResult, QueryRow) should be prefixed\nwith N1ql, aligning it with view-related classes like ViewQuery.\n\nModifications:\n--------------\nRenamed Query, QueryResult, QueryRow, their async counterparts, concrete\nimplementations and related tests by prefixing \"Query\" with \"N1ql\".\n\nQueryMetrics and QueryParams have been respectively renamed to\nN1qlMetrics and N1qlParams.\n\nQueryExecutor has been renamed to N1qlQueryExecutor. Order of fields and\nmethod declaration has been shuffled around a bit for clarity.\n\nResults:\n--------\nLess possible confusion when dealing with the various modes of querying\ncouchbase (view, spatial view, N1QL).\n\nChange-Id: I47c45c4456800886b794634a3e01c228c7199381\nReviewed-on: http://review.couchbase.org/54809\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AbstractN1qlQuery.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/N1qlMetrics.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/N1qlQuery.java","src/main/java/com/couchbase/client/java/query/N1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/N1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/ParameterizedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/PreparedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/PreparedPayload.java","src/main/java/com/couchbase/client/java/query/SimpleN1qlQuery.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/query/N1qlMetricsTest.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java","src/test/java/com/couchbase/client/java/query/N1qlQueryTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java","src/test/java/com/couchbase/client/java/query/StatementSerializationTest.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1440492285000,"numberOfModifiedFiles":31},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c24d7fdcbd0ae5508abe5ad76202ca394939da20","msg":"Bring metadata in order\n\nChange-Id: I59ac125a79b0e79b0bb07fc084f544ce976c320d\nReviewed-on: http://review.couchbase.org/54849\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1440593227000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9891310f4c816b59c0fb75b515f03a2ffbcc4f63","msg":"JCBC-829: Evict from cache before retry and add tests\n\nWhen a prepared payload is scheduled for retry, first evict it from\nthe cache (so that even if re-prepare fails, we\u0027ll have a chance to\ntry again next time the same statement is issued).\n\nAdded tests on the extraction of the plan, content of the execute\nprepared query (server name, along with \"encoded_plan\" for\nthe compressed plan...).\n\nChange-Id: I76bd50b04f4ac80ebc9b667425519af2495bdba5\nReviewed-on: http://review.couchbase.org/54851\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/test/java/com/couchbase/client/java/query/N1qlQueryTest.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1440595920000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d8106208079019b5fe75700dbfd4b4dbaf26d9c4","msg":"JCBC-784: Adapt javadocs to reflect counter API changes.\n\nChange-Id: If0fcf05decf13f31ad7eae0a61289fcee0b07f50\nReviewed-on: http://review.couchbase.org/54899\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1440756760000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0918ccd2ba9766fce1fd20935b3501e5b0ba5750","msg":"JCBC-744: Ignore @Id annotated fields in the document body.\n\nMotivation\n----------\nWithout this change, every property annotated with @Id will be\nincluded in the JSON content, which just duplicates information\nand should be ignored.\n\nModifications\n-------------\nSkip properties for the content which have an @Id annotation.\n\nResult\n------\nID fields are not duplicated in the content.\n\nChange-Id: I0a909716427a18072bd42bae8c78082526cddb0d\nReviewed-on: http://review.couchbase.org/54949\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java"],"date":1441101834000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ce19c49f361228ce86dbe19da53c3a3ea1589976","msg":"JCBC-744: Mark Repository as experimental.\n\nChange-Id: I1169080e981742d383b6000669a0b3083828c1af\nReviewed-on: http://review.couchbase.org/54950\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/document/EntityDocument.java","src/main/java/com/couchbase/client/java/repository/AsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseAsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseRepository.java","src/main/java/com/couchbase/client/java/repository/Repository.java"],"date":1441102300000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4a6433eb9dabe333678ed213195fb5d0d0c0e97a","msg":"Prepare 2.2.0 Release\n\nChange-Id: Ie33a6c64f66831d4927fc3f06f55ada51719e9be\nReviewed-on: http://review.couchbase.org/54972\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","build.gradle","gradle.properties"],"date":1441182013000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b96e0a1e0ac35b4bcddf9ccc10b4748024400fac","msg":"Prepare 2.2.1 Release Cycle\n\nChange-Id: Ia659b6db5a1c352d803349a7ead4b4312e19f276\nReviewed-on: http://review.couchbase.org/54986\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties"],"date":1441201689000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"527e8007bc51ae3a62f545ea849ef10f2786b623","msg":"Move to Maven\n\nChange-Id: I7f45272e9390da042cd6f04ebfa692b404a4c318\nReviewed-on: http://review.couchbase.org/55024\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["build.gradle","gradle.properties","gradle/wrapper/gradle-wrapper.jar","gradle/wrapper/gradle-wrapper.properties","gradlew","gradlew.bat","pom.xml","settings.gradle"],"date":1441288081000,"numberOfModifiedFiles":8},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7ff5f0c880798091ff36d24de0f6cb195dbd0217","msg":"JCBC-847: Update status references to new KeyValueStatus class\n\nMotivation\n----------\nAfter JVMCBC-240 has been merged in the core, two tests which using\nResponseStatusConverter stopped compiling\n\nModification\n------------\nUpdate tests to use KeyValueStatus class instead\n\nResult\n------\nTests compiling again\n\nChange-Id: I43bcb2ac5d46a5704aaa1243818f4ffa4357a34d\nReviewed-on: http://review.couchbase.org/55346\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/bucket/BucketFlusherTest.java"],"date":1442586274000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3b6fbc3db9517cf3895032e359459458fe9e3dcf","msg":"Added mocked unit tests that experiment with back-pressure\n\nFirst a classical bulk get pattern scenario is demonstrated, where\nBackpressureException is thrown because the ringbuffer is filled (as\nsimulated by the mock reacting to queue reaching MAX_CAPACITY).\n\nSecondly, a new pattern is demonstrated where natural flow control in\nRxJava is used to avoid that BackpressureException, by using the flatMap\nmaxConcurrent variant.\n\nChange-Id: Ia54b4cbf0a41b4017c45dc904df59fd904df394d\nReviewed-on: http://review.couchbase.org/55489\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/behavior/backpressure/BackpressureTests.java"],"date":1443089155000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e89aa7906bdedf7cd97406edf007721774ca676a","msg":"JCBC-854: Speed up encoding for String-based document types.\n\nMotivation\n----------\nEncoding the payload of documents, even if they are already in a String\nrepresentation takes time. It pays off if we have faster ways to encode\ninto a utf8 byte stream.\n\nModifications\n-------------\nAfter some help of JMH and netty utilities, we found a faster way to perform\nstring encoding. This applies to both quite a few string content based document\ntypes. Separate changes for ID handling will come in too.\n\nHere is a comparison on encoding a 11K json document from string to a\nbytebuf:\n\nBenchmark              Mode  Cnt      Score     Error  Units\nthis    avgt   10  21399.090 ± 331.158  ns/op\n2.2.0   avgt   10  79338.532 ± 484.240  ns/op\n\nthat is nearly an 4x improvement.\n\nResult\n------\nFaster encoding performance for string-based document types.\n\nChange-Id: Ida5d25f75aeb3445c503cd0abbda538a2b79e8e2\nReviewed-on: http://review.couchbase.org/55910\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonLongTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonStringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/RawJsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/StringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/test/java/com/couchbase/client/java/transcoder/TranscoderUtilsTest.java"],"date":1444311181000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"212c6b08b5bfc748e83c25eaf58dcd3ab0bfc10f","msg":"JCBC-855: Cache JsonBooleanTranscoder true/false values.\n\nMotivation\n----------\nSince only true and false can be passed in, there is a very small\nfinite number of possible buffers to be created.\n\nModifcations\n------------\ntrue and false representations and pre-allocated and then reused\nevery time they are needed.\n\nResult\n------\nNo need to create these two representations every time.\n\nChange-Id: I1353d85d1e49435a8884fef575b247b61d978a84\nReviewed-on: http://review.couchbase.org/55949\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoder.java"],"date":1444378967000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b883310f1244ab6114d2ea832d4df84b90969e9e","msg":"Preparing 2.2.1 Release\n\nChange-Id: Ica920da70cf8f98ddda26c72a8c3eed1bcd5d25a\nReviewed-on: http://review.couchbase.org/55992\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1444631626000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"39b41060418c8b52eff0bc59fc2c5cc5d9f4350b","msg":"JCBC-856: Update README for 2.2.1\n\nMotivation\n----------\nThe README has been outdated after the change from\ngradle back to maven. Also, this is a great opportunity\nfor more clarity.\n\nAlso, a CONTRIBUTING file with some basic information\nis helpful for newcomers.\n\nModifications\n-------------\nThe README is now restructured and clarified, also\nproviding new information on how to contribute.\n\nThe CONTRIBUTING file has been added with similar\ninfo than in the README.\n\nResult\n------\nEasier to digest README with updated infos.\n\nChange-Id: If52b3fe7134b9a4e917df84689f1b75d36a5c097\nReviewed-on: http://review.couchbase.org/55989\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["CONTRIBUTING.md","README.md"],"date":1444627874000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"914c767b1866eaa816d10069fa985e3048e0c0d6","msg":"JCBC-852: Improve docs on view management\n\nMotivation:\n-----------\nDocumentation on view management is a bit unclear, especially on how to\nadd/update a specific view into an existing DesignDocument (what is the\nbehavior of upsert in this case? can one use getDesignDocument, mutate\nthe views() list in it and then upsert?).\n\nModifications:\n--------------\nAdded javadoc on various view-related elements.\nDocumented how to add a view on upsertDesignDocument\u0027s javadoc.\nDocumented reduce nullability.\nDocumented ways to create a concrete instance of View.\n\nAdded integration tests that showcase and test the behavior of upsert\nDesignDocument when one doesn\u0027t resend the whole list of view definition\nvs doing a get/add view/upsert of the DesignDocument.\n\nThis shows that adding a new definition of an existing view will update\nit on the server side.\n\nResults:\n--------\nView management is better documented in javadocs and an integration test\nverifies the behavior when adding a view.\n\nChange-Id: I1124b87cad3b1adcde0d164d6dc588ade22a9a00\nReviewed-on: http://review.couchbase.org/55726\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/view/DefaultView.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/main/java/com/couchbase/client/java/view/SpatialView.java","src/main/java/com/couchbase/client/java/view/View.java"],"date":1443791101000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1ed8d651dcfc6737fa9916009cf883f8c2085ed3","msg":"Fix property replacement in build process.\n\nChange-Id: I0bb7f5fd3e7a558830b12d8f940d1ee6ef8b33e8\nReviewed-on: http://review.couchbase.org/56056\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["pom.xml","src/main/resources/com.couchbase.client.java.properties"],"date":1444748509000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9544f63e33ad08204112a477858e9e0a796bafd5","msg":"Start working on 2.2.2\n\nChange-Id: I7a367cc2eb95d212f82197a9d3b4a3038b4e6772\nReviewed-on: http://review.couchbase.org/56152\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1444910266000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1ffebd098390d41d7f993d9f2ad7b20eb8480ef4","msg":"JCBC-863: Cache Bucket and AsyncBucket references.\n\nMotivation\n----------\nBest practice recommends that only one Cluster and one Bucket\nreference per bucket are opened and then reused as a singleton.\n\nIn the field it has been discovered that sometimes the buckets\nare not reused, but rather opened on every call and just the\nCluster object is reused.\n\nModifications\n-------------\nTo apply \"defense in depth\" if the best practices are not\nfollowed, the Bucket and AsyncBucket objects are cashed in\na CHM so when subsequent calls are incoming, no new Bucket\ninstances are created.\n\nLifecyclemanagement is also includes, so when a bucket is\nclosed and then opened again, this is discovered and a\nthe references are replaced.\n\nResult\n------\nEven when the best practices are not followed, this change\ntries to minimize the impact.\n\nChange-Id: Ib4835643fac1a9b56f10d6ffe725b5afb1f0c843\nReviewed-on: http://review.couchbase.org/56153\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1444910283000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bce8e4f6082e098ca99b90fed6a1abd0f492b786","msg":"Polish Couchbase(Async)Cluster.\n\nNote that this change doesn\u0027t change behaviour, it is\njust adding docblocks and refactoring code a little so\nit can be understood more easily.\n\nChange-Id: I5b5cc27f5f9880e0118ddacc36effc9c4fff19a2\nReviewed-on: http://review.couchbase.org/56189\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1444990531000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"378bcdd95e955b3eb41fea365ae85f748583b559","msg":"Adapt to JVMCBC-256 shutdownAsync changes.\n\nModification\n------------\nSince shutdown on the environment is now deprecated, the code and\ncomments now refer explicitly to shutdownAsync.\n\nChange-Id: I9a24e02394ba2257a8825e9e1d392421d0ce6e76\nReviewed-on: http://review.couchbase.org/56191\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1444997337000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ca7f58043b87199679fab4cf5a6cb5e9f446b2cd","msg":"JCBC-864: Remove with Durability Requirements does not honor CAS\n\nMotivation\n----------\nIt was found that when the remove operation with document and\ndurability requirements was used, the contained CAS value\nwas not honored. This meant that potential cas mismatches\nwere not raised to the user level.\n\nModifications\n-------------\nThe root cause of the issue was that the document was casted\ndown to its ID, not passing the cas value down to the core\nlayer.\n\nThe code has been refactored so that both ID- and Document-\nbased durability requirements now use a common helper method\nto avoid code duplication while making sure the CAS value\nis honored where possible.\n\nAn integration test has been added to avoid future\nregressions.\n\nResult\n------\nRemove with document and durability requirements now\nproperly respects the CAS value and allows to detect\nCAS mismatches on remove.\n\nChange-Id: I917946d3503f49ee6dc309443654479ca22e7bf0\nReviewed-on: http://review.couchbase.org/56209\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1445231157000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1348a326945e252fc0c63f5a9b9c3d8a43e1a0e1","msg":"JCBC-865: Fix multiple WHEN in CASE\n\nMotivation:\n-----------\nThe correct syntax for CASE is not to separate multiple WHEN with any\nseparator, while currently a comma is used.\n\nModifications:\n--------------\nRemoved the comma separator when multiple WHEN are added to a CASE.\n\nResult:\n-------\nThe multiple WHEN CASE now produces correct n1ql statement.\n\nChange-Id: I7f06a4d6144c15983e729d544042bb28715179dd\nReviewed-on: http://review.couchbase.org/56291\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/functions/Case.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CaseTest.java"],"date":1445440785000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"35cc801b1193d7640fdbd7c0c655ff5688f7bb50","msg":"JCBC-870: Fix double opening of AsyncBucket for each Bucket\n\nMotivation:\n-----------\nDuring opening of a (sync) Bucket, two AsyncBucket would get opened:\nthe first one from the call to AsyncBucket.openBucket, and the second\none in the constructor of the CouchbaseBucket.\nThis is problematic since the closing of a bucket will mark only the\ninternal AsyncBucket as closed, not the one in the AsyncCluster\u0027s\ncache, leading to bad internal state.\n\nModifications:\n--------------\nCouchbaseBucket now has a constructor that takes an AsyncBucket to reuse\ninstead of creating one from scratch. The old constructor is kept in\nplace as part of the public API but isn\u0027t used internally anymore.\n\nResults:\n--------\nNo double opening of AsyncBuckets, closing a Bucket will correctly mark\nall corresponding AsyncBuckets as closed.\n\nChange-Id: Ic72594aec0c0f60d5d0d9547c25b6ed1e4388704\nReviewed-on: http://review.couchbase.org/56603\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1446485557000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e7253df25bae9aa0f0f8d4795c1e5d4742d85e6a","msg":"JCBC-844: Clarify javadocs of upsert.\n\nMotivation\n----------\nIt has been brought to attention that the javadoc for upsert is\nmisleading and does not clarify that upsert is not actually performing\na replace operation and does not take the CAS into account.\n\nModifications\n-------------\nThe javadocs now use overwrite instead of replace in the wording,\nas well as contain a paragraph which states that CAS is not respected\nand the corresponding replace method needs to be used instead.\n\nResult\n------\nMore clarity for the upsert javadocs.\n\nChange-Id: Ic7a3aaf7d96661e9348857f8e5785c25be05d2f9\nReviewed-on: http://review.couchbase.org/56630\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1446557004000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e4ea4e6ca928e079ae95c85c8cf3ebb11975b087","msg":"JCBC-873: Point out that mutating cluster ops are async\n\nMotivation\n----------\nThe previous javadocs did not make it clear that even if  the server\nresponds with a success and the observable/call is completed, the\noperation on the server itself is asynchronous and might not be\nfinished yet.\n\nModifications\n-------------\nEnhance javadoc to point out the fact.\n\nResult\n------\nMore clarity in the javadoc on server side behaviour for cluster\nmanagement operations.\n\nChange-Id: I1cc3e0884ae4f99eb8db24a93ad805abbd879f9b\nReviewed-on: http://review.couchbase.org/56625\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java"],"date":1446539258000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"421ab28f0513d9f856466dca04795e7550237308","msg":"JCBC-872: Add Javadocs for parameterized queries\n\nMotivation\n----------\nA quick sample on how to use positional or named parameterized\nqueries needs to be part of the javadocs to ease adoption.\n\nModifications\n-------------\nThe N1qlQuery methods have been extended with javadoc blocks\nexplaining the concepts and showing examples on how to use them.\n\nResult\n------\nHelping with easier adoption for parameterized queries.\n\nChange-Id: I761657d092b43713d05e0f30aba0c1ccb7c8fab1\nReviewed-on: http://review.couchbase.org/56629\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/N1qlQuery.java"],"date":1446556383000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f0fa427bee53ac793107b4b63e66e8b6c23a1b7f","msg":"JCBC-871: N1ql status exposed in result\n\nMotivation:\n-----------\nSo far only the boolean status of a N1QL response was exposed on the\nresult object. This has become kind of confusing when users started to\nuse server-side timeouts, since in case of timeout only the status is\nchanged to \"timeout\" (no errors, no rows). So it makes sense to expose\nthe raw status as well.\n\nModifications:\n--------------\nN1QL status is exposed through the status() method. The finalSuccess()\nmethod now relies on \"status()\" in the DefaultAsyncN1qlQueryResult.\n\nResult:\n-------\nExact status of a N1QL query can always be determined by using status().\n\nChange-Id: I9e1053be04493d7932b9e4efb77a1691c279c76b\nReviewed-on: http://review.couchbase.org/56642\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/N1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/test/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResultTest.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1446570942000,"numberOfModifiedFiles":8},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b2e7c309e1309e5797b908e5d54fa29cb981b9e3","msg":"Override DCP flow control settings in CouchbaseEnvironment\n\nChange-Id: Ie87dfcc3e6051db8daecb3d56cad9ac210241756\nReviewed-on: http://review.couchbase.org/56689\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1446701975000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e65d3eec98cca348c198ab9f5046016c86f0e519","msg":"JCBC-876: Add integration tests for DML\n\nMotivation\n----------\nSince 4.0 ships DML as experimental and 4.1 will ship it as GA, it\nmakes sense for the java client to have appropriate tests in place.\n\nModifications\n-------------\nThis changeset starts with this effort and adds integration tests\nfor INSERT, UPSERT, UPDATE and DELETE. One test for DELETE has\nbeen ignored for now until MB-16732 is resolved.\n\nNote that MERGE tests have not been added yet. More tests will\ncertainly be added as the development of the fluent API for those\nkinds of statements progresses.\n\nResult\n------\nFirst batch of integration tests for N1QL DML.\n\nChange-Id: I90b2fa24ad692c53bf7199f1841815cdd849b169\nReviewed-on: http://review.couchbase.org/56738\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlDmlTest.java"],"date":1446802430000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"954f87a50549f8f4e79f67687079f8a1b023fb4f","msg":"Prepare 2.2.2 Release\n\nChange-Id: I89414ab3d9921cf416459a8e5a400e4aa7b6be34\nReviewed-on: http://review.couchbase.org/56974\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1447329241000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"102846493b4c7e3318d5789b03563cde883b24bd","msg":"Disable test case until DML issue resolved on the server side.\n\nChange-Id: Ic7c3b260b5c2b92150a81c465c9ed0a5a37d93fb\nReviewed-on: http://review.couchbase.org/56973\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlDmlTest.java"],"date":1447328922000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8ea82923049c366a727166876d0c01c8e64cd1b8","msg":"JCBC-855: Improve writability of integration tests\n\nMotivation:\n-----------\nWhen writing an integration test case that has special requirements\n(like a dedicated bucket, avoid the flush phase, use a different bucket\nname, ...), it has become very difficult to rely on inheritance of\nClusterDependentTest base class (as JUnit doesn\u0027t behave very well with\nabstract parent classes). There was a need for a different more flexible\napproach.\n\nModifications:\n--------------\nMost of the code mutualized in ClusterDependentTest has been moved into\na CouchbastTestContext class. This context holds the references to the\nCluster, Bucket, BucketManager, etc...\n\nIt also provides utility methods to perfom assertions on the context (eg\nis N1QL available) and lifecycle management (cluster disconnect, ...).\n\nSuch a context should be created in a @BeforeClass method on each test\ncase instead of it extending ClusterDependentTest, by using the\nCouchbaseTestContext.builder() builder.\n\nClusterDependentTest has been made deprecated and is mirroring the old\nbehavior by relying on CouchbaseTestContext internally.\n\nThanks to that, tests that were previously ignored have been reactivated.\n\nResults:\n--------\nUsing the CouchbaseTestContext with the associated builder allows for\nfar more flexible integration tests. For example it is possible to set a\nspecific bucket name then to have it being created in an adhoc way (by\nappending a timestamp to the given name), so that it can be destroyed\nafter the testcase.\n\nChange-Id: Ibf80a144ec0d01fa18f26ca6474bf317955cd4bc\nReviewed-on: http://review.couchbase.org/57375\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/N1qlDmlTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1448990714000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f8f8dc71499bdc9afc2e4417c53f03f03742a178","msg":"JCBC-888: Improve Maven-based javadoc generation\n\nMotivation:\n-----------\nThe Maven-based build had a few missing elements not ported from the\nGradle build (footer, title, etc...).\nAdditionally, the java-client javadoc didn\u0027t link to the core-io javadoc\n(eg for classes like CouchbaseEnvironment having parent classes in the\ncore).\n\nModifications:\n--------------\nAll elements of the javadoc previously set in the Gradle build are also\nset in the Maven build.\n\nAdded offline linking of the core-io javadoc. This is done by locally\nunpacking the core-io javadoc jar and using that as the target for\nlinking (since the docs are not yet published on the web at this point).\nThe generated urls reflect the url where the core docs are expected to\nbe published.\n\nResults:\n--------\nBetter javadoc packaged by the Maven build.\n\nChange-Id: I1057bd1c05d9696bcc579613a3e1a701d011b824\nReviewed-on: http://review.couchbase.org/57462\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1449159551000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"93e0be1160a52908e8b97f88ff2072f18ad3a828","msg":"JCBC-886: Add few N1QL prepared integration tests\n\nMotivation\n----------\nThese adhoc tests have been frequently made without an automated test\nand it makes sense to add them to the harness:\n - test preparation and execution of a \"SELECT sum(...)\" statement\n - test preparation and execution of a statement with both placeholders\n\nModifications\n-------------\nAdded three tests to N1qlQueryTest integration testcase. The \"sum\" one\nonly works with CB server 4.1.0 onwards and is thus ignored in lower\nversions.\n\nAlso uncommented the DML tests, making them pass with a REQUEST_PLUS\nconsistency.\n\nImproved the CouchbaseTestContext: destroy only works on adhoc buckets\nand there\u0027s now a method to ensure there\u0027s a N1QL primary index.\n\nResult\n------\nMore test cases for N1QL, DML and prepared statements (adhoc false).\n\nChange-Id: If512b6dfc758804a16614e89950d6bc1e976fc55\nReviewed-on: http://review.couchbase.org/57424\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlDmlTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1449087846000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a402ceedf504ab365e68628e0ecc6bb374218639","msg":"JCBC-777: Index Management\n\nMotivation:\n-----------\nSecondary index management (listing, creating and dropping indexes on a\nparticular bucket) is something that can be considered a repetitive\ntask for some categories of users and as such can be offered as an API\non top of the corresponding N1QL requests.\n\nModifications:\n--------------\nIntroduced several methods in the BucketManager and AsyncBucketManager\nto deal with secondary indexes. This API only deals with GSI indexes.\n\nMethods to watch specific indexes, polling until they become online (in\nthe case of a deferred build) are also part of the API.\n\nModified the IndexNamesPath to be able to trigger a build on a List of\nindexes (rather than having to rework such a list into a first parameter\nfollowed by a vararg).\n\nAdded integration tests for the API.\n\nResults:\n--------\nUsers can now manage (GSI) indexes more easily than by crafting adhoc\nN1QL queries.\n\nThey can poll for indexes to become online and see the polling progress\nin logs by activating DEBUG on the \"indexWatch\" named Logger.\n\nChange-Id: I9b4224bf7b640e4e2543a53a5747ba418e6f8a75\nReviewed-on: http://review.couchbase.org/57530\nWell-Formed: buildbot \u003cbuild@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultIndexNamesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexNamesPath.java","src/main/java/com/couchbase/client/java/query/util/IndexInfo.java","src/test/resources/log4j.properties"],"date":1446486026000,"numberOfModifiedFiles":10},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b9fc4ddcb09a2f63fd2b8917881c101208cfd534","msg":"JCBC-777: fix index watching max attempts\n\nMotivation:\n-----------\nPrevious commit had a mistake with too low a max_attempts, and we\nactually want to let only the timeout break the polling.\n\nModifications:\n--------------\nMax attempt has been increased to Integer.MAX_VALUE, letting the timeout\nas the only probable cause for the polling to stop (that and all indexes\ngoing online).\n\nChange-Id: Ib23dc941d491fcff607cfc542b561b6d211abbc1\nReviewed-on: http://review.couchbase.org/57848\nWell-Formed: buildbot \u003cbuild@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java"],"date":1450280244000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d1297651b9712b07c9adef3e830469d0a4f48a26","msg":"JCBC-893: Assert KV handling of UTF16 keys\n\nMotivation:\n-----------\nCouchbase Server is supposed to only accept UTF8-encoded keys. The aim\nof this change is to verify that UTF16 characters in keys are correctly\nencoded and accepted by the server.\n\nModifications:\n--------------\nIntegration test with a UTF16 key added to the integration test suite.\n\nChange-Id: I707fbebcbbd4f8ec8edc442ff5fcb7d4a722f2e7\nReviewed-on: http://review.couchbase.org/57910\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java"],"date":1450358751000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e6ff96d93df43e38dc9b17acd383d035322d64b0","msg":"JCBC-883: Add fromCurrentBucket() to select builder API.\n\nMotivation\n----------\nMost of the time when using the select builder API, one needs to\nwrite select(..).from(i(\"bucket-name\")), where the bucket name\nreflects the current bucket in scope.\n\nWe can make this easier for the user.\n\nModifications\n-------------\nThe builder adds a fromCurrentBucket() method which internally\nadds a #CURRENT_BUCKET# identifier into the n1ql string which\nis replaced with the bucket name as `` before it is send to\nthe core engine. That way, the builder API can make it easier\nto just say \"load the data from the current bucket\".\n\nResult\n------\nEasier access to the current bucket in the builder API.\n\nChange-Id: I9d1fffe590d31c2b61bd726133ee92f48d1cecf2\nReviewed-on: http://review.couchbase.org/58040\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultFromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/FromPath.java"],"date":1450783487000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"96ea6c2761a8dd59adf148974f24195c04b81c22","msg":"Added a lot of details to CONTRIBUTING.md\n\nMotivation\n----------\nAfter a user attempted to contribute and was stuck, it appeared that\nthe CONTRIBUTE.md document is a bit terse.\n\nModifications\n-------------\nAdded more detailed steps for contributing to java-client.\n\nChange-Id: I203db476ec23c9ef8f1060ca15abee75ec80ea6c\nReviewed-on: http://review.couchbase.org/58002\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["CONTRIBUTING.md"],"date":1450695307000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bda4e042d01c83075986a0842c03a7525e2f607c","msg":"JCBC-895: Prevent overflow on MAX_VALUE retry\n\nMotivation:\n-----------\nRetry attempt being set to Integer.MAX_VALUE actually causes an\noverflow because the internal retry mechanism adds 1 to the given\nattempt limit.\n\nModifications:\n--------------\nRetryBuilder and RetryWithDelayHandler both cap the maxAttempt parameter\nto Integer.MAX_VALUE - 1 and document this limitation of their input.\n\nDefaultAsyncBucketMananger was setting such a maxAttempt so it has been\nmodified as well to directly provide a correct value.\n\nUnit tests added to check that the input value of maxAttempts is\ndecremented by one if it is MAX_VALUE.\n\nResult:\n-------\nNo more \"java.lang.IllegalArgumentException: Count can not be negative\"\nerror when the maxAttempts is set to MAX_VALUE.\n\nChange-Id: Ib4cf179fa2b34aa19947ce76e9c85121c669c84a\nReviewed-on: http://review.couchbase.org/58111\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/util/retry/Retry.java","src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java","src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java","src/test/java/com/couchbase/client/java/util/retry/RetryBuilderTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWithDelayHandlerTest.java"],"date":1450951468000,"numberOfModifiedFiles":6},{"authorName":"asarkar111atyahoo","authorEmail":"socialguy@outlook.com","authorTimeZone":"GMT+00:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b042b5ba2f6d2298e56e151e3a12ea93d0096f21","msg":"JCBC-894: Support older servers without controllers and index\n\nMotivation:\n-------------\nOlder versions of Couchbase without a controllers or replicaIndex entry\ncan cause a NullPointerException in getBuckets.\n\nModifications:\n----------------\nController and replicaIndex are evaluated defensively in case they are\nnot found in the configuration to avoid NullPointerException.\n\nChange-Id: I4bc1a972dd913c2813943e2fc0d0da3ebd913395\nReviewed-on: http://review.couchbase.org/58027\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1450754237000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3f0030b957d83de2d5d94ca06af3b012e15684fe","msg":"JCBC-757: Support Builder for Insert and Upsert.\n\nMotivation\n----------\nLike with SELECT, it is important to provide a nice builder API (\"DSL\") for\nthe recently stabilized N1QL mutation commands.\n\nModifications\n-------------\nThis changeset adds the builder API for INSERT and UPSERT variants, including\nboth with value and from a select clause. Unit tests have been added to\nverify the resulting N1QL query.\n\nResult\n------\nIt is now possible to easily run insert or upsert statements using the nice\nbuilder API.\n\nChange-Id: Id0e3b822c844b45144caf4df3588d835d77d3b07\nReviewed-on: http://review.couchbase.org/58055\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Insert.java","src/main/java/com/couchbase/client/java/query/Upsert.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertSelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertValueElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/ReturningElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInitialInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInsertValuesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultReturningPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InitialInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InsertValuesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/ReturningPath.java","src/test/java/com/couchbase/client/java/query/dsl/InsertAndUpsertDslTest.java"],"date":1450795923000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"caa47caed3b2a410868fe644c778b97a0c40c34f","msg":"JCBC-757: Support Builder for Update and Delete.\n\nMotivation\n----------\nLike with SELECT, it is important to provide a nice builder API (\"DSL\") for\nthe recently stabilized N1QL mutation commands.\n\nModifications\n-------------\nThis changeset adds the builder API for UPDATE and DELETE variants, including\nboth with value and from a select clause. Unit tests have been added to\nverify the resulting N1QL query.\n\nResult\n------\nIt is now possible to easily run update or delete statements using the nice\nbuilder API.\n\nChange-Id: Ief241279a2ed84514d728f2df4be1c3d93e4419f\nReviewed-on: http://review.couchbase.org/58061\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Delete.java","src/main/java/com/couchbase/client/java/query/Update.java","src/main/java/com/couchbase/client/java/query/dsl/element/SetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultDeleteUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInitialUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMutateLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMutateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DeleteUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InitialUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MutateLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MutateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateUsePath.java","src/test/java/com/couchbase/client/java/query/dsl/DeleteDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/UpdateDslTest.java"],"date":1450802048000,"numberOfModifiedFiles":23},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"15bf1594809c7edb2b578e5bb516774c6688f35c","msg":"JCBC-757: Support Builder for Merge.\n\nMotivation\n----------\nLike with SELECT, it is important to provide a nice builder API (\"DSL\") for\nthe recently stabilized N1QL mutation commands.\n\nModifications\n-------------\nThis changeset adds the builder API for the MERGE variant. Unit tests have been added to\nverify the resulting N1QL query.\n\nResult\n------\nIt is now possible to easily run merge statements using the nice\nbuilder API.\n\nChange-Id: I7b895b067382231214146f50d31be432126d9776\nReviewed-on: http://review.couchbase.org/58156\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Merge.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeDeleteElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeInsertElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeDeletePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeDeleteWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeInsertWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeKeyClausePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeSourcePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdatePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeDeletePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeDeleteWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeInsertWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeKeyClausePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeSourcePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdatePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateWherePath.java","src/test/java/com/couchbase/client/java/query/dsl/MergeDslTest.java"],"date":1451467489000,"numberOfModifiedFiles":26},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"571d2537b0e00d8d0021846044b5c376c746eeb4","msg":"Prepare client version 2.2.3\n\nChange-Id: I633b4fea1bb1b78ab15dfea87fa1ca14ca18a413\nReviewed-on: http://review.couchbase.org/58204\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1451903967000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ed15332b5bd07f2890004a4d7bf7c8763603d1b6","msg":"JCBC-757: Element Builder cleanup and test fixes.\n\nMotivation\n----------\nThis changeset adds missing license headers and sets the right\nannotations for the dsl/element namespace. It also fixes some\ndml tests to use the right identifier syntax.\n\nChange-Id: I16055ed6f8572c00e0f0c970c40af7908fc73078\nReviewed-on: http://review.couchbase.org/58205\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/element/AsElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/BuildIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/Element.java","src/main/java/com/couchbase/client/java/query/dsl/element/FromElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/GroupByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/HavingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/HintIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertSelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertValueElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/JoinElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/KeysElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LettingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LimitElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeDeleteElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeInsertElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/NestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OffsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OnElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OrderByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/ReturningElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/SelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/SetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnionElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnnestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UsingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WhereElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WithIndexOptionElement.java","src/test/java/com/couchbase/client/java/query/dsl/DeleteDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/InsertAndUpsertDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/MergeDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/UpdateDslTest.java"],"date":1451905610000,"numberOfModifiedFiles":34},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"839d014c7eeac33d28b23e22422033eb49bb8585","msg":"Prepare release 2.2.3\n\nChange-Id: Iccba6857088294c6f1f4efe683c9cbae3d6dabb3\nReviewed-on: http://review.couchbase.org/58251\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1451988347000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"47c8c3e8190a299bc9d86de7dacc437d0f9bc6fa","msg":"Start development of 2.2.4\n\nChange-Id: Ic02e68133b106d00237f88ae064144d93d67549a\nReviewed-on: http://review.couchbase.org/58316\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1452095125000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3fc6a62fd89c15dcc9f392593cf56020fb1ddc3a","msg":"JCBC-849: Subdocument client API\n\nMotivation:\n-----------\nSubdocument API allows to mutate and read specific fragments of JSON\ninside an existing document without having to transfer the whole\ndocument over the wire.\n\nModifications:\n--------------\nAdded the DocumentFragment class, both serving as an input parameter\nfor mutation and a return parameter. Additionally to what would be\navailable in a top-level Document, it also bears a path (pointing to a\nspecific value inside the JSON).\n\nAdded Bucket level API for Subdoc:\n - simple operations (getIn, existIn, insertIn, replaceIn, upsertIn,\n   removeIn)\n - array operations (extendIn, arrayInsertIn, addUniqueIn)\n - arithmetic operation (counterIn)\n - multiple lookups (lookupIn)\n - multiple mutations (mutateIn)\n\nMulti operations have their own return types.\n\nAdded associated exceptions as subclasses of SubDocumentException.\n\nA dedicated interface for transcoding in subdoc (FragmentTranscoder)\nhas been added. A default implementation, JacksonFragmentTranscoder, is\nbased on Jackson and shares code with JsonTranscoder, so this code was\nmutualized into TranscoderUtils.\nThis default cannot be customized for now but could be in the future.\n\nResult:\n-------\nThe subdoc API can be used for efficient modification of JSON documents.\nIntegration tests validate the behavior of the API on cluster \u003e\u003d 4.5.0.\n\nChange-Id: Ifce305713329f0d63073fab3012129211e4c41f6\nReviewed-on: http://review.couchbase.org/58223\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/document/subdoc/ExtendDirection.java","src/main/java/com/couchbase/client/java/document/subdoc/LookupResult.java","src/main/java/com/couchbase/client/java/document/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/document/subdoc/MultiLookupResult.java","src/main/java/com/couchbase/client/java/document/subdoc/MultiMutationResult.java","src/main/java/com/couchbase/client/java/document/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/error/subdoc/CannotInsertValueException.java","src/main/java/com/couchbase/client/java/error/subdoc/DeltaTooBigException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentNotJsonException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/MultiMutationException.java","src/main/java/com/couchbase/client/java/error/subdoc/NumberTooBigException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathExistsException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathInvalidException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathMismatchException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathNotFoundException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/SubDocumentException.java","src/main/java/com/couchbase/client/java/error/subdoc/ValueTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/ZeroDeltaException.java","src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/FragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoder.java","src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java"],"date":1451932046000,"numberOfModifiedFiles":32},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b6110a92eaf82803b19a32193a2a1c6c46b72c6d","msg":"JCBC-903: Fix CouchbaseFeature version 3.5 -\u003e 4.0\n\nMotivation:\n-----------\nThere is no Couchbase Server version 3.5.0, and N1QL and Spatial View\nappeared in 4.0.0.\n\nModifications:\n--------------\nReplaced 3.5.0 with 4.0.0 in relevant CouchbaseFeatures.\n\nChange-Id: Idbec2295fbd751007403b2731e2fa55fbd7eea05\nReviewed-on: http://review.couchbase.org/58892\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java"],"date":1453394099000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4318a4ed1bf669150807e8f077f32b8de6dbec11","msg":"JCBC-904: Override socketConnectTimeout in builder\n\nMotivation:\n-----------\nDefaultCouchbaseEnvironment\u0027s Builder doesn\u0027t override its parent\u0027s\nsocketConnectTimeout method, breaking the capability of fluently\nbuilding the environment as soon as it is used.\n\nModifications:\n--------------\nAdded socketConnectTimeout override in the CouchbaseEnvironment Builder.\n\nResult:\n-------\nCouchbaseEnvironment can be fluently built even when using the socket\ntimeout.\n\nChange-Id: I7a06ef027310711a4741728bc255861cfa769964\nReviewed-on: http://review.couchbase.org/58891\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1453393907000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5268f792f933a8d4fce37168705d4d0967b1f265","msg":"JCBC-909: Add toString for LookupSpec/MutationSpec\n\nMotivation\n----------\nWhen getting results from a multi-operation in subdoc, users will\nprobably want to output the specification next to the result at some\npoint. This is not made easy by the fact that the specs have no proper\ntoString method.\n\nModifications\n-------------\nAdded short toString implementation for both multi specs.\nFormat is \"{COMMAND:path}\".\n\nMutationSpec doesn\u0027t output the fragment value, as it could be large,\nbut suffixes the COMMAND with \", createParents\" if this option is\nactivated on the mutation.\n\nResult\n------\nA LookupSpec or a MutationSpec can be used in an output now that their\ntoString method is implemented.\n\nChange-Id: I3b2c97a4ef2906412686a36bf2ddd0c4cfd2ba00\nReviewed-on: http://review.couchbase.org/59133\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/document/subdoc/MutationSpec.java","src/test/java/com/couchbase/client/java/document/SubDocumentTest.java"],"date":1453891600000,"numberOfModifiedFiles":3},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d49a42cee12ab6b67cede6039cfff1aed2722727","msg":"JCBC-850: Initial API for Full Text.\n\nMotivation\n----------\nThe Couchbase Server \"Watson\" release will add support for\nfull text indexing. As a result, the SDKs need to provide\nfirst-class APIs to make it possible to easily query those\nindexes.\n\nModifications\n-------------\nThis changeset introduces a highly experimental API for\nCBFT that is subject to change, but will provide users\na straightforward way to try it out and give feedback\nin the developer preview and beta timeframe.\n\nResult\n------\nFirst experimental CBFT API.\n\nChange-Id: I601be9ad35abb2966fe38dc1a2dce413c9c94345\nReviewed-on: http://review.couchbase.org/55845\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/search/SearchControl.java","src/main/java/com/couchbase/client/java/search/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/query/BooleanQuery.java","src/main/java/com/couchbase/client/java/search/query/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/DateRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/FuzzyQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchQuery.java","src/main/java/com/couchbase/client/java/search/query/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/PhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/PrefixQuery.java","src/main/java/com/couchbase/client/java/search/query/RegexpQuery.java","src/main/java/com/couchbase/client/java/search/query/SearchQuery.java","src/main/java/com/couchbase/client/java/search/query/StringQuery.java","src/main/java/com/couchbase/client/java/search/query/TermQuery.java","src/main/java/com/couchbase/client/java/search/query/WildcardQuery.java"],"date":1444161445000,"numberOfModifiedFiles":32},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"91ce16bd9ab846964d9fd13866a98263086acfda","msg":"JCBC-869: Store N1QL raw bytes, deserialize lazily\n\nMotivation:\n-----------\nSome users don\u0027t want a N1QL row value as a JsonObject but would rather\nprefer to deserialize it themselves (perhaps directly to a domain object\nof theirs).\n\nModifications:\n--------------\nN1qlQueryRow and AsyncN1qlQueryRow now both take the raw byte[] at\nconstruction.\n\nvalue() will lazily invoke the objectMapper from JacksonTransformers\non the raw byte[] to convert it to a JsonObject, so that never calling\nvalue() nor toString() but byteValue() instead will never perform JSON\ndeserialization, allowing users to do that themselves (and probably\nsaving them a few ms).\n\nResult:\n-------\nCustom deserialization of a N1QL row value can be done without paying\nthe overhead of JsonObject deserialization + toString.\n\nChange-Id: Ie072d459ce89373ab8614264fcca9e09959f541d\nReviewed-on: http://review.couchbase.org/59037\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/N1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java"],"date":1453740494000,"numberOfModifiedFiles":8},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b7b7cfa1817fa9bbc11dc97048a94738236e68c9","msg":"Disable Subdoc multi-mutate support\n\nMotivation:\n-----------\nThe protocol for multiple mutations is likely to change before a DP\nversion of the server is released, so offering support for it is too\nearly.\n\nModifications:\n--------------\nMade classes and code related to multi mutation requests/responses not\npublic and/or commented. The API mutateIn has been commented out.\n\nResult:\n-------\nSingle subdoc operations and multi lookups are still available as\nexperimental, but multi-mutation is not.\n\nChange-Id: I7c37b885ac16ca584c5a2629a681c25230119992\nReviewed-on: http://review.couchbase.org/59251\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1454066314000,"numberOfModifiedFiles":5},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"66c02d1a9cd8a82b4346242ed40dd8bef086f695","msg":"JCBC-914: Remove String.join\n\njoin is available only from java 8, so using just append\n\nChange-Id: Idd432bb1ff3328b6567e88c7d155e36038ad2c19\nReviewed-on: http://review.couchbase.org/59291\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/SearchQueryRow.java"],"date":1454103998000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3b5f40a0ad5430b78c72b6533f89c336668031b3","msg":"JVMCBC-286: Enforce usage of Java 6 APIs only\n\nMotivation:\n-----------\nWhen developing against a recent JDK, it\u0027s not sufficient to just set\nthe targetVersion to 1.6, as the compiler will happily produce Java 6\nbytecode that uses APIs introduced in a more recent version (eg Java 8).\nThis results in code that can\u0027t run on a Java 6 JRE.\n\nThe Animal-Sniffer tool has a Maven integration that allows to check for\nsuch bad usage and prevent the build process to finish.\n\nModifications:\n--------------\nUsed Animal-Sniffer Maven plugin to enforce correct usage of JDK 6 APIs\nonly, executed during compile phase.\n\nResult:\n-------\nUsing a too new API when developing against a recent JDK will be\ndetected when using Maven to build, and refused.\n\nChange-Id: I4fca83105e8cdd9a5c0e8031b20543711a437221\nReviewed-on: http://review.couchbase.org/59342\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1454336353000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f01f8ff9e5f7a9c0565a56c0f926dd347fbcd35d","msg":"Prepare 2.2.4 Release\n\nChange-Id: I38d0822d3817e148516de0a6e9b770df4216b9d2\nReviewed-on: http://review.couchbase.org/59451\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1454489690000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d556ad8fc354de050f66af465ce764c920d0c19e","msg":"Start development of 2.2.5\n\nChange-Id: I0b4d04f770692345571fe627f4966122dafbf757\nReviewed-on: http://review.couchbase.org/59508\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1454595082000,"numberOfModifiedFiles":1},{"authorName":"Intae Kim","authorEmail":"greatkit@gmail.com","authorTimeZone":"GMT+09:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cb6097de716752215959377f6a0618d747d664c7","msg":"JCBC-910: Add includeDocs variant to force order of get items\n\nMotivation\n----------\nView query result order can be randomly mixed when includeDocs is true,\nif one of the documents takes longer to be retrieved (because of the\nefficient but unordered flatMap).\n\nSometimes it should be consistent, even if that means a slight overhead\non performance or memory.\n\nModifications\n-------------\nIf includeDocs isn\u0027t used, concatMap can be used instead of flatMap (the\nordering is correct and the impact is negligible).\n\nAdded includeDocsOrdered variants that will enforce the row order. This\nuses the experimental concatMapEager operator that fires all get request\nimmediately (instead of serially with a concatMap) and then buffers out\nof order responses to drain them in correct order as soon as it becomes\npossible.\n\nThis usage is flagged through the \u0027isOrderRetained()\u0027 method.\n\nAdded unit tests that validate this behavior.\n\nResult\n------\nA user can better tune view query result order consistency.\n\nChange-Id: I3ca3998f13d40051297c228aa64661c785e2a5d1\nReviewed-on: http://review.couchbase.org/59250\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1454061702000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cf7537d140440d143e4a6478ee3a5cdb10bc3ed9","msg":"JCBC-918: README fixes: CONTRIBUTING.md link and typo\n\nChange-Id: I20dba8b7f3a4bc09483b9898682988a8136be080\nReviewed-on: http://review.couchbase.org/59557\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1454695661000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cd2a5d1b6e23ffebf5a9ccab8c9d6d935a707ba7","msg":"[temp] adapt to sudboc refactor in core\n\nLookupResult is now renamed MultiResult\u003cLookup\u003e. Adaptation to refactor\npending java-client side API rework.\n\nChange-Id: I127749b93563811403db34d09ccb8d9b75a3d290\nReviewed-on: http://review.couchbase.org/60041\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1455628759000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"943fd19688bd9c47b32f0807abf553968c81096d","msg":"JCBC-804: Implement basic AT_PLUS support.\n\nMotivation\n----------\nCouchbase Server Watson adds an extended feature set for\noptimized \"Read Your Own Wrties\" queries that in some use\ncases performs better than plain queries with REQUEST_PLUS\nconsistency.\n\nSpecifically, providing the mutation results which contains\nthe mutation token allows to grab a lower bound for sequence\nnumbers on the server side, avoiding to wait until the indexer\nhas caught up with the latest seqno on all vbuckets.\n\nModifications\n-------------\nThis changeset implements the majority use case for AT_PLUS\nsupport as specified by the SDK-RFC spec (no 4).\n\nIt implements it for both Document and DocumentFragment when\nit is passed in with the MutationToken set. Both other use\ncases (Bucket only as well as only doc id) warrant larger\nchanges in the core and will be implemented in separate\nchangesets.\n\nResult\n------\nOptimized RYOW support based on AT_PLUS and mutation tokens\nis usable.\n\nChange-Id: Iedc14746dcc5c254c6fdc1845c423e6dc719cbe0\nReviewed-on: http://review.couchbase.org/57844\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java"],"date":1450251905000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"175fadce1c20f13fc74be011416e3e67092a9259","msg":"JCBC-804: Bring AT_PLUS in line with the latest RFC changes.\n\nMotivation\n----------\nThe latest RFC simplifies the proposal by reducing some of the\nfeature set for the first iteration. Since those concepts were\nnot implemented yet, the actual java implementation also got\nsimplified and streamlined.\n\nModifications\n-------------\nMethod signatures updated and internal data structures and\nprocessing simplified as well.\n\nNote that the unique seqno match has been updated and is now\ndone when the tokens are inserted, rather than when it is\nprocessed. This also optimizes for the case where only ever\non token is passed in.\n\nResult\n------\nJava code in line with the latest RFC iteration.\n\nChange-Id: Ie74d3b812c72ffb2fee982879b6325964ded5f3f\nReviewed-on: http://review.couchbase.org/60243\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java"],"date":1455873904000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0b8b1c05d61ad68dad70811cd90d8fc751d8f90f","msg":"JCBC-906: Index Management experimental API second iteration\n\nMotivation:\n-----------\nAfter the first experimental API implementation in JCBC-777, an SDK RFC\nwas created and a few elements received feedback, hence this second\niteration.\n\nModifications:\n--------------\nNew specific exceptions have been added for case where index creation is\nattempted on already existing index, and where drop of an index that\ndoesn\u0027t exist is attempted.\n\nThe watchIndex method has been removed in favor of just using the\nmore generic watchIndexes with a single parameter.\n\nChange-Id: I3cf087f4b60d4a22b766a12092737bafb8a610c4\nReviewed-on: http://review.couchbase.org/58893\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/error/IndexAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/IndexDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java"],"date":1453400868000,"numberOfModifiedFiles":8},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8ccf14088a27669ff29852cf88cd37b2eb471611","msg":"JCBC-921: Implement builder-based API for subdoc\n\nMotivation:\n-----------\nThe common SDK API that was agreed upon for the sub-document feature is\none based on builders. This allows you to fluently describe what lookups\nor mutations you want to perform, and the single operation cases can\nstill be optimized at execution by choosing the right single message to\nsend to the server.\n\nModifications:\n--------------\nSubdoc API at the bucket level is limited to two methods that just take\nthe key of the document to target: lookupIn and mutateIn. These each\nreturn an adequate builder that can be used to describe either the\nlookups or mutations to be performed.\n\nLookupInBuilder uses AsyncLookupInBuilder under the cover, and similarly\nMutateInBuilder blocks on AsyncMutateInBuilder. In order to trigger the\noperations, one must call doLookup() or doMutate() on the builders.\n\nExtendDirection has been removed (builder methods are separated for the\ntwo directions).\n\nAll results are represented as a DocumentFragment, that allows to get\na result by index or path of the original operation. If a lookup wasn\u0027t\nsuccessful, calling content() on its path or index will throw the\nexception that corresponds to the error.\n\nMost of the subdoc code now is contained in the two async builders and\ntests have been updated for the new API.\n\nResult:\n-------\nSubdocument lookups and mutations can easily be expressed through a\nbuilder-based API.\n\nThe API is extensively tested with integration tests.\n\nChange-Id: I0038af9b543464832a15cd204dad20c83ab745eb\nReviewed-on: http://review.couchbase.org/60201\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/document/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/document/subdoc/ExtendDirection.java","src/main/java/com/couchbase/client/java/document/subdoc/LookupResult.java","src/main/java/com/couchbase/client/java/document/subdoc/MultiLookupResult.java","src/main/java/com/couchbase/client/java/document/subdoc/MultiMutationResult.java","src/main/java/com/couchbase/client/java/document/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/error/subdoc/BadDeltaException.java","src/main/java/com/couchbase/client/java/error/subdoc/MultiMutationException.java","src/main/java/com/couchbase/client/java/error/subdoc/NumberTooBigException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathExistsException.java","src/main/java/com/couchbase/client/java/error/subdoc/SubDocumentException.java","src/main/java/com/couchbase/client/java/error/subdoc/ZeroDeltaException.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOperationResult.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/FragmentTranscoder.java","src/test/java/com/couchbase/client/java/document/SubDocumentTest.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java"],"date":1455706606000,"numberOfModifiedFiles":31},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0c6149d4ef003d6a023b2059bbe80c0ce6ec683b","msg":"JCBC-921: Fix merge of at_plus, adapt to subdoc change\n\nThis fixes compilation of at_plus N1qlParams after the merge of both\nchanges (subdoc builder API and at_plus support).\n\nChange-Id: I89f360ba49269b515d71c103f665073ea47e1a82\nReviewed-on: http://review.couchbase.org/60548\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/N1qlParams.java"],"date":1456485293000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8ea15eea7dd91daccb474d36c2160b14a28cc7e5","msg":"Prepare 2.2.5 Release\n\nChange-Id: Ia86845af18407654f35a810f488ae6d14754f511\nReviewed-on: http://review.couchbase.org/60696\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1456827653000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eee8d695f1a983e41bc5d102e226b0d1b90e78fd","msg":"Start Development on 2.2.6\n\nChange-Id: Iec2c97adc81652df07203b6cd1b0fa751f5339f4\nReviewed-on: http://review.couchbase.org/60700\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1456828927000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c1e2a87557587d9f14374e7db7954b3db77358e8","msg":"Override CoreEnvironment Builders from core-io.\n\nChange-Id: I11989d1b48a6a614b06d85326cc7e8f4429e450f\nReviewed-on: http://review.couchbase.org/61226\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1457609926000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"234741c9bef163a483c7ca892fb26bfed9b7d3aa","msg":"JCBC-925: N1QL helper to build updateFor clause\n\nMotivation:\n-----------\nWhen doing an UPDATE, in the set you can provide an \"update-for\" clause\nthat looks like FOR variable IN path WHEN condition END. The current DSL\nallows to provide that as a single Expression, leaving the user puzzled\nabout the exact syntax.\n\nModifications:\n--------------\nA new category of helpers is introduced in the dsl.clause package. In\nthis case, a UpdateForClause is provided that allows to guide the user\nin constructing the proper update-for Expression.\n\nAdded unit tests for the builder in UpdateDslTest.\n\nResult:\n-------\nUser can now be guided by the API in constructing the updateFor clause.\n\nChange-Id: Idf02e0744e32153440e0652c6e5c3b69c86ee5dd\nReviewed-on: http://review.couchbase.org/60922\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/clause/UpdateForClause.java","src/main/java/com/couchbase/client/java/query/dsl/clause/package-info.java","src/main/java/com/couchbase/client/java/query/dsl/functions/package-info.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateSetOrUnsetPath.java","src/test/java/com/couchbase/client/java/query/dsl/UpdateDslTest.java"],"date":1457088007000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fb93716717d9941afc8cb4a3648ea93b15a80c1f","msg":"JCBC-928: Allow custom primary name in Index DSL\n\nMotivation:\n-----------\nIn N1QL, additional primary indexes can be constructed by giving them a\nname. Dropping such indexes is done via the same syntax as dropping a\nsecondary index: \"DROP INDEX namespace.name\".\n\nModifications:\n--------------\nThe Index DSL has been augmented to allow creating and dropping of such\ncustom-named indexes. For dropping, a new method name was necessary due\nto colliding signatures, so \"dropCustomPrimaryIndex\" was chosen.\n\nResult:\n-------\nCustom primary indexes can now be dealt with with the Index DSL.\n\nChange-Id: I0a3ad3c69f235325756f1d9b2e7dba89a7461186\nReviewed-on: http://review.couchbase.org/61423\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Index.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/CreateIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultCreateIndexPath.java","src/test/java/com/couchbase/client/java/query/dsl/IndexDslTest.java"],"date":1457955624000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0a80462de6e94c71197743f2c7709a3665272e91","msg":"JCBC-926: Index management of named primary indexes\n\nMotivation:\n-----------\nSince the Index DSL allows creation and drop of custom named primary\nindexes, the Index Management API can also offer to deal with this.\n\nModifications:\n--------------\nBucketManager and async version now have 2 additional methods which take\nan index name for a primary index: createNamedPrimaryIndex and its drop\ncounterpart dropNamedPrimaryIndex. This allows for creation of several\nprimary indexes.\n\nResults:\n--------\nNamed primary indexes can be dealt with in the Index Management API.\n\nChange-Id: Iec77e6d47b6d3c35199bb1e343f9591b1023f86f\nReviewed-on: http://review.couchbase.org/61426\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java"],"date":1457963118000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"86f153ffcdc11d95e5d7c052e4cd2a53743e067d","msg":"JCBC-935: Avoid key encoding for length check.\n\nMotivation\n----------\nThe AbstractDocument grabs the bytes() of the incoming document ID\nand checks if more than 250 bytes are stored and if so will raise\nan error. This is problematic for two reasons:\n\n - It is using getBytes() which does not use UTF-8 like the underlying\n   logic in core-io, so it is not 100% accurate.\n - The same check is already performed in core-io.\n\nModifications\n-------------\nThe code now just uses String#length() for a quick sanity check and\nrelies on core-io for exact boundary checks on edge cases. This reduces\ngarbage created and avoids the intensive work of encoding a document\nID just for the sake of checking how long it is.\n\nResult\n------\nLess work and GC, but more or less the same effect. Exact checks\nare performed in the KeyValueLocator in core-io anyways.\n\nChange-Id: Ifdd94521a891d313d9982830c0e4e7c3325e2c1d\nReviewed-on: http://review.couchbase.org/61569\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/AbstractDocument.java"],"date":1458134539000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"85a55e274b12854c6fa8badf65ad51b1bf598764","msg":"JCBC-937: Size hint for JsonObject and JsonArray\n\nMotivation\n----------\nIf we know how large the final JsonObject or JsonArray will be,\nit makes sense to initialize the internal Map or List already\nwith the target size to avoid excessive resizing.\n\nModifications\n-------------\nAdd new private constructors with explicit size hint and apply\nit if possible in both the array and the object.\n\nResult\n------\nLess resizing needed of the internal map if the size can be\nestimated upfront.\n\nChange-Id: Ia74739c9bde475599e210b660e8ff8833509042e\nReviewed-on: http://review.couchbase.org/61570\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java"],"date":1458135997000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aac88e2753e6344ab599d611892cc02e3204a5e9","msg":"JCBC-936: Index management only cares about GSI\n\nMotivation:\n-----------\nThe index management API was designed to work only on GSI indexes. It is\nimportant to ensure that a simple name allows unique identification of\nan index within this API. Currently it is not made explicit in javadoc\nand `listIndexes` can also return VIEW type indexes.\n\nModifications:\n--------------\nJavadoc has been improved to mention that the API only ever deals with\nGSI type indexes.\n\nListIndexes has been updated to only consider GSI indexes, and the tests\nhave been updated accordingly.\n\nResults:\n--------\nAll methods in the Index Management API only deal with GSI, and this has\nbeen made clearer in the documentation.\n\nIf in the future a listIndexes variant that lists also VIEW indexes is\nneeded, we can easily add that.\n\nChange-Id: I9d4e2d43f6296e305881759a16149ecb27130041\nReviewed-on: http://review.couchbase.org/61582\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java"],"date":1458148968000,"numberOfModifiedFiles":4},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e4ca4da8b983a7b33d1c5f08a68196629d8aa547","msg":"JCBC-931: Rework subdoc error/rename array methods\n\nMotivation:\n-----------\nThird iteration of the Subdocument RFC introduces changes in how\nerrors should be handled, particularly changing a few errors and\nassociated server returned codes for counter.\n\nIt also clarifies that, even for a single spec, mutation builder\nexecution should always throw a MultiMutationException in case of\na subdocument-level error.\n\nFinally, it renames pushFront/pushBack/addUnique to arrayPrepend,\narrayAppend and arrayAddUnique respectively.\n\nModifications:\n--------------\nAsyncMutateInBuilder has been modified to reflect the changes\nabove.\nthe MutateInBuilder as well as the tests have been adapted.\n\nResults:\n--------\nBetter coherence of the implementation with the SDK RFC\u0027s third\niteration.\n\nChange-Id: I62f8e81065529872457f0976a5e371570909e621\nReviewed-on: http://review.couchbase.org/61651\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/error/subdoc/BadDeltaException.java","src/main/java/com/couchbase/client/java/error/subdoc/CannotInsertValueException.java","src/main/java/com/couchbase/client/java/error/subdoc/ZeroDeltaException.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java"],"date":1458230062000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"62aadf9ad755632151f2451b0002c020b380ccc0","msg":"JCBC-875: retrybuilder advanced error predicate + doOnRetry\n\nMotivation:\n-----------\nWhen using the RetryBuilder, one can have an even more complex check to\nperform on the exception do determine if it should be retried or not.\nCurrently the only possible check is on the exception type, but not its\ncontent (eg. message, or special fields in the exception).\n\nSimilarly, sometimes one wants to perform a side-effect action when the\nretry occurs, and this is not possible in the current implementation.\n\nModification:\n-------------\nAdded two features to the RetryBuilder:\n\n * one can construct the builder based on a Func1\u003cThrowable, Boolean\u003e\n   predicate, that will allow to tell if the error should trigger a\n   retry, allowing inspection of the whole error.\n * added a doOnRetry() method that gets notified every time a retry is\n   scheduled with: the retry attempt number, the exception triggering\n   the retry, the scheduled delay (duration and unit) after which the\n   retry will occur.\n\nThe signature for the doOnRetry, a specialized Func4, can be simplified\nusing the RetryBuilder.OnRetryAction interface.\n\nResults:\n--------\nRetryBuilder gives even more control on when to retry, and allows you to\nadd side-effects to each retry attempt.\n\nChange-Id: Idecf6403a5bfa5896a682422a2636c10d0fa3e2d\nReviewed-on: http://review.couchbase.org/60562\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java","src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java","src/test/java/com/couchbase/client/java/util/retry/RetryBuilderTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWithDelayHandlerTest.java"],"date":1456416183000,"numberOfModifiedFiles":4},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a3bc61b5f4ecb3e0c763c4e7a3f8f8eeceae5da0","msg":"JVMCBC-315: Use double for ack threshold in Builder\n\nChange-Id: I8051f8cd6af442bfa1483fb8caa5ae59a8f6b9a2\nReviewed-on: http://review.couchbase.org/61924\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1458815694000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8d6d43ca25237684491eb3842114d3ea8a3f23cc","msg":"JCBC-938: Multi values in array mutations\n\n(this is still an in-design part of RFC-002, subdoc API)\n\nMotivation:\n-----------\nRFC-002 introduces the possibility to insert multiple values at once in\nan existing array. This is the implementation of this part of the RFC.\n\nModifications:\n--------------\nA new internal type, MultiValue, is introduced to facilitate the special\nencoding needed for multi-valued array mutations.\n\nFragmentTranscoder now has two abstract methods: one is the classic\nencoding path, the other is the MultiValue encoding path.\n\n3 new specs have been added to the subdoc builders: arrayPrependAll,\narrayAppendAll and arrayInsertAll. Each of these takes a Collection of\nvalues. A convenience alternative signature using varargs is also\noffered for each (but doesn\u0027t offer the createParents parameter).\n\nThe different naming (xxxAll suffix) allows to disambiguate some edge\ncases relative to varargs for the compiler. It is also close to the java\ncollections idiom.\n\nResults:\n--------\nMulti-valued inserts are now possible in the Java subdoc API, using\neither a Collection or a vararg enumeration. Tests have been adapted.\n\nChange-Id: I2d3ab0abba64493c12a1d09bb5033155c21d9345\nReviewed-on: http://review.couchbase.org/61712\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Mark Nunberg \u003cmark.nunberg@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MultiValue.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/AbstractFragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/FragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoder.java","src/test/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoderTest.java"],"date":1458309548000,"numberOfModifiedFiles":8},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1ed00a0f461a6fc9ba561843014239738991a31a","msg":"JCBC-940: Rename subdoc builder doXXX methods to execute()\n\nMotivation:\n-----------\nThe original RFC method name for execution of a builder is do(). This is\nincompatible eg. with Java, being a keyword. Most other SDKs where this\nis also incompatible elected to name the method execute() instead.\n\nSince it is expected that the RFC be amended towards renaming execute(),\nthe java naming of doMutate() and doLookup() can be harmonized with the\nother SDKs.\n\nModifications:\n--------------\ndoMutate() and doLookup() are now all renamed execute().\n\nResults:\n--------\nThe execution methods of the builders are the same across SDKs where do\ncannot be a method name.\n\nChange-Id: Ic8031efa2dd5a0c3280091b4675ea64aea034a15\nReviewed-on: http://review.couchbase.org/62119\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/error/subdoc/MultiMutationException.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java"],"date":1458833820000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"022957014af203d2edea680df95768daabf6b662","msg":"Bump core-io to 1.2.7-SNAPSHOT\n\nChange-Id: Ibe51662983c5ca1f46710ab8796f3712d61dc0ed\nReviewed-on: http://review.couchbase.org/62278\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1459493916000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"725a716dc5cc362f67aa376bb539bd03f217d37c","msg":"JCBC-926: Drop the named prefix in primary index management\n\nMotivation:\n-----------\nMethod to deal with named primary indexes in previous JCBC-926 change\nhad the \"Named\" prefix (eg. createNamedPrimaryIndex), which is redundant\nand can be dropped (these methods then becoming simple overloads of the\nexisting xxxPrimaryIndex methods).\n\nModification:\n-------------\nRenamed createNamedPrimaryIndex methods to createPrimaryIndex (overload)\nand dropNamedPrimaryIndex to dropPrimaryIndex.\n\nResults:\n--------\nDealing with default-named or custom-named primary indexes is now just\ndone through overloaded methods, simplifying the API.\n\nChange-Id: I7d11a73ed292d7d6a4b22a83008a2ed8548241aa\nReviewed-on: http://review.couchbase.org/62239\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java"],"date":1459432634000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c19a1459e557d32d15a658892143cce56c8820a1","msg":"JCBC-943: Refactor version information in env\n\nMotivation:\n-----------\nThe various places where the version information can be accessed are\nall displaying the information from the core, not the java-client:\n - packageNameAndVersion\n - userAgent\n - toString\n\nFurthermore, there is no way of just getting the version number, or\neven the git-generated build number. These two methods have been added\nto the core and the same could be done for the client.\n\nModifications:\n--------------\nAdded clientVersion() and clientBuild() methods to get these specific\nversion number relative to the java-client.\n\nModified the construction of SDK_PACKAGE_NAME_AND_VERSION so that it\ntakes information relative to the java-client, not the core. It also\nnow includes the git version of the core.\n\nStopped shadowing USER_AGENT from core and instead defined a specific\nstatic SDK_USER_AGENT. Made sure both SDK_xxx are used as default in the\nbuilder, but the builder still allows to redefine them.\nThis ensures that the toString method reflects the package name and\nversion of the java-client.\n\nAdded tests around these methods.\n\nResults:\n--------\nMuch better availability of version information in the environment, both\nconcerning java-client and core-io layers.\n\nChange-Id: I75e7a923864be2d36276bad91a67247bdd7b2a11\nReviewed-on: http://review.couchbase.org/62293\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java"],"date":1459519911000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"529516f82840a9d827806dc41b76c22ac2a3ee7c","msg":"JCBC-946: Escape n1ql PREPARE\u0027s name when used\n\nMotivation\n----------\nWhen a PREPARE statement is issued with a specific name, said name\nshould be escaped in case it is a N1QL keyword or contains minuses...\n\nModifications\n-------------\nPREPARE name is escaped in PrepareStatement.\n\nChange-Id: I1b20e1f197b020ea6af164e226cee17977a4f7fe\nReviewed-on: http://review.couchbase.org/62357\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/PrepareStatement.java"],"date":1459776524000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ab0be30c69e2935d9d340c688fc16bfe479941a0","msg":"JCBC-948: Only check for error name in prepared retry\n\nMotivation\n----------\nFor prepared statements, part of the current retry process involves\nchecking for the content of an error message in case of error code 5000.\n\nThe message in its entirety is checked, but the message phrasing could\nchange in the future. There\u0027s however an error name in there that is\nguaranteed by the query team not to change, so it can be checked instead\nof the whole message phrase.\n\nModifications\n-------------\nDuring prepared statement retries, only the \"queryport.indexNotFound\"\npart of the string is now checked.\n\nResult\n------\nBetter future-proofness of the \"should we retry that prepared statement\"\ncheck.\n\nChange-Id: Id08b8ef78e1e287734ba567f149bfa2b144f4f38\nReviewed-on: http://review.couchbase.org/62358\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1459776679000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3ccb49837fd88c38cae9749108208f042de5ccc2","msg":"JCBC-947: Close testcontext bucket before deleting it\n\nMotivation\n----------\nNot closing an adhoc Bucket before deleting it at the end of a test run\ncan lead to authentication errors logs, especially starting with 4.5.\n\nModifications\n-------------\nCouchbaseTestContext\u0027s destroyBucketAndDisconnect method now also\ncloses the bucket before triggering its deletion (if adhoc).\n\nResult\n------\nLess false positive errors in test logs.\n\nChange-Id: Icceb5d59b481d01388963edf56d9ddb167b9cdc8\nReviewed-on: http://review.couchbase.org/62359\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1459777073000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aa3b27dbfb1561fe669577bfe614ed127123060c","msg":"[fix test] JCBC-946: escaped PREPARE name\n\nChange-Id: I0c548dd68b30c526f7bf7e1cc8f3d41c1cdfbaae\nReviewed-on: http://review.couchbase.org/62360\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java"],"date":1459778206000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"403d1f11de2f7e9ab17c792ec732c2d14e244402","msg":"JCBC-944: Allow bandwidth-optimized N1QL prepared\n\nChange-Id: I0fe0edafd143c7f65db9997f4295b968b9803ab8\nReviewed-on: http://review.couchbase.org/62350\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/query/PreparedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1459778454000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c22ad03755360177ecf8e58a60c79d2dd1b68878","msg":"Prepare 2.2.6 Release\n\nChange-Id: I8dc07cc2d69911fb2e2e74015955ce5cfea53b8a\nReviewed-on: http://review.couchbase.org/62442\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1459868075000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c37e44553caed40b707a29e74c9cbc9729ba2bf5","msg":"Start 2.3.0 Development\n\nChange-Id: Id48831c435300e1ee49b87f8400d07b6dcbad269\nReviewed-on: http://review.couchbase.org/62535\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1460017916000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a1f79faac540db8d16a1e9fb0eb4d47077ac53bc","msg":"JCBC-838: ViewQuery toString is for logging, added toQueryString\n\nMotivation:\n-----------\ntoString shouldn\u0027t usually have special semantics that would prevent\nchanging the representation (as it is more for human consumption, logs,\netc...).\n\nCurrently ViewQuery.toString outputs the parameters that would go into\na GET url, omitting isDevelopment, isIncludeDocs and keys.\n\nModifications:\n--------------\ntoString is now purely about string representation, including the design\ndocument name, the view name, \"dev\" if isDevelopment \u003d\u003d true,\n\"includeDocs\" if isIncludeDocs \u003d\u003d true, as well as the content of keys\nif filled in.\n\nKeys dump will be truncated to 140 characters (since it can grow quite\nlarge in the body) and information about the total length is also\ndisplayed if truncated.\n\nThe former value of toString is now returned by \"toQueryString()\", which\nis used as the GET parameters payload when executing the query.\n\nResult:\n-------\ntoString now displays more information and can be further evolved.\ntoQueryString is used for payload.\n\nChange-Id: Ic30ff590d60a5008fcd4905b4b8526917568529d\nReviewed-on: http://review.couchbase.org/59015\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1453734122000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"127824580c05c88c4c9393576bb004e13e94d23d","msg":"JCBC-952: Add condition, method name prefix to index management\n\nMotivation\n----------\nDuring REVIEW phase for the rfc, some feedback has been raised:\n - The watchIndexes boolean \"includePrimary\" feels clunky and can\n always be replaced by the primary name (default \"#primary\") anyway,\n should probably be removed\n - With FTS coming, having a differenciating prefix in method names\n would help (proposed \"n1ql\" as in createN1qlIndex,\n dropN1qlPrimaryIndex...)\n - The createN1qlIndex method should allow for a form of Expression to\n be given in order to specify a WHERE clause for the index.\n - IndexInfo should therefore have a String condition() method that\n shows the where clause, or empty string if none.\n\nModifications\n-------------\nAll the above suggestion have been implemented. Convenience createIndex\nmethods (the ones taking a vararg) don\u0027t allow to set a condition.\nIntegration tests have been updated.\n\nResult\n------\nIndex Management API is more complete and now allows to deal with\nconditional indexes.\n\nChange-Id: I5ab9cc7e047a30156a07796c2afc7ec67e3fb825\nReviewed-on: http://review.couchbase.org/63526\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/error/IndexAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/IndexDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java","src/main/java/com/couchbase/client/java/query/util/IndexInfo.java"],"date":1461918300000,"numberOfModifiedFiles":9},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"71f2b4bbe5e5cea4cdcaf4a0373bb527687497a6","msg":"[fix test] Adapt some tests to Watson changes\n\nChange-Id: I29f83f4d15cdd82599f1c61efea09e66a9840bd3\nReviewed-on: http://review.couchbase.org/63533\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java"],"date":1461926423000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"975b5122f3ff6ec339963a0ab2fbd92371fce3e9","msg":"JCBC-953: Implement MutationState for AT_PLUS querying.\n\nMotivation\n----------\nThis changeset brings the java-client implementation on par with the\nRFC on AT_PLUS querying. It implements the MutationState class which\nrepresents an aggregate of one or more MutationTokens and exposes it\nas another option on N1qlParams.\n\nModifications\n-------------\nThe following changes have been made over the previous AT_PLUS\nimplementation:\n\n  - All the marshalling/exporting of tokens has been moved into the\n    MutationState class.\n  - The N1qlParams now use the MutationState class marshalling when\n    preparing the N1QL query options.\n  - Tests have been added for the MutationState class.\n\nResult\n------\nCompliance with the AT_PLUS RFC and more centralized handling of\nmany mutation tokens.\n\nChange-Id: I2c6830baed75e17b278e4effbbe0ae54d63322e6\nReviewed-on: http://review.couchbase.org/63621\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/MutationState.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/MutationStateTest.java"],"date":1462268886000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"11791f7ab0e30c6522488aacb54401d102c9f816","msg":"JCBC-953: Add support for MutationState import.\n\nMotivation\n----------\nSince exporting is supported, importing also needs to be supported.\n\nModifications\n-------------\nThis changeset implements import from both raw json string as well\nas our JsonObject. Equality has been implemented but the MutationState\nchecks if the elements are contained (since ordering is not important\nand can lead to false negatives on the equality checks).\n\nResult\n------\nSerialized MutationState can now be turned into actual objects and\nthen used when querying.\n\nChange-Id: I0774962a3091c819603ffcbe7d7ed840ba20ea4a\nReviewed-on: http://review.couchbase.org/63628\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/MutationState.java","src/test/java/com/couchbase/client/java/MutationStateTest.java"],"date":1462277159000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6d3e7493130ae1491d23be24f3bbbe13b9b965b1","msg":"JVMCBC-255: Remove CouchbaseEnvironment#disconnectTimeout\n\nMotivation\n----------\nThe disconnectTimeout implementation is removed in this changeset\nsince this is now handled directly in the core and we just use the\noverridden implementation.\n\nChange-Id: I1dea32cc60bcc23335f3949071445467ae54cb22\nReviewed-on: http://review.couchbase.org/63849\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1462857780000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"041cc335cb651fbcce884562472da12168ed5154","msg":"JVMCBC-271: Remove queryEnabled from core builder overrides.\n\nMotivation\n----------\nqueryEnabled and queryPort have been deprecated for quite some time and are\nnow removed, since they are not needed anymore. This changeset removes the\nbuilder overrides, since the other pieces have been removed in core-io.\n\nChange-Id: I64eb3c90e1fbdf294f9927ca96cbe90a5349fc23\nReviewed-on: http://review.couchbase.org/63851\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1462859808000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"84dfa5fb5a450d58760f5596454e9bf1edacf0a7","msg":"Override Builder methods from core-io.\n\nChange-Id: If6801d307b2c732880c169fdda972f82fd6d2185\nReviewed-on: http://review.couchbase.org/63854\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1462863097000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e02e2757be50f83d56b1e4e7b1f0e2046973d4f2","msg":"JCBC-954: Remove Expirmental Annotation from Subdoc APIs\n\nMotivation\n----------\nSince Couchbase Server 4.5 GA is around the corner and the subdoc\nAPI has been stabilized, the experimental annotations should be\nremoved to signal the maturity and production grade usage of\nthe feature.\n\nModifications\n-------------\nOn all public APIs the stability changed to committed, on some\nof the internal APIs it changed to uncommitted since we don\u0027t\nneed to be super strict there.\n\nResult\n------\nStable and GA grade subdoc feature - yay!\n\nChange-Id: I658d478049d62cc8bb707bf1b51aeff68f80c862\nReviewed-on: http://review.couchbase.org/63860\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/error/subdoc/BadDeltaException.java","src/main/java/com/couchbase/client/java/error/subdoc/CannotInsertValueException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentNotJsonException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/MultiMutationException.java","src/main/java/com/couchbase/client/java/error/subdoc/NumberTooBigException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathExistsException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathInvalidException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathMismatchException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathNotFoundException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/SubDocumentException.java","src/main/java/com/couchbase/client/java/error/subdoc/ValueTooDeepException.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/subdoc/MultiValue.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOperationResult.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/AbstractFragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/FragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoder.java"],"date":1462873761000,"numberOfModifiedFiles":27},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"95a146dfc052d87c5ae2559551479e6bdda2a563","msg":"JCBC-954: Fix AsyncBucket still having Experimental subdoc\n\nMotivation:\n-----------\nA previous change promoted most of the subdoc API implementation to the\nCommitted level, but forgot to do that in AsyncBucket.\n\nModifications:\n--------------\nPromoted the subdoc methods in AsyncBucket to Committed as well.\n\nChange-Id: I4424a6f662271bbba58b41ae1970b3576e779abb\nReviewed-on: http://review.couchbase.org/63972\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java"],"date":1463057452000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"361753a3ff6534f9a7109ca2c5740665a4a2c16a","msg":"JCBC-956: Change stability level of RetryBuilder + others\n\nMotivation:\n-----------\nRetryBuilder has been an Experimental API for enough time now and can\nbe promoted to Committed.\nN1qlQueryExecutor can also be promoted, to Uncommitted.\nFinally, Blocking having been copied to the core, it should be marked as\ndeprecated.\n\nModifications:\n--------------\nPromoted the APIs, made Blocking deprecated.\n\nChange-Id: I0421debca61726b440ef377b8cf680312d024b75\nReviewed-on: http://review.couchbase.org/63971\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/util/retry/Retry.java","src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java","src/main/java/com/couchbase/client/java/util/retry/RetryWhenFunction.java","src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java"],"date":1463056641000,"numberOfModifiedFiles":6},{"authorName":"Mariusz Kopylec","authorEmail":"mariusz.kopylec@allegrogroup.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5646acbc156281b7c587d50721ce00128405fdc2","msg":"JVMCBC-335: Allow customization of RingBuffer waiting strategy.\n\nMotivation\n----------\nDifferent alternatives are available that can be use to tune the Java client performance.\n\nModifications\n-------------\nOverrided waitStrategy in DefaultCouchbaseEnvironment builder.\nOther modifications: http://review.couchbase.org/#/c/63867/\n\nResult\n------\nAbility to customize the waiting strategy for requests/repsonses on ring buffer.\n\nChange-Id: Ic8cd2008fec865ee868df07a573f45e322e01480\nReviewed-on: http://review.couchbase.org/63974\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1462958510000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0057d2b09513d41c64772b4e26f4297a4563730f","msg":"JCBC-933: FTS, RFC 10 compliant (fts iteration2)\n\nMotivation:\n-----------\nFTS, or Full Text Search, is a new mean of querying Couchbase introduced\nin 4.5.0 as a BETA feature. RFC10 aims at providing support of FTS in\nthe SDKs.\n\nModifications:\n--------------\nAdded a SearchUtils class with ISO 822 to RFC 3339 date conversion.\n\nAdded the FTS query API under package\ncom.couchbase.client.java.fts.SearchParams and at the Bucket level.\n\nResponse parsing is still based on 4.5.0 state of FTS and is not using\na streaming parser, but rather converting the whole response JSON into\nthe SDK\u0027s objects.\n\nAdded AssertJ test dependency for more expressive tests.\n\nResults:\n--------\nRFC 10 is implemented, allowing FTS queries to be made.\n\nChange-Id: I1532ca9af116c00bd3d8fd3c43c6d6859132d287\nReviewed-on: http://review.couchbase.org/62648\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/fts/HighlightStyle.java","src/main/java/com/couchbase/client/java/fts/SearchParams.java","src/main/java/com/couchbase/client/java/fts/SearchQuery.java","src/main/java/com/couchbase/client/java/fts/facet/DateRangeFacet.java","src/main/java/com/couchbase/client/java/fts/facet/NumericRangeFacet.java","src/main/java/com/couchbase/client/java/fts/facet/SearchFacet.java","src/main/java/com/couchbase/client/java/fts/facet/TermFacet.java","src/main/java/com/couchbase/client/java/fts/queries/AbstractCompoundQuery.java","src/main/java/com/couchbase/client/java/fts/queries/AbstractFtsQuery.java","src/main/java/com/couchbase/client/java/fts/queries/BooleanFieldQuery.java","src/main/java/com/couchbase/client/java/fts/queries/BooleanQuery.java","src/main/java/com/couchbase/client/java/fts/queries/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/fts/queries/DateRangeQuery.java","src/main/java/com/couchbase/client/java/fts/queries/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/fts/queries/DocIdQuery.java","src/main/java/com/couchbase/client/java/fts/queries/MatchAllQuery.java","src/main/java/com/couchbase/client/java/fts/queries/MatchNoneQuery.java","src/main/java/com/couchbase/client/java/fts/queries/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/fts/queries/MatchQuery.java","src/main/java/com/couchbase/client/java/fts/queries/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/fts/queries/PhraseQuery.java","src/main/java/com/couchbase/client/java/fts/queries/PrefixQuery.java","src/main/java/com/couchbase/client/java/fts/queries/RegexpQuery.java","src/main/java/com/couchbase/client/java/fts/queries/StringQuery.java","src/main/java/com/couchbase/client/java/fts/queries/TermQuery.java","src/main/java/com/couchbase/client/java/fts/queries/WildcardQuery.java","src/main/java/com/couchbase/client/java/fts/result/AsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/fts/result/SearchMetrics.java","src/main/java/com/couchbase/client/java/fts/result/SearchQueryResult.java","src/main/java/com/couchbase/client/java/fts/result/SearchQueryRow.java","src/main/java/com/couchbase/client/java/fts/result/SearchStatus.java","src/main/java/com/couchbase/client/java/fts/result/facets/AbstractFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/DateRange.java","src/main/java/com/couchbase/client/java/fts/result/facets/DateRangeFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/DefaultDateRangeFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/DefaultNumericRangeFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/DefaultTermFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/FacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/NumericRange.java","src/main/java/com/couchbase/client/java/fts/result/facets/NumericRangeFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/TermFacetResult.java","src/main/java/com/couchbase/client/java/fts/result/facets/TermRange.java","src/main/java/com/couchbase/client/java/fts/result/hits/DefaultHitLocations.java","src/main/java/com/couchbase/client/java/fts/result/hits/HitLocation.java","src/main/java/com/couchbase/client/java/fts/result/hits/HitLocations.java","src/main/java/com/couchbase/client/java/fts/result/impl/DefaultAsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/fts/result/impl/DefaultSearchMetrics.java","src/main/java/com/couchbase/client/java/fts/result/impl/DefaultSearchQueryResult.java","src/main/java/com/couchbase/client/java/fts/result/impl/DefaultSearchQueryRow.java","src/main/java/com/couchbase/client/java/fts/result/impl/DefaultSearchStatus.java","src/main/java/com/couchbase/client/java/fts/util/SearchUtils.java","src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java","src/test/java/com/couchbase/client/java/fts/AsyncSearchQueryResultTest.java","src/test/java/com/couchbase/client/java/fts/SearchParamsTest.java","src/test/java/com/couchbase/client/java/fts/SearchQueryResultTest.java","src/test/java/com/couchbase/client/java/fts/queries/BooleanFieldQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/BooleanQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/ConjunctionQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/DateRangeQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/DisjunctionQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/DocIdQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/MatchAllQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/MatchNoneQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/MatchPhraseQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/MatchQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/NumericRangeQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/PhraseQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/PrefixQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/RegexpQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/StringQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/TermQueryTest.java","src/test/java/com/couchbase/client/java/fts/queries/WildcardQueryTest.java","src/test/java/com/couchbase/client/java/fts/util/SearchUtilsTest.java","src/test/resources/data/fts/success_response.json"],"date":1462898241000,"numberOfModifiedFiles":80},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9800c35badbbcffbd5a20038e3f4bb8af85005f2","msg":"JCBC-950: Fixing license on Couchbase (c) files to Apache2\n\nRelicensing Couchbase copyright files from MIT to Apache2.\n\nThe Apache2 license was the original intended license. Couchbase\nis the copyright holder per the CLA from all contributors and can\ncorrect this to what it was originally intended to be.\n\nChange-Id: I0b3372ac97e8f4c84c8b2eb7a43394736c604a5b\nReviewed-on: http://review.couchbase.org/62772\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/LICENSE","src/integration/java/com/couchbase/client/java/BucketClosingTest.java","src/integration/java/com/couchbase/client/java/BucketInfoTest.java","src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/JsonDocumentTest.java","src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/integration/java/com/couchbase/client/java/N1qlDmlTest.java","src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/integration/java/com/couchbase/client/java/ReplicaReadTest.java","src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/repository/User.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/integration/java/com/couchbase/client/java/util/NodeLocatorHelperTest.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/ConnectionString.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/MutationState.java","src/main/java/com/couchbase/client/java/PersistTo.java","src/main/java/com/couchbase/client/java/ReplicaMode.java","src/main/java/com/couchbase/client/java/ReplicateTo.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java","src/main/java/com/couchbase/client/java/bucket/BucketInfo.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketType.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketInfo.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/ClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterInfo.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/document/AbstractDocument.java","src/main/java/com/couchbase/client/java/document/BinaryDocument.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/document/EntityDocument.java","src/main/java/com/couchbase/client/java/document/JsonArrayDocument.java","src/main/java/com/couchbase/client/java/document/JsonBooleanDocument.java","src/main/java/com/couchbase/client/java/document/JsonDocument.java","src/main/java/com/couchbase/client/java/document/JsonDoubleDocument.java","src/main/java/com/couchbase/client/java/document/JsonLongDocument.java","src/main/java/com/couchbase/client/java/document/JsonStringDocument.java","src/main/java/com/couchbase/client/java/document/LegacyDocument.java","src/main/java/com/couchbase/client/java/document/RawJsonDocument.java","src/main/java/com/couchbase/client/java/document/SerializableDocument.java","src/main/java/com/couchbase/client/java/document/StringDocument.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonNull.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/error/BucketAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/BucketDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/CASMismatchException.java","src/main/java/com/couchbase/client/java/error/CannotRetryException.java","src/main/java/com/couchbase/client/java/error/CouchbaseOutOfMemoryException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentException.java","src/main/java/com/couchbase/client/java/error/DocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DocumentDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/DurabilityException.java","src/main/java/com/couchbase/client/java/error/FlushDisabledException.java","src/main/java/com/couchbase/client/java/error/IndexAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/IndexDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java","src/main/java/com/couchbase/client/java/error/InvalidPasswordException.java","src/main/java/com/couchbase/client/java/error/QueryExecutionException.java","src/main/java/com/couchbase/client/java/error/RequestTooBigException.java","src/main/java/com/couchbase/client/java/error/TemporaryFailureException.java","src/main/java/com/couchbase/client/java/error/TemporaryLockFailureException.java","src/main/java/com/couchbase/client/java/error/TranscodingException.java","src/main/java/com/couchbase/client/java/error/ViewDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/subdoc/BadDeltaException.java","src/main/java/com/couchbase/client/java/error/subdoc/CannotInsertValueException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentNotJsonException.java","src/main/java/com/couchbase/client/java/error/subdoc/DocumentTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/MultiMutationException.java","src/main/java/com/couchbase/client/java/error/subdoc/NumberTooBigException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathExistsException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathInvalidException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathMismatchException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathNotFoundException.java","src/main/java/com/couchbase/client/java/error/subdoc/PathTooDeepException.java","src/main/java/com/couchbase/client/java/error/subdoc/SubDocumentException.java","src/main/java/com/couchbase/client/java/error/subdoc/ValueTooDeepException.java","src/main/java/com/couchbase/client/java/event/consumers/BucketConsumer.java","src/main/java/com/couchbase/client/java/query/AbstractN1qlQuery.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/Delete.java","src/main/java/com/couchbase/client/java/query/Index.java","src/main/java/com/couchbase/client/java/query/Insert.java","src/main/java/com/couchbase/client/java/query/Merge.java","src/main/java/com/couchbase/client/java/query/N1qlMetrics.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/N1qlQuery.java","src/main/java/com/couchbase/client/java/query/N1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/N1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/NamedPreparedStatementException.java","src/main/java/com/couchbase/client/java/query/ParameterizedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/PrepareStatement.java","src/main/java/com/couchbase/client/java/query/PreparedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/PreparedPayload.java","src/main/java/com/couchbase/client/java/query/Select.java","src/main/java/com/couchbase/client/java/query/SerializableStatement.java","src/main/java/com/couchbase/client/java/query/SimpleN1qlQuery.java","src/main/java/com/couchbase/client/java/query/Statement.java","src/main/java/com/couchbase/client/java/query/Update.java","src/main/java/com/couchbase/client/java/query/Upsert.java","src/main/java/com/couchbase/client/java/query/consistency/ScanConsistency.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/query/dsl/Alias.java","src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/query/dsl/Sort.java","src/main/java/com/couchbase/client/java/query/dsl/clause/UpdateForClause.java","src/main/java/com/couchbase/client/java/query/dsl/clause/package-info.java","src/main/java/com/couchbase/client/java/query/dsl/element/AsElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/BuildIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/DropIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/Element.java","src/main/java/com/couchbase/client/java/query/dsl/element/FromElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/GroupByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/HavingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/HintIndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/IndexNamesElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertSelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/InsertValueElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/JoinElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/KeysElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LettingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/LimitElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeDeleteElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/MergeInsertElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/NestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OffsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OnElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/OrderByElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/ReturningElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/SelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/SetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnionElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnnestElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnsetElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UsingElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WhereElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/WithIndexOptionElement.java","src/main/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/Case.java","src/main/java/com/couchbase/client/java/query/dsl/functions/Collections.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ComparisonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ConditionalFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/DateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/JsonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/MetaFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/NumberFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ObjectFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/PatternMatchingFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/StringFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/TypeFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/package-info.java","src/main/java/com/couchbase/client/java/query/dsl/path/AbstractPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/AsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultAsPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultDeleteUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultFromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultGroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultHavingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultHintPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInitialInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInitialUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultInsertValuesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultJoinPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLettingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeDeletePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeDeleteWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeInsertWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeKeyClausePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeSourcePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdatePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMergeUpdateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMutateLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultMutateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultNestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultOffsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultOrderByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultReturningPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectResultPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUnnestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultUpdateUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/DeleteUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/FromPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/GroupByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/HavingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/HintPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InitialInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InitialUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/InsertValuesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/JoinPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/JoinType.java","src/main/java/com/couchbase/client/java/query/dsl/path/KeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LettingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/LimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeDeletePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeDeleteWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeInsertPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeInsertWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeKeyClausePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeSourcePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdatePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MergeUpdateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MutateLimitPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/MutateWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/NestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/OffsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/OrderByPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/Path.java","src/main/java/com/couchbase/client/java/query/dsl/path/ReturningPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectResultPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectType.java","src/main/java/com/couchbase/client/java/query/dsl/path/UnnestPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateSetOrUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateSetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateUnsetPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/UpdateUsePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/WherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/BuildIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/CreateIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultBuildIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultCreateIndexPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultDropPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultIndexNamesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultOnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultUsingWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/DropPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexNamesPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexReference.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/IndexType.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/OnPrimaryPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/UsingWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WherePath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WithPath.java","src/main/java/com/couchbase/client/java/query/util/IndexInfo.java","src/main/java/com/couchbase/client/java/repository/AsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseAsyncRepository.java","src/main/java/com/couchbase/client/java/repository/CouchbaseRepository.java","src/main/java/com/couchbase/client/java/repository/Repository.java","src/main/java/com/couchbase/client/java/repository/annotation/Field.java","src/main/java/com/couchbase/client/java/repository/annotation/Id.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/EntityMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/PropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/RepositoryMappingException.java","src/main/java/com/couchbase/client/java/search/SearchControl.java","src/main/java/com/couchbase/client/java/search/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/query/BooleanQuery.java","src/main/java/com/couchbase/client/java/search/query/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/DateRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/FuzzyQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchQuery.java","src/main/java/com/couchbase/client/java/search/query/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/PhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/PrefixQuery.java","src/main/java/com/couchbase/client/java/search/query/RegexpQuery.java","src/main/java/com/couchbase/client/java/search/query/SearchQuery.java","src/main/java/com/couchbase/client/java/search/query/StringQuery.java","src/main/java/com/couchbase/client/java/search/query/TermQuery.java","src/main/java/com/couchbase/client/java/search/query/WildcardQuery.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/subdoc/MultiValue.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOperationResult.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/BinaryTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JacksonTransformers.java","src/main/java/com/couchbase/client/java/transcoder/JsonArrayTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonLongTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonStringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/JsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/RawJsonTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/SerializableTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/StringTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/Transcoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/AbstractFragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/FragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoder.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/util/Bootstrap.java","src/main/java/com/couchbase/client/java/util/DigestUtils.java","src/main/java/com/couchbase/client/java/util/LRUCache.java","src/main/java/com/couchbase/client/java/util/NodeLocatorHelper.java","src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java","src/main/java/com/couchbase/client/java/util/features/Version.java","src/main/java/com/couchbase/client/java/util/retry/Retry.java","src/main/java/com/couchbase/client/java/util/retry/RetryBuilder.java","src/main/java/com/couchbase/client/java/util/retry/RetryWhenFunction.java","src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java","src/main/java/com/couchbase/client/java/view/AsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/AsyncSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/AsyncViewResult.java","src/main/java/com/couchbase/client/java/view/AsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultAsyncViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewRow.java","src/main/java/com/couchbase/client/java/view/DefaultView.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewRow.java","src/main/java/com/couchbase/client/java/view/DesignDocument.java","src/main/java/com/couchbase/client/java/view/OnError.java","src/main/java/com/couchbase/client/java/view/SpatialView.java","src/main/java/com/couchbase/client/java/view/SpatialViewQuery.java","src/main/java/com/couchbase/client/java/view/SpatialViewResult.java","src/main/java/com/couchbase/client/java/view/SpatialViewRow.java","src/main/java/com/couchbase/client/java/view/Stale.java","src/main/java/com/couchbase/client/java/view/View.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/main/java/com/couchbase/client/java/view/ViewResult.java","src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java","src/main/java/com/couchbase/client/java/view/ViewRow.java","src/test/java/com/couchbase/client/java/ConnectionStringTest.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/MutationStateTest.java","src/test/java/com/couchbase/client/java/SerializationHelper.java","src/test/java/com/couchbase/client/java/behavior/backpressure/BackpressureTests.java","src/test/java/com/couchbase/client/java/bucket/BucketFlusherTest.java","src/test/java/com/couchbase/client/java/document/JsonDocumentTest.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java","src/test/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResultTest.java","src/test/java/com/couchbase/client/java/query/N1qlMetricsTest.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java","src/test/java/com/couchbase/client/java/query/N1qlQueryTest.java","src/test/java/com/couchbase/client/java/query/QueryToN1qlTest.java","src/test/java/com/couchbase/client/java/query/StatementSerializationTest.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java","src/test/java/com/couchbase/client/java/query/dsl/DeleteDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java","src/test/java/com/couchbase/client/java/query/dsl/IndexDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/InsertAndUpsertDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/MergeDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/UpdateDslTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CaseTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CollectionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ComparisonFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ConditionalFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/DateFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/JsonFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/MetaFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/NumberFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/ObjectFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/PatternMatchingFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/StringFunctionsTest.java","src/test/java/com/couchbase/client/java/query/dsl/functions/TypeFunctionsTest.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java","src/test/java/com/couchbase/client/java/transcoder/BinaryTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonArrayTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonBooleanTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonDoubleTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonLongTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonStringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/JsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/RawJsonTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/StringTranscoderTest.java","src/test/java/com/couchbase/client/java/transcoder/TranscoderUtilsTest.java","src/test/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoderTest.java","src/test/java/com/couchbase/client/java/util/BlockingTest.java","src/test/java/com/couchbase/client/java/util/BootstrapTest.java","src/test/java/com/couchbase/client/java/util/LRUCacheTest.java","src/test/java/com/couchbase/client/java/util/features/FeaturesTest.java","src/test/java/com/couchbase/client/java/util/features/VersionTest.java","src/test/java/com/couchbase/client/java/util/retry/ErrorsAttemptsTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryBuilderTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWhenFunctionTest.java","src/test/java/com/couchbase/client/java/util/retry/RetryWithDelayHandlerTest.java","src/test/java/com/couchbase/client/java/view/DefaultViewTest.java","src/test/java/com/couchbase/client/java/view/DesignDocumentTest.java","src/test/java/com/couchbase/client/java/view/SpatialViewQueryTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java","src/test/java/com/couchbase/client/java/view/ViewRetryHandlerTest.java"],"date":1460461239000,"numberOfModifiedFiles":455},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e30ab99d5ad17ba4e1045710fc5a395476aeac9e","msg":"JCBC-960: Expression method to wrap in parenthesis\n\nMotivation\n----------\nOften, N1QL statements will need to explicitly define evaluation order\nby using parenthesis. There is currently no method to do that and one\nas to fallback to string concatenation inside of an x() call.\n\nModifications\n-------------\nAdded the `par()` method that infixes an Expression inside parenthesis.\n\nResult\n------\nBetter looking wrapping of Expression in parenthesis.\n\nChange-Id: Ia35ac8266e54a3ecc4e439c2f0a809a83312283d\nReviewed-on: http://review.couchbase.org/64210\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java"],"date":1463658974000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"42f9d60377bc3216ce1858f0e95254b51280dcca","msg":"JCBC-961: Make isOrderRetained public\n\nMotivation:\n-----------\nSometimes it can be useful to be able to programmatically rework the\nparameters of a query, notably includeDocs target class (eg. in Spring\nData). But since the isOrderRetained() tuning is not accessible, there\u0027s\nno way to ensure that it is maintained when resetting the target class.\n\nModifications:\n--------------\nViewQuery.isOrderRetained() is now public.\n\nResults:\n--------\nOrder retained parameter can be kept when modifying the target class of\nincludeDocs in a ViewQuery.\n\nChange-Id: Ia00d907b62a1b9dde828ce3678c347e4307ce0e5\nReviewed-on: http://review.couchbase.org/64278\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/view/ViewQuery.java"],"date":1463989967000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"500cc22247c04d061142694251efdef935c7e1d6","msg":"JCBC-958: remove FTS poc implementation\n\nChange-Id: Ic50c4c733a8385ca0aaa358b6b29dc357ae55de3\nReviewed-on: http://review.couchbase.org/64289\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/SearchControl.java","src/main/java/com/couchbase/client/java/search/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/query/BooleanQuery.java","src/main/java/com/couchbase/client/java/search/query/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/DateRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/search/query/FuzzyQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/MatchQuery.java","src/main/java/com/couchbase/client/java/search/query/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/search/query/PhraseQuery.java","src/main/java/com/couchbase/client/java/search/query/PrefixQuery.java","src/main/java/com/couchbase/client/java/search/query/RegexpQuery.java","src/main/java/com/couchbase/client/java/search/query/SearchQuery.java","src/main/java/com/couchbase/client/java/search/query/StringQuery.java","src/main/java/com/couchbase/client/java/search/query/TermQuery.java","src/main/java/com/couchbase/client/java/search/query/WildcardQuery.java"],"date":1464017596000,"numberOfModifiedFiles":18},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"db23bd3478d29d2e2f8a22274b8094b3f46a931c","msg":"JCBC-959 - Rename fts package to search\n\nChange-Id: I52c3b51df80499c395779a430f65d7ff7f4809eb\nReviewed-on: http://review.couchbase.org/64293\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/search/HighlightStyle.java","src/main/java/com/couchbase/client/java/search/SearchParams.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/facet/DateRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/NumericRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/SearchFacet.java","src/main/java/com/couchbase/client/java/search/facet/TermFacet.java","src/main/java/com/couchbase/client/java/search/queries/AbstractCompoundQuery.java","src/main/java/com/couchbase/client/java/search/queries/AbstractFtsQuery.java","src/main/java/com/couchbase/client/java/search/queries/BooleanFieldQuery.java","src/main/java/com/couchbase/client/java/search/queries/BooleanQuery.java","src/main/java/com/couchbase/client/java/search/queries/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/search/queries/DateRangeQuery.java","src/main/java/com/couchbase/client/java/search/queries/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/search/queries/DocIdQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchAllQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchNoneQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchQuery.java","src/main/java/com/couchbase/client/java/search/queries/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/search/queries/PhraseQuery.java","src/main/java/com/couchbase/client/java/search/queries/PrefixQuery.java","src/main/java/com/couchbase/client/java/search/queries/RegexpQuery.java","src/main/java/com/couchbase/client/java/search/queries/StringQuery.java","src/main/java/com/couchbase/client/java/search/queries/TermQuery.java","src/main/java/com/couchbase/client/java/search/queries/WildcardQuery.java","src/main/java/com/couchbase/client/java/search/result/AsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchMetrics.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/result/SearchStatus.java","src/main/java/com/couchbase/client/java/search/result/facets/AbstractFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DateRange.java","src/main/java/com/couchbase/client/java/search/result/facets/DateRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultDateRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultNumericRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultTermFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/FacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/NumericRange.java","src/main/java/com/couchbase/client/java/search/result/facets/NumericRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/TermFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/TermRange.java","src/main/java/com/couchbase/client/java/search/result/hits/DefaultHitLocations.java","src/main/java/com/couchbase/client/java/search/result/hits/HitLocation.java","src/main/java/com/couchbase/client/java/search/result/hits/HitLocations.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchMetrics.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchQueryRow.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchStatus.java","src/main/java/com/couchbase/client/java/search/util/SearchUtils.java","src/test/java/com/couchbase/client/java/search/AsyncSearchQueryResultTest.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java","src/test/java/com/couchbase/client/java/search/SearchQueryResultTest.java","src/test/java/com/couchbase/client/java/search/queries/BooleanFieldQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/BooleanQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/ConjunctionQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DateRangeQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DisjunctionQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DocIdQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchAllQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchNoneQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchPhraseQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/NumericRangeQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/PhraseQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/PrefixQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/RegexpQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/StringQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/TermQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/WildcardQueryTest.java","src/test/java/com/couchbase/client/java/search/util/SearchUtilsTest.java"],"date":1464022980000,"numberOfModifiedFiles":77},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"69a2e25d568cff94d262586a51b9a5df14d10a97","msg":"JCBC-962: Refactor SearchParams into SearchQuery\n\nMotivation\n----------\nMost SDKs don\u0027t have the concept of a N1qlParams separate object for\nstoring query-level parameters, so it has been decided that the FTS\nAPI would not include such an object either, but rather allow setting\nof the global request parameters through a \"builder\" fluent API on the\nSearchQuery root object.\n\nModifications\n-------------\nRemoved SearchParams. All methods now are in SearchQuery.\nSearchQuery is in charge of exporting the whole JSON through query()\nmethod.\nIt does so by preparing a JsonObject, injecting parameters into it and\nletting the AbstractFtsQuery inject its payload into another \"query\"\nJsonObject.\n\nTests have been modified to take that refactor into account.\n\nResult\n------\nSetting of FTS top level parameters is simpler, just using SearchQuery,\nand marshalling to JSON is simpler as well, by just calling export().\n\nChange-Id: I69e0c88f11bc787b5eb4e71f2775137d0832d505\nReviewed-on: http://review.couchbase.org/64389\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/search/SearchParams.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/queries/AbstractFtsQuery.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryRow.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java","src/test/java/com/couchbase/client/java/search/queries/BooleanFieldQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/BooleanQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/ConjunctionQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DateRangeQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DisjunctionQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/DocIdQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchAllQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchNoneQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchPhraseQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/MatchQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/NumericRangeQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/PhraseQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/PrefixQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/RegexpQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/StringQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/TermQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/WildcardQueryTest.java"],"date":1464172255000,"numberOfModifiedFiles":25},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2f69cb08e46cb4bab563ebb983f172eda33d71a0","msg":"JCBC-963: Facet name is kept in SearchQuery\n\nMotivation:\n-----------\nIn RFC10 (couchbaselabs/sdk-rfcs#17), some SDKs can directly map the\nobject representation to JSON. In the previous design of facets, having\nthe name attribute as part of the SearchFacet made that problematic.\nIt has been decided that the name of a facet should only be set on the\nSearchQuery in which the facet is added (which would also allow reuse of\nfacets across queries, with different names).\n\nModifications:\n--------------\nSearchFacet has no name attribute anymore, moved into the SearchQuery.\n\nChange-Id: I47e5265f663218cc58eb80b1021614229c0d0189\nReviewed-on: http://review.couchbase.org/64390\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/facet/DateRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/NumericRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/SearchFacet.java","src/main/java/com/couchbase/client/java/search/facet/TermFacet.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1464174502000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b769051b8918207192ca7f307b8efdd9caa71bae","msg":"JVMCBC-332: Fix dependent code to not use the ff-map on locating the node.\n\nChange-Id: I10e8f5542d307052e96e7a46da068a325fca140d\nReviewed-on: http://review.couchbase.org/64394\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/NodeLocatorHelper.java"],"date":1464179310000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cadc81b80fa0382e4eb7517b854f030a43ddebbc","msg":"JCBC-955: Mark Index Management API as stable\n\nMotivation:\n-----------\nRFC3 (couchbaselabs/sdk-rfcs#6) has been accepted by all SDKs and can\nnow be considered stable.\n\nModifications:\n--------------\nRemoved Experimental annotations.\n\nChange-Id: Ibd5115760232098b8788a61e13838c0d086bc3f1\nReviewed-on: http://review.couchbase.org/64323\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java"],"date":1464088050000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"893ceb873e6179773fc716333c83f747014dc0d1","msg":"JCBC-957: Add support for consistency in FTS\n\nMotivation\n----------\nIn Couchbase 4.5, FTS queries can have two levels of consistency:\n - unbounded (default)\n - at-plus\n\nThe later needs the query to include a vector with vbucketId / sequence\nnumbers of the earliest acceptable mutations to consider.\n\nModifications\n-------------\nAdded parameter builder for consistency to SearchQuery:\n - scanConsistency to set a simple consistency via enum (for now just\n NOT_BOUNDED)\n - consistentWith(...) with either documents, fragments or a\n MutationState to set an AT_PLUS consistency.\n\nAdded MutationState.exportForFts() export method to get the FTS-desired\nformat for the vector. For now, only the SearchQuery\u0027s index is\nsupported in the vector.\n\nResult\n------\nBasic AT_PLUS consistency as well as unbounded consistency can be set\non a SearchQuery.\n\nChange-Id: I8a0e3dd553294b7928bdb6a115f4d5ffc40a4556\nReviewed-on: http://review.couchbase.org/64402\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/MutationState.java","src/main/java/com/couchbase/client/java/search/ScanConsistency.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1464189842000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ac9d32fcc5b336685749fd4b1c8c2bfb32f174c1","msg":"JCBC-968: DocumentFragment does not carry CAS on multi lookup\n\nMotivation\n----------\nIt has been found that under multi lookup scenario, the DocumentFragment\nalways returns a cas of 0.\n\nModifications\n-------------\nAdapt to the related core-io change (JVMCBC-337) and pass on the CAS\nvalue. Note: since in the previous implementation the core response\nwas not in scope anymore the code has been refactored slightly as\na nested observable to get it in scope.\n\nResult\n------\nOn multi lookup, the CAS is now part of the DocumentFragment.\n\nChange-Id: I6cddd130e1ad86e6ff8c68935bfb1097718c31fb\nReviewed-on: http://review.couchbase.org/64590\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java"],"date":1464676698000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c6719c618126f3df56ff45a9b66e6880fcae6ba7","msg":"[chores] Ignore travel-sample FTS demo test\n\nMotivation:\n-----------\nThe SearchQueryTest integration test case should only require an FTS\nindex on the beer-sample dataset. Travel-sample based test can be\nuseful as a quick mean of running FTS queries on that sample bucket,\nbut should not be considered as part of the normal integration test.\n\nModifications:\n--------------\nTravel-sample based integration test has been Ignored, can be run\nmanually from the IDE.\n\nChange-Id: If7f1d8faa02d743357841e7980c291fcb5fdcaf2\nReviewed-on: http://review.couchbase.org/64573\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java"],"date":1464602046000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"54b25c1ecc41aa2d91da339b6131910b6724b292","msg":"JCBC-964: Expose \"disableMetrics\" as N1qlParam option.\n\nMotivation\n----------\nIf the metrics are not needed as part of the response (to save bytes\non the network) it should be possible to disable them.\n\nModifications\n-------------\nThis changeset adds the appropriate query param option and adds a test\ncase to assert that.\n\nResult\n------\nThe metrics can be disabled as part of the response.\n\nChange-Id: I84afb91234bdae391069bb84c95adfd269b96f7c\nReviewed-on: http://review.couchbase.org/64592\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/query/N1qlMetrics.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java"],"date":1464678608000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9e9386edd4aad3ced9dd8b1855ec64e6505a7056","msg":"JCBC-965: Add option for generic N1QLParams.\n\nMotivation\n----------\nThere are a bunch of undocumented and experimental params\nthat can be used with the N1QL query engine. It doesn\u0027t make\nsense to expose them as stable API but it should be possible\nto supply them if needed.\n\nModifications\n-------------\nThis changeset adds a raw API where generic params (but they\nstill need to be valid json, so the code checks) can be stored\nand they are passed down at query time.\n\nResult\n------\nIt is possible to supply generic, raw N1QL params if needed.\n\nChange-Id: I5e141d49c75bdf9d4cbd6707003f8e5d65ee95a9\nReviewed-on: http://review.couchbase.org/64642\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java"],"date":1464767110000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4c5916d7785d3d8089fd9b8dce04d1dd3d89a4ef","msg":"JCBC-971: Support Vararg for Subdoc LookupIn\n\nMotivation\n----------\nInstead of chaining gets together like .get(\"foo\").get(\"bar\") it\nshould be possible to also shortcut to .get(\"foo\", \"bar\") while\nstill supporing the other style.\n\nModifications\n-------------\nThe exists and get argument on the LookupInBuilder (incl. Async)\nnow support the String as a vararg.\n\nResult\n------\nMore flexible ways to specify the fields to lookup or check for\nexistence.\n\nChange-Id: I6a22ae77b9a7814792a0c33ce2ce70d13b8e0b59\nReviewed-on: http://review.couchbase.org/64710\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java"],"date":1464948145000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"989f8cf751c8b5d757eb49f448c76f5773df45b7","msg":"JCBC-973: Fix detection of disabled flush on bucket.\n\nMotivation\n----------\nA changed introduce in order to fix JVMCBC-199 regressed the\nfunctionality to detect a bucket where flush is disabled but\nnonetheless executed.\n\nModifications\n-------------\nThe code now checks on the broader !\u003d success instead of a\nspecific error code. Note that success for http includes all\nkinds of 2XX error codes, as a result even if the server responds\nwith 201 or 202 it works.\n\nResult\n------\nFlushDisabledException raised again if flush disabled.\n\nChange-Id: Iff09885637039fcb850710d865a2480c7f1a6575\nReviewed-on: http://review.couchbase.org/64847\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/FlushDisabledTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java"],"date":1465464142000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"378fd77b9176ddbb0a6bb3c6c55597d6814b04a2","msg":"Prepare 2.3.0 Release\n\nChange-Id: Id485cd7456f1032da588712999aade49d3bd4546\nReviewed-on: http://review.couchbase.org/64881\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1465556365000,"numberOfModifiedFiles":2},{"authorName":"George Kankava","authorEmail":"george.kankava@devfactory.com","authorTimeZone":"GMT+04:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"01d1223eb0a86d85cc91558d07f3c07f8f6c6a4c","msg":"JCBC-975: Replace occurrences of StringBuffer with StringBuilder\n\nMotivation\n----------\nAs caught by the Sonar tool, several classes (most of them in the FTS\nsearch package) were using StringBuffer rather than StringBuilder in\ntheir toString() methods.\n\nSee Sonar rule squid:S1149 (\"Synchronized classes Vector, Hashtable,\nStack and StringBuffer should not be used).\n\nModifications\n-------------\nFTS related classes that use StringBuffer now use StringBuilder.\n\nResult\n------\nStringBuilder isn\u0027t used anymore.\n\nChange-Id: If960f13c75c2b50e73de0ee83fdadd6666cb860b\nReviewed-on: http://review.couchbase.org/64928\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/result/facets/DateRange.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultDateRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultNumericRangeFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/DefaultTermFacetResult.java","src/main/java/com/couchbase/client/java/search/result/facets/NumericRange.java","src/main/java/com/couchbase/client/java/search/result/facets/TermRange.java"],"date":1465824120000,"numberOfModifiedFiles":6},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"795784b252c26d94b33a196f9d5c30b09e290425","msg":"JCBC-978: Fix Index DSL \"WITH nodes\" option\n\nMotivation:\n-----------\nWhen creating a N1QL index, the WITH nodes option should be passed to\nthe service as a JSON array of node names. However, the index DSL is\nnot exporting an array.\n\nModifications:\n--------------\nAdded \"withXXX\" methods that support passing in multiple node names, and\nmade all nodes-related processing produce a JSON array.\n\nResults:\n--------\nIndexes can be created on specific node(s) using the Index DSL.\n\nChange-Id: Ifec2784b6eea7dfe07ce68e9d3e7a7489ec20b6a\nReviewed-on: http://review.couchbase.org/64958\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/path/index/DefaultWithPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/index/WithPath.java","src/test/java/com/couchbase/client/java/query/dsl/IndexDslTest.java"],"date":1466007701000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"454e6b625bbf1155cc454a0583d17354d3361d23","msg":"Override builder method from core-io.\n\nChange-Id: Id013cbfac64fb163ace86ad82c15832682722009\nReviewed-on: http://review.couchbase.org/65050\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1466410811000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f05b7437e14bce62cb1214d6c5dd7c9781d9244","msg":"Start 2.3.1 Development\n\nChange-Id: Ic1b6bd31a4ae31658b620d7420750dcceb65feef\nReviewed-on: http://review.couchbase.org/65052\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1466411026000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3672eec9b7a722022c6b36469af536802fd6509c","msg":"Prepare 2.3.1 Release\n\nChange-Id: I9a7afd17938bb5c6cc464c887c925e3d4379f242\nReviewed-on: http://review.couchbase.org/65110\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1466523222000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"766d2bc730ce48bc27a17ad55fa5617517f8b854","msg":"JCBC-984: Don\u0027t broadcast query plan to non-query nodes.\n\nMotivation\n----------\nWhen a query plan needs to be broadcasted to all the nodes\nit is important that in an MDS setup those broadcasts are\nnot sent to non-query nodes since their requests will never\nbe able to complete (retried forever and time out eventually).\n\nModifications\n-------------\nThe code has been adapted to filter() out any nodes that do\nnot have the QUERY service enabled.\n\nResult\n------\nQuery plan is only broadcasted to query nodes.\n\nChange-Id: I9ff92cc28f27135d0bb0586a0df92f29e66fe7a4\nReviewed-on: http://review.couchbase.org/65530\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1467785118000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5eb1fb793354734dac959e1f619b6d15a24f214a","msg":"JCBC-987: Add observe support for subdoc mutateIn\n\nMotivation\n----------\nSince a subdoc mutation is very similar to a regular kv-based\nmutation it is important to also optionally check for the given\ndurability requirements. The support is all there, it just needs\nto be exposed properly on both the blocking and non-blocking APIs.\n\nModifications\n-------------\nThis changeset adds more variants to the execute() method on the\nMutateInBuilder (both sync and async) which, after a successful\nsubdoc mutation, performs the durability requirement polling.\n\nIt behaves exactly like the fulldocument counterpart.\n\nResult\n------\nIt is now possible to specify durability requirements for subdoc\nmutations.\n\nChange-Id: I7cb65f1983f78d5154a4f5ed016b230208959b16\nReviewed-on: http://review.couchbase.org/66034\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java"],"date":1469087217000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"08abd6a4c9ae407704b8e6bd0674bf7ab95e5389","msg":"JCBC-988: Add createBucketIfMissing, sampleBucket\n\nMotivation\n----------\nWhen using sample bucket in an integration test, if the sample isn\u0027t\nloaded, the CouchbaseTestContext will create a small bucket.\n\nThat can lead to puzzling test errors as such test will often assume\nsample data to be present in bucket, while it will be empty in the\ncase above.\n\nCreating a bucket if it is missing should be tunable, and an easy way\nof forcing that to false should be offered for sample buckets.\n\nModifications\n-------------\nAdded a createBucketIfMissing method to choose between automatic\ncreation or throwing an exception when the requested bucket is\nmissing.\n\nAdded a sampleBucket method to express that a sample bucket must be\nused. This is equivalent to createBucketIfMissing(false) +\nadhoc(false) + flushOnInit(false) + bucketName(sampleName) +\nbucketPassword(\"\").\n\nResult\n------\nTests that use a sample are less likely to fail in odd ways when the\nsample bucket hasn\u0027t been loaded, and instead fail fast at init time.\n\nChange-Id: I6f5bf17c226c9626a9c20f84421546063a4c04db\nReviewed-on: http://review.couchbase.org/66087\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1469177383000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0907b7175219bb7fad0621a371c732dd094fb1b9","msg":"Start 2.3.2 development\n\nChange-Id: I1c5aef19c62d747f0ac992116485c8aa22669bd4\nReviewed-on: http://review.couchbase.org/66197\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1469521618000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2654a7ab26e25e7cbfa19b6eb9bb0055c2877bff","msg":"JCBC-985: Fix fts errors handling/parsing, querystring, highlight\n\nMotivation\n----------\nDuring the REVIEW phase, the following problems have been identified\nwith FTS RFC that affect the implementation:\n\n - StringQuery should be QueryStringQuery\n - there is an additional plaintext error case: HTTP 412 when a\n consistency is requested but cannot be fulfilled within the timeout\n - highlight style is actually optional\n - errors is not an array but an object, and when it is present, hits\n can be null\n\nModifications\n-------------\n - StringQuery has been renamed to QueryStringQuery, and the static\n factory method from string to queryString.\n - highlight now has several overloads that can omit the style. when\n used, the style is actually set to new special enum SERVER_DEFAULT.\n - HTTP 412 case leads to a ResponseStatus.FAILURE, which is now\n interpreted as a FtsConsistencyTimeoutException\n - HTTP 200 with execution errors now parses both a JsonArray and a\n JsonObject. The case where hits is null is also handled.\n\nAdded unit tests and integration tests, most notably for the error\nhandling cases.\n\nResult\n------\nThe error handling of FTS is more correct (and a bug with it is fixed).\nOther comments from rfc review have been taken into account.\n\nChange-Id: Iefd877582e8001a5f06477520cc687a98a900c4b\nReviewed-on: http://review.couchbase.org/65620\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/error/FtsConsistencyTimeoutException.java","src/main/java/com/couchbase/client/java/error/FtsMalformedRequestException.java","src/main/java/com/couchbase/client/java/search/HighlightStyle.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/queries/QueryStringQuery.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java","src/test/java/com/couchbase/client/java/search/SearchQueryResultTest.java","src/test/java/com/couchbase/client/java/search/queries/QueryStringQueryTest.java"],"date":1467995572000,"numberOfModifiedFiles":11},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f7545abbfd70c4439c32f84aaf4041d6df7506b9","msg":"JCBC-976: Rename ScanConsistency to SearchConsistency\n\nMotivation:\n-----------\nIn order to better distinguish the two types of consistencies,\nFTS ScanConsistency needs to be renamed to SearchConsistency.\n\nModifications:\n--------------\nRenamed the enum to SearchConsistency.\nRenamed the builder method to searchConsistency().\n\nChange-Id: I27a868ea62eb3ea046f7432b8732dcd6e267039c\nReviewed-on: http://review.couchbase.org/66199\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/SearchConsistency.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1469525930000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c5fd66dd1d08871a4e2a47ebc6765764b590b272","msg":"JCBC-982: BucketSettings raw and customSettings\n\nMotivation\n----------\nMethods of BucketSettings don\u0027t cover the full range of possible values\neither from the server (when getting bucket info) or when configuring\na bucket. It also varies with each major Couchbase version.\n\nGetting the buckets info could be enriched with a generic raw() method,\nwhile configuring a bucket could take additional generic map of custom\nsettings.\n\nModifications\n-------------\nBucketSettings now has a raw() method to represent the raw information\nas returned by the server.\nIt is set when calling build() on the default builder.\n\nBucketSettings for configuration (from client to server) can now have\nadditional settings through the customSettings() method. These are set\non the builder via the withSetting and withSettings methods.\n\nThe insert/update bucket payload is built using a testable method that\nwill consider the customSettings(), BUT will ignore them if they would\noverwrite a setting that has a corresponding method.\n\nResult\n------\nBucket settings can now be read fully from the server and also set\nfully, even if native methods are missing. This is more future-proof.\n\nChange-Id: I7a9e6a433a177b617168e714bd85d62d07ad47be\nReviewed-on: http://review.couchbase.org/66218\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/test/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManagerTest.java"],"date":1469542350000,"numberOfModifiedFiles":5},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9557d8f7d2d16dcf50da5a73306f30bd6ae7f93b","msg":"JCBC-983: Simple client for cluster REST API\n\nMotivation\n----------\nThe Couchbase cluster exposes a REST API, of which some methods are\nexposed as native Java methods on the SDK. It would be useful to offer\na simple mean of querying the other endpoints from within the SDK.\n\nTo that end, the RestApiRequest message was added to the core and now\nneeds to be exposed in the client itself.\n\nModifications\n-------------\nAdded a ClusterApiClient class that can be used to prepare API requests\n(as RestBuilder objects) and execute them synchronously.\n\nAdded an AsyncClusterApiClient class that can be used to prepare API\nrequests (as AsyncRestBuilder objects) and execute them asynchronously.\n\nBoth builders implement the marker interface RestBuilderMarker and have\nseveral methods that can be chained together to build the full request.\nThe request can then be executed by calling the execute() methods.\n\nResult\n------\nA simple way of querying the cluster REST API is available directly in\nthe Java SDK. Convenience methods for both JSON and Url-Encoded form\nbodies are exposed.\n\nChange-Id: Icc383f918429a16a83ce44d539f92d21a0b2c09b\nReviewed-on: http://review.couchbase.org/66149\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/cluster/api/AbstractClusterApiClient.java","src/main/java/com/couchbase/client/java/cluster/api/AsyncClusterApiClient.java","src/main/java/com/couchbase/client/java/cluster/api/AsyncRestBuilder.java","src/main/java/com/couchbase/client/java/cluster/api/ClusterApiClient.java","src/main/java/com/couchbase/client/java/cluster/api/Form.java","src/main/java/com/couchbase/client/java/cluster/api/RestBuilder.java","src/main/java/com/couchbase/client/java/cluster/api/RestBuilderMarker.java","src/test/java/com/couchbase/client/java/cluster/api/AbstractClusterApiClientTest.java","src/test/java/com/couchbase/client/java/cluster/api/AsyncClusterApiClientTest.java","src/test/java/com/couchbase/client/java/cluster/api/ClusterApiClientTest.java"],"date":1469442071000,"numberOfModifiedFiles":15},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"06066520e8a57632da3d978d70fe69152143b6c6","msg":"JCBC-992: DNS SRV workaround when IPv6 nameserver\n\nMotivation:\n-----------\nThe Bootstrap class, used to bootstrap the SDK from a DNS SRV record,\nrelies on the default host machine DNS resolution.\nIn the case where the DNS server list configured in the host machine\ninclude IPv6 entries, the whole initialization breaks and there\u0027s no\nway of using a different resolution process.\n\nModifications:\n--------------\nAn additional overload for Bootstrap is added that accepts a nameserver\nIP (should be an IPv4), to use with the \"dns://\" prefix for direct name\nresolution instead of attempting to compile a list of name servers from\nthe OS.\n\nThe Bootstrap test has been amended to use this feature and rely on\nGoogle\u0027s public DNS (\"8.8.8.8\").\n\nResults:\n--------\nBootstrap test pass even on a machine where IPv6 name servers are\nconfigured.\nSuch OS configurations can be worked around by providing an explicit\nname server address, if needed.\n\nChange-Id: I690088c090aa11279235c625ed1e81f846d13b1b\nReviewed-on: http://review.couchbase.org/66290\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/Bootstrap.java","src/test/java/com/couchbase/client/java/util/BootstrapTest.java"],"date":1469722353000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c7124eb95c4fe5f8673c4eb67101568cf48df788","msg":"JCBC-991: Ensure README points to new documentation URLs\n\nMotivation:\n-----------\nWith Couchbase Server 4.5 and the 2.3.x line of Java SDK, the docs\nhave been reorganized and have new URLs.\n\nModifications:\n--------------\nModified the README so it points to most recent documentation.\n\nChange-Id: Iadc5402bc528ef36518a69dbd84c5c6795a103f8\nReviewed-on: http://review.couchbase.org/66454\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md"],"date":1470237786000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bd1016146591616b778e95c3108bee70e92d7d20","msg":"Prepare 2.3.2 Release\n\nChange-Id: I94f70e55fc18fc29f405d3e5e6282cfa6060e9ec\nReviewed-on: http://review.couchbase.org/66649\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1470822228000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5965d24bc488ed1e83d002472a1de84602bb4243","msg":"Start development of 2.3.2\n\nChange-Id: I1e89d2ef864787284784ac384d9dc10ad6295c46\nReviewed-on: http://review.couchbase.org/66831\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1471421673000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff7a54bf9fb0927b738b2309fe2ac9636d8dc033","msg":"JCBC-998: Util class for raw json N1QL/FTS\n\nMotivation\n----------\nBoth FTS and N1QL request messages exist that allow to get the raw JSON\nresponse out of the service (either in String or ByteBuf form).\n\nIn order to make execution of these messages easier (especially those\nbased on ByteBuf), an utility class outside of the Bucket API makes\nsense (as it would otherwise have to be a fully committed API, shared\nbetween SDKs).\n\nModifications\n-------------\nAdded RawQueryExecutor and its async counterpart AsyncRawQueryExecutor\nas such utility classes.\n\nEach allow to get a response in JsonObject or String form, as well as\nimplementing a custom deserialization easily.\n\nResult\n------\nN1QL and FTS queries can be executed with a JSON response using the new\nutility classes. The N1QL methods are integration tested.\n\nChange-Id: Ibc7443c028e803cc9f28d48cbba50612c0ee1301\nReviewed-on: http://review.couchbase.org/66987\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutorTest.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/main/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutor.java"],"date":1471960831000,"numberOfModifiedFiles":3},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5ce047cf9af0582cc0539fce19b009f72df4163c","msg":"JCBC-995: Improve customization of subdoc serialization\n\nMotivation:\n-----------\nSubdocument uses the shaded Jackson MAPPER as its default implementation\nfor serialization and deserialization.\n\nThe FragmentTranscoder can be customized, and this is especially useful\non the write path, but the implementation can be a bit tricky.\nIn order to support custom serialization, a better abstract class would\nbe useful.\n\nAdditionally, the read path is more complex especially when multiple\noperations are performed, as the LookupSpec is lost and as such there\nis no way for the client to provide a target Class that can be natively\nused for the deserialization.\n\nIn order to support custom deserialization, the raw bytes should be\nexposed so the user can work with its own deserialization mechanism.\n\nModifications:\n--------------\nAdded an optional rawContent getter on SubdocOperationResult.\n\nAdded an includeRaw option to the LookupInBuilders that will opt-in into\nputting a copy of the raw JSON bytes into the result for GETs. This is\nopt-in due to the sometimes undesirable memory overhead this implies.\n\nAdded a new abstract FragmentTranscoder that deals with byte arrays\ninstead of ByteBuf, making it easier to implement a concrete transcoder.\n\nResults:\n--------\nCustom transcoders for subdoc can be written more easily and custom\ndeserialization can also be applied using the rawContent value.\n\nChange-Id: I6131fb0bee7230c60e92892b818876115406488e\nReviewed-on: http://review.couchbase.org/66868\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/DocumentFragment.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOperationResult.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/AbstractByteArrayFragmentTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/subdoc/JacksonFragmentTranscoder.java"],"date":1471529869000,"numberOfModifiedFiles":7},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fc3a487e693d5e6f218e2399f4d836d02670e8be","msg":"JCBC-901: Introduce Authenticator for implicit credentials\n\nMotivation:\n-----------\nRFC 007 (couchbaselabs/sdk-rfcs#13) introduces the Authenticator\ninterface to deal with credentials that are not provided explicitly on\neach authenticated method call but centralized in one place.\n\nModifications:\n--------------\nAdded the Authenticator interface and its first implementation based on\nlogin/password pairs, PasswordAuthenticator.\n\nInternally, Authenticator deals with Credential objects. The contexts in\nwhich Authenticator can provide credential are enumerated in the\nCredentialContext enum.\n\nThe Authenticator is set on the Cluster only. Buckets (and N1QL/FTS\nqueries initiated from Buckets) still have a strong dependency to a\nsingle password through the SASL dance and the way connections are\nestablished. However it is possible to manually set credentials for\nmultiple buckets on a N1qlQuery.\n\nGenerally the authenticator should be prepared and set before opening\nbuckets, once. However, it can be changed later on via  the\n`Cluster#authenticate` method. If a reference is kept to it, it can\nalso be mutated.\n\nThe following Cluster methods make use of the Authenticator when no\nexplicit credential is provided: clusterManager() and\nopenBucket(String bucketName). The later will also default to an empty\npassword if no credentials can be found in the Authenticator.\n\nResults:\n--------\nImplicit credentials can be retrieved from a configurable Authenticator,\nwhich paves the way for further authentication modes support and cluster\nlevel authentication.\n\nJoins on protected buckets now work, provided their credentials have\nbeen set on the N1qlParams object.\n\nChange-Id: Ia58107462cbeb8b3b2b86402a8e5e11c2ee92c3e\nReviewed-on: http://review.couchbase.org/66801\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticationTest.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/auth/Authenticator.java","src/main/java/com/couchbase/client/java/auth/Credential.java","src/main/java/com/couchbase/client/java/auth/CredentialContext.java","src/main/java/com/couchbase/client/java/auth/PasswordAuthenticator.java","src/main/java/com/couchbase/client/java/cluster/api/AsyncRestBuilder.java","src/main/java/com/couchbase/client/java/error/AuthenticatorException.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java"],"date":1471356424000,"numberOfModifiedFiles":16},{"authorName":"George Kankava","authorEmail":"george.kankava@devfactory.com","authorTimeZone":"GMT+04:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5addb24c52e8db1f0daecbcdec654c66acfd310b","msg":"[chores] Fix some code issues as reported by Sonar\n\nMotivation\n----------\nSonar reported a few items that it makes sense to fix:\n\n - squid:S1118 - Utility classes should not have public constructors.\n - squid:S1444 - \"public static\" fields should be constant.\n - squid:S1854 - Dead stores should be removed.\n - squid:ClassVariableVisibilityCheck - Class variable fields should\n   not have public accessibility.\n - squid:CommentedOutCodeLine - Sections of code should not be\n   \"commented out\".\n - squid:S1481 - Unused local variables should be removed.\n - squid:S2786 - Nested \"enum\"s should not be declared static.\n\nModifications\n-------------\nThe fixes proposed by Sonar that made sense have been applied,\nimproving code quality.\n\nResult\n------\nImproved code quality.\n\nFixes #14\nFixes #18\nChange-Id: Idd44c1f6aa4cc9842820883a28554fd0357ee088\nReviewed-on: http://review.couchbase.org/64953\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/ConnectionString.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java","src/main/java/com/couchbase/client/java/query/Index.java","src/main/java/com/couchbase/client/java/query/dsl/functions/AggregateFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ArrayFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/Collections.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ComparisonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ConditionalFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/JsonFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/MetaFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/NumberFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/ObjectFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/PatternMatchingFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/StringFunctions.java","src/main/java/com/couchbase/client/java/query/dsl/functions/TypeFunctions.java","src/main/java/com/couchbase/client/java/search/util/SearchUtils.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java","src/main/java/com/couchbase/client/java/transcoder/JacksonTransformers.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/util/Bootstrap.java","src/main/java/com/couchbase/client/java/util/DigestUtils.java","src/main/java/com/couchbase/client/java/util/retry/Retry.java","src/main/java/com/couchbase/client/java/view/ViewQueryResponseMapper.java","src/main/java/com/couchbase/client/java/view/ViewRetryHandler.java"],"date":1465966156000,"numberOfModifiedFiles":28},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0d9c4c1d975c16b94b2cbc15171ddf7a20b9d8cd","msg":"JCBC-1001: Fix oversight on non-committed N1QL API\n\nMotivation\n----------\nSome of the N1QL Result and Row interfaces and implementations\nare currently marked as experimental although they shouldn\u0027t since\nthey are officially supported and stable.\n\nModifications\n-------------\nRework the stability annotations on the various n1ql row and result\nfiles as well as related n1ql classes to indicate the correct\nstability.\n\nResult\n------\nThe stabilized N1QL APIs are marked like they should be.\n\nChange-Id: I5b10086f44e3b921b10c4640de5aaa1eabd43d0f\nReviewed-on: http://review.couchbase.org/67193\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/N1qlMetrics.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/N1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/N1qlQueryRow.java"],"date":1472622454000,"numberOfModifiedFiles":10},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8c1ec1d5b67a2c905d0d0e21fe103806efc09deb","msg":"Prepare 2.3.3 Release\n\nChange-Id: I09d56dad46ad3bb2d27c2d7664a5ac41c284b439\nReviewed-on: http://review.couchbase.org/67383\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Simon Baslé \u003csimon@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1473157610000,"numberOfModifiedFiles":2},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df0d6cf72e0d87bfd99586fe902ab021f61d8546","msg":"Start development of 2.3.4\n\nChange-Id: If47d4da2a9e11ce3c3be20da13077b4d79efbf9a\nReviewed-on: http://review.couchbase.org/67632\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1473778268000,"numberOfModifiedFiles":1},{"authorName":"Simon Baslé","authorEmail":"simon.basle@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Simon Baslé","committerEmail":"simon@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2a4f66d2eb4a89e461fb0dd839d60b10a28c0028","msg":"JCBC-851: Cluster Level Querying\n\nMotivation:\n-----------\nBreaking from the historical model of data manipulation at the bucket\nlevel, N1QL allows to perform JOINS over multiple buckets.\n\nEven though it *is* technically possible to perform such a query from\na Bucket (by making sure that all relevant credentials other than the\nones for the root bucket are provided in the N1qlQuery), it is a bit\ncounterintuitive.\n\nCluster-level querying aims at providing a more intuitive way of doing\nsuch bucket-spanning queries.\n\nNote that the configuration and resource management of the SDK makes it\nso that performing a N1QL query still has the prerequisite that a\nbucket is currently opened in the Cluster.\n\nModifications:\n--------------\nMirrored the query API from Bucket/AsyncBucket to Cluster/AsyncCluster.\n\nThe sync version delegates to the AsyncCluster, while the async version\nattempts to find an open AsyncBucket and delegate the execution of the\nquery to it. If no open bucket is found, the method will error with an\nUnsupportedOperationException.\n\nThe query is enriched with the credentials taken from the currently\nconfigured Authenticator. If none are available, the query method will\nerror with an IllegalStateException.\n\nThe function that allows to go from an AsyncN1qlQueryResult to a sync\none has been extracted in N1qlQueryExecutor. It is reused by the query\nimplementation in CouchbaseCluster.\n\nResults:\n--------\nN1QL queries spanning multiple buckets (including password protected\nones) can be more intuitively performed from the Cluster/AsyncCluster.\n\nThis functionality and its specific error condition (no open bucket)\nare tested in an integration test.\n\nChange-Id: I4001c492a7829f713fe6bc98945a19102d9e9da1\nReviewed-on: http://review.couchbase.org/67630\nTested-by: Simon Baslé \u003csimon@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1473777301000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"adb13cf1d687be518449a08525a3562717b96c67","msg":"JCBC-1004: Clarify expiry setting on subdoc mutate.\n\nMotivation \u0026 Modifications\n--------------------------\nThe javadoc needs to be clarified in order to avoid confusion what\nhappens to the doc expiry when mutation a fragment. Since behind\nthe scenes a full doc replace is performed (on the server), the\nbehaviour mirrors full KV operations.\n\nChange-Id: I778cb9d7c5c6a8b528018c659765ecc002ef42ce\nReviewed-on: http://review.couchbase.org/68090\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1475048777000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"23526b8839fc39b1b98c052a03ba749501de20c1","msg":"JCBC-1006: Rename PasswordAuthenticator to ClassicAuthenticator.\n\nRecent changes to the RFC proposed this renaming and this changeset\nimplements the rename accordingly.\n\nChange-Id: I81732c4f0d70732bdb6a25f2b7ee9f5f68a54589\nReviewed-on: http://review.couchbase.org/68089\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/auth/ClassicAuthenticatorTesst.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/auth/ClassicAuthenticator.java","src/test/java/com/couchbase/client/java/auth/ClassicAuthenticatorTest.java"],"date":1475046744000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8792d30cff260596bfe2aa5e26a564cc38f4ce69","msg":"Prepare 2.3.4 Release\n\nChange-Id: Ib3a541da500a208060ebd45acf911ca9eee25c99\nReviewed-on: http://review.couchbase.org/68385\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1475651228000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0bfa18e305fd120e14ce5e0b9e6ff2160892c696","msg":"JCBC-1015: Expose \"pretty\" setting for N1QL\n\nThis changeset exposes the \"pretty\" setting for N1QL queries that\nallow to reduce network overhead.\n\nNote that this is only supported with Couchbase Server 4.5.1 or\nlater.\n\nChange-Id: I577e0fb66b0e8d7b8c5bd271c686cf0318139c74\nReviewed-on: http://review.couchbase.org/68796\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java"],"date":1476687870000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"37e56a4db486ad9d7bd0e21f86a5e11b601aca60","msg":"JCBC-900 Add datastructure support\n\nMotivation\n----------\nProvide higher level data structure support over Subdoc APIs. This aims\nfor a rich developer experience by ready-to-use data structures like\nlist, map, queue and set for creating and populating couchbase\ndocuments.\n\nChanges\n-------\nProvided bucket level sync and async api for datastructures using subdoc\noperations. Added MutationOptionBuilder interface to\nbuild mutation operation contraints. Added DataStructure tests to verify\nthe correctness.\n\nResults\n-------\nExperimental data structure apis on CouchbaseBucket and\nCouchbaseAsyncBucket.\n\nChange-Id: I03c9cd72e3d097bdfa7b35957acb72f8dbef4102\nReviewed-on: http://review.couchbase.org/69167\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DataStructuresTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/datastructures/MutationOptionBuilder.java","src/main/java/com/couchbase/client/java/datastructures/ResultMappingUtils.java"],"date":1477351651000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c6f6ffa3b085873ccb43fa04306d9d17adeea086","msg":"Prepare 2.3.5 Release\n\nChange-Id: I5528736831f83a3ac71fad4b68b271a2e9526548\nReviewed-on: http://review.couchbase.org/69417\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1478090154000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f6d4fd248f08ce8a703b0cc6443b0c2a759f6a1f","msg":"JCBC-1021: Print raw data if document decoding failed.\n\nMotivation\n----------\nTo better debug flag and decoding related issues it makes sense to\nwarn-log all known details at the point of decoding.\n\nModifications\n-------------\nAdds a WARN log to the decoding section of the abstract transcoder\nwhich logs and dumps all known information for that specific document\nat the time of failure.\n\nResult\n------\nMore insight into why a document failed to decode properly.\n\nChange-Id: I356602c1bb58de03cc281c7e5b3e37ea99cb522b\nReviewed-on: http://review.couchbase.org/70146\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java"],"date":1479716496000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cb29b0125ef7b8d76129c01ceafda35d024dc102","msg":"JCBC-1024: Add \"sort\" option to FTS query.\n\nMotivation\n----------\nCouchbase Server 4.6 introduces the possibility to\napply a custom sorting order (not only on the score in\ndescending order), the Java SDK needs to expose this\noption as well.\n\nModifications\n-------------\nA \"sort\" option is provided which allows the user to specify\nan array of sort fields, including the special ones like\n\"_score\" and \"_id\" as well as using a \"-\" prefix for descending\norder.\n\nResult\n------\nFTS compatibility for Server 4.6 which allows the user to specify\na custom sort order.\n\nChange-Id: Icbb12bed5cb808b80398da23f8b8735df2c97820\nReviewed-on: http://review.couchbase.org/70148\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1479725047000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"91dbfb0aafe86a82564edbfcb7f16e1ddff71be3","msg":"JCBC-1017, JCBC-1018: Fix inconsistencies with rfc\n\nMotivation\n----------\nFix the inconsistencies with the rfc and other sdks\n\nChanges\n-------\n- Added createDocument option in MutationOptionBuilder with default\n  value as false, so only when the user sets it as true, the underlying\n  document will be created\n- Changed queue methods to be queuePush and queuePop\n- Changed list methods from listPush, listShift to be listAppend and\n  listPrepend\n- Changed setExists to setContains\n- Updated the documentation to reflect createDocument option change\n\nChange-Id: I21bf323c436c5f2a1e3955cc20a1cfca9f6dd97b\nReviewed-on: http://review.couchbase.org/69909\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DataStructuresTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/datastructures/MutationOptionBuilder.java"],"date":1479230885000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6c2c533f67044e038cb8e1567b784c541c15692f","msg":"JCBC-1026: Early unsubscription can trigger buffer leaks.\n\nMotivation\n----------\nIt has been observed that when early unsubscription happens in observable\nsequences (like firing a timeout() chained in) the up the stream byte buffers\nare not properly released and lead to buffer leaks.\n\nAs far as currently observed, the blocking API is not affected and the leak\nonly happens during early unsubscribe, not during normal operations.\n\nModifications\n-------------\nThe current logic with defer() as converting a hot into a cold observable\nis not suffcient since when the unsubscribe happens the Subject is not\nchecked again and as a result its content (which may includes pooled\nresources like ByteBufs) are leaked.\n\nAs a result this changeset proposes an alternative defer() implementation\nwhich subscribes a second time to the async subject and in parallel monitors\nthe subscription of the \"main\" observable. If a value is passed into the\nsubject and the subscription is gone, it releases the buffers to avoid\na leak. This works under the assumption that there can only be one subscriber\nand the deffered observable is indeed a subject.\n\nSo far this holds true for all conditions inside our client but to double\ncheck and make errors explicit we have an instanceof check in place which\nwill fail hard if that constraint is violated, otherwise the hidden\nside effects would be very hard to debug.\n\nResult\n------\nCode like this does not leak anymore:\n\nbucket.async().get(\"foo\").timeout(1, TimeUnit.MICROSECOND).subscribe();\n\nIt in general provides much better guarantees wich making sure that\nif an early unsubscribe happens the underlying buffers are freed if\nthey are refcounted and their count is \u003e 0 (to avoid double frees).\n\nThe joys of object pooling.\n\nChange-Id: I4889d800e3d1835705c6e94992179db93bfae378\nReviewed-on: http://review.couchbase.org/70253\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatch.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java","src/test/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatchTest.java"],"date":1479814979000,"numberOfModifiedFiles":8},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1ddd915085414639f3add18150685833e2b31d4e","msg":"JCBC-981 Add a toString() on N1qlQuery\n\nMotivation\n----------\nReturn a string when toString is called instead of Query object hashcode\n\nChanges\n-------\nOverride toString in SimpleN1qlQuery and ParameterizedN1qlQuery to\nreturn query statement string\n\nChange-Id: I29854297ac599ccbdfef99b6e512a456e8c48026\nReviewed-on: http://review.couchbase.org/70001\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/ParameterizedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/SimpleN1qlQuery.java"],"date":1479348900000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"524037fe427462f56b1352b736cfad136125485e","msg":"JCBC-1020 Collections interface for datastructures\n\nMotivation\n----------\nCreate a separate classes for the data structures and provide a\ncollections interface\n\nChanges\n-------\nPorted from cbd-commons repo.\n\nResults\n-------\nCouchbaseArrayList, CouchbaseMap, CouchbaseQueue, CouchbaseArraySet collection\nclasses added.\n\nChange-Id: Idae1953c3dc3e4e0f174f6256edc57142e501bff\nReviewed-on: http://review.couchbase.org/69991\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/datastructures/DataStructuresTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayListGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayListTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySetGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySetTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseMapGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseMapTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/GuavaTestUtils.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayList.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySet.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseMap.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseQueue.java","src/main/java/com/couchbase/client/java/datastructures/collections/iterators/JsonArrayDocumentIterator.java"],"date":1479345274000,"numberOfModifiedFiles":14},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bd853ed1fde4908fd84d5f60fde8b05985922840","msg":"JCBC-1016 Throw PathNotFound instead of SUBDOC_PATH_NOT_FOUND\n\nMotivation\n----------\nThrow PathNotFound exception on get paths instead of\nSUBDOC_PATH_NOT_FOUND\n\nChanges\n-------\nCheck response status on subdoc lookup and throw PathNotFoundException\ninstead of generic CouchbaseException with subdoc reponse status. This\nis added for mapGet and listGet methods.\n\nChange-Id: Ib64c5e1f1c2950bdb1df7d6511f69bfc859c5c58\nReviewed-on: http://review.couchbase.org/69995\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/datastructures/DataStructuresTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1479347445000,"numberOfModifiedFiles":4},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e82edf47e288b8e564797db612632473c59b43bc","msg":"JCBC-1023 Ignore FTS tests if search service not found\n\nMotivation\n----------\nSince FTS is an individual service, we may not be\nenabling it always while running integration tests.\n\nChanges\n-------\nAdd ignoreIfSearchServiceNotFound to test context, which tries a search\nquery and does not continue with the tests if a\nServiceNotAvailableException is returned.\n\nResults\n-------\nFts tests will be ignored if search service is not found\n\nChange-Id: If76b8fa77b09d3597358c659ec5bfe26fa3e6e9d\nReviewed-on: http://review.couchbase.org/70046\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1479415548000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"850073816dabd0f4ef1b4ad7a3d87e8a5dc21633","msg":"Override core-io builder.\n\nChange-Id: I76f83715db1564718dcbe4725b65461ffe347a31\nReviewed-on: http://review.couchbase.org/70551\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1480665801000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0129b3bfaab3bb01b3de8fba57c6504e53c3ec7f","msg":"Prepare 2.3.6 Release\n\nChange-Id: Ia9b068bef0cf25b7c409064a1c7b60d12ef3ea88\nReviewed-on: http://review.couchbase.org/70682\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1481032589000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ed14e6844a2a86f41ad8b44052a0d983ab510958","msg":"Start 2.4.0 Development\n\nChange-Id: I57604b69c722b4263366a9e26272df4bea772f15\nReviewed-on: http://review.couchbase.org/70865\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1481542602000,"numberOfModifiedFiles":1},{"authorName":"Bernal Varela Gómez","authorEmail":"bernalvarela@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"349d0eabaeda44da6830281c800e3e74c6047ba2","msg":"Revision of the Exceptions constructors with no params\n\nMotivation\n----------\nAll the java client exceptions having a a method with no parameters dont make a super call.\nThe oracle compiler in compilation time add this call but all the exceptions have as father\n the CouchbaseException and his no params constructor nor have the super call.\n\nThis is a problem because the stack trace is never initialized.\n\nModifications\n-------------\nAdd super() to all the constructors.\n\nResult\n------\nThe Exception is correctly initialized.\n\nChange-Id: I24460e247cebc8d7b4275ec55f22cc7591693485\nReviewed-on: http://review.couchbase.org/71182\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/error/BucketAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/BucketDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/CASMismatchException.java","src/main/java/com/couchbase/client/java/error/CouchbaseOutOfMemoryException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DesignDocumentException.java","src/main/java/com/couchbase/client/java/error/DocumentAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/DocumentDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/DurabilityException.java","src/main/java/com/couchbase/client/java/error/FlushDisabledException.java","src/main/java/com/couchbase/client/java/error/IndexAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/IndexDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java","src/main/java/com/couchbase/client/java/error/InvalidPasswordException.java","src/main/java/com/couchbase/client/java/error/RequestTooBigException.java","src/main/java/com/couchbase/client/java/error/TemporaryFailureException.java","src/main/java/com/couchbase/client/java/error/TemporaryLockFailureException.java","src/main/java/com/couchbase/client/java/error/TranscodingException.java","src/main/java/com/couchbase/client/java/error/ViewDoesNotExistException.java","src/main/java/com/couchbase/client/java/repository/mapping/RepositoryMappingException.java"],"date":1482313088000,"numberOfModifiedFiles":20},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e783f9ca54a9ee32454da586dc023d0eef9e3639","msg":"JCBC-1022, JCBC-1032: Stabilize APIs for the 2.4.0 series\n\nMotivation\n----------\nThis changeset updates the stability annotations which either should\nbe stabilized already or are intended to be for the 2.4.0 timeframe:\n\n\t- Bucket-Level Datastructures\n\t- Authenticator\n\nChange-Id: I102d034ee5cc38d35f2acf9bf01bf1908fb9ebf1\nReviewed-on: http://review.couchbase.org/71299\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/auth/Authenticator.java","src/main/java/com/couchbase/client/java/auth/ClassicAuthenticator.java","src/main/java/com/couchbase/client/java/auth/Credential.java","src/main/java/com/couchbase/client/java/auth/CredentialContext.java","src/main/java/com/couchbase/client/java/datastructures/MutationOptionBuilder.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1482852263000,"numberOfModifiedFiles":9},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"80e08f319f2a763f0d3078e628fc036b4a37ab1f","msg":"JCBC-1013: Make sub-document failures clear that server 4.5 is required\n\nMotivation\n----------\nMake error message more clear on acccess error when subdoc operations\nare not supported\n\nChanges\n-------\nThrow couchbase exception which indicates the server version required\nfor subdocument operations\n\nChange-Id: I2bdef1fa1b584745e01069d03aad6cf167b20e84\nReviewed-on: http://review.couchbase.org/71322\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java"],"date":1482907181000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"97a0a5dd0a069dacdef445948d058623776690ca","msg":"JCBC-974: Throw DesignDocumentDoesNotExist on bucket manager\n\nMotivation\n----------\nThrow DesignDocumentDoesNotExist for consistency reasons on bucket\nmanager\n\nChanges\n-------\nAdd new exception DesignDocumentDoesNotExist and change design document\nfetch, publish, remove apis to throw it if the design document does not\nexist.\n\nResult\n------\nConsistent with other apis for document, view, index which throw\nDoesNotExist exception\n\nChange-Id: Ie29dd53ebefd3e999b696cb15199353b382a2bc1\nReviewed-on: http://review.couchbase.org/71319\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DesignDocumentTest.java","src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/error/DesignDocumentDoesNotExistException.java"],"date":1482904360000,"numberOfModifiedFiles":7},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1a9c85be8b9a5737b596ec584d296c72a09912b4","msg":"JCBC-1029: Long running prepared query observables may get released\nearly\n\nMotivation\n----------\nLong running prepared query observable may get released early as the\nretry handler waits for error observable to be completed.\n\nChanges\n-------\nUse http response status to detect if the query has failed and then peek\nfor retry in error observable. Prepared tests use travel-sample bucket\nas it requires long running query. Prepared tests are ignored by default.\n\nResults\n-------\nLong running query observable are not released early.\n\nChange-Id: I0fc71041f4567f5904b538bcb5688358b571bf81\nReviewed-on: http://review.couchbase.org/70951\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1481742988000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a2ebbc9641c741ddff966ed5917e86861a6a35a2","msg":"Use connection string from core-io due to JVMCBC-366\n\nChange-Id: I710d1fc00d1426f3f7e7489a02f1b1e46dc13301\nReviewed-on: http://review.couchbase.org/71317\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/ConnectionString.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java"],"date":1482887288000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ea582663fa44daa0edd68538bce0fbef2f1c0321","msg":"JCBC-1012: Add support for BigInteger and BigDecimal\n\nMotivation\n----------\nIt has been reported several times (on the forums and through customer\ninteractions) that BigDecimal and BigInteger support through the JsonObject\nand JsonArray types would be appreciated.\n\nModifications\n-------------\nThis changeset enables this functionality and adds test cases. Both JsonObject\nand JsonArray now have more getters and setters for these types, but there\nis one gotcha. By default jackson will read the BigDecimal as a double, which\nis the type returned. For very long numbers there might be precision loss.\n\nTo combat this, the system property com.couchbase.json.decimalForFloat has\nbeen introduced which, when set to true, will always read doubles as BigDecimal\non the jackson side and therefore trade speed for accuracy. Separate tests\nhave been added to assert this on a unit-test level.\n\nResult\n------\nIt is now possible to use BigInteger and BigDecimal types the same way as\none would do with other already supported types.\n\nChange-Id: I357a9533692d705510018228fcadeec760f811f5\nReviewed-on: http://review.couchbase.org/71435\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/document/json/JsonArray.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/JsonValue.java","src/main/java/com/couchbase/client/java/transcoder/JacksonTransformers.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java","src/test/java/com/couchbase/client/java/transcoder/BigDecimalExactConversionTest.java"],"date":1483102843000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"18486ca84cc30d438ba516985abb19ecb08a9baf","msg":"Prevent NPE on toString()\n\nChange-Id: If9c048963233597f4f184d2ae01317dcd207eb2c\nReviewed-on: http://review.couchbase.org/71468\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/ParameterizedN1qlQuery.java"],"date":1483369507000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4f51e48a6807b5374591a511a59ce67e190ae80d","msg":"Ignore Guava collection tests by default.\n\nWhen they are enabled by default and used with the maven command\nline runner it seems like the test suite never ends. We need to\nlook into this separately but for now we can unblock the testing.\n\nChange-Id: I257e3dc6181e0e1f472f91c5b12eaff99c04a79f\nReviewed-on: http://review.couchbase.org/71470\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayListGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySetGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseMapGuavaTest.java"],"date":1483381720000,"numberOfModifiedFiles":3},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2e72f58f0eaa695dcac98a7f2c2d1312a136b8ba","msg":"Fix failing N1QL units tests by changing response parse status\n\nMotivation\n----------\nRetry for failed N1ql prepared query now expects that the http response\nstatus is a failure due to the fix for JCBC-1029\n\nChanges\n-------\nPreviously the stubbed response had success status as true indicating the\nstatus code as success eventhough the query was not successful. Modified\nit as false.\n\nResults\n-------\nN1ql prepared unit tests pass\n\nChange-Id: Ia95ed19d11e9ae29f776f87a545d30c82b7304d3\nReviewed-on: http://review.couchbase.org/71474\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1483416914000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b7f9ccd04df42ad477394c966111dce3b0f7bab3","msg":"Prepare 2.4.0 Release\n\nChange-Id: If48c7fad09c8043af6b5eb8077234a13f0344d17\nReviewed-on: http://review.couchbase.org/71590\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1483614773000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"44bb66fb04910992a75377807e254d7ccf38368e","msg":"Start 2.4.1 Development\n\nChange-Id: I3b57ec404f02fbaafe9fc3e3db71b51d87a613b2\nReviewed-on: http://review.couchbase.org/71598\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1483621984000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cd331988ff42047063a79e19cb55a775d106d825","msg":"JCBC-1035 Fix flaky N1QL cluster level query integration tests\n\nMotivation\n----------\nN1QL cluster level query tests were quite flaky because the buckets shared the\nsame cluster object which uses one of the open buckets in bucket cache to\nexecute the query. As the bucket cache is a concurrent hash map, there are\nno order guarantees.\n\nChanges\n-------\nDont share cluster between the buckets. Also used request_plus scan\nconsistency as the read pretty soon after write.\n\nResults\n-------\nTests consistently pass\n\nChange-Id: Iaf06b9c82dac8757fceb1575c23e84a583396206\nReviewed-on: http://review.couchbase.org/71562\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java"],"date":1483556961000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5b841ad6a2210164f4123d3a9d2b56f4c692dba2","msg":"JCBC-1037: Fail FTS Query with IndexDoesNotExistException\n\nMotivation\n----------\nRight now if an index does not exist we don\u0027t fail with the right\nerror message for FTS.\n\nModifications\n-------------\nThis changeset makes the response explicitly check if the index\ndoes not exist and if so raises an IndexDoesNotExistException\nas part of the error chain with a FTS response.\n\nBy the way, this also fixes the longer standing issue that the\nFTS queries should be skipped if the index is not found, leading\nto failing tests.\n\nResult\n------\nProper awareness if an FTS index doesn\u0027t exist, and also fixing\nfailing tests and instead ignoring them.\n\nChange-Id: I721677bfbb489ebd92ee9b91ab7325fc2f71cf59\nReviewed-on: http://review.couchbase.org/71856\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java"],"date":1484140510000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"687c268351a0e1b57c2284d5fb832bd93125c76d","msg":"JCBC-999: Redispatch config messages if failed.\n\nMotivation\n----------\nIf messages going down the config service in core-io, because the\nsockets are opened dynamically and other components depend on this\nfail fast mode (while not ideal), such messages need to be retried\naggressively to overcome issues where a node is down for example.\n\nModifications\n-------------\nSimple retry logic has been added to the config service messages,\nretrying after 100ms and as a result providing a better experience,\neven if a node is down or not reachable.\n\nIn the future, if needed, we can make this configurable but for\nnow lets just stick with sane defaults.\n\nResult\n------\nBucket and Cluster-level config messages have a much higher chance\nof succeeding, even under individual node failures.\n\nChange-Id: If27355d444fc411dd933a65e74c07816cb5dd376\nReviewed-on: http://review.couchbase.org/71897\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1484222581000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4746804c782b960fb94256fffe69b962b24985f0","msg":"Prepare 2.4.1 Release\n\nChange-Id: I634b72a08d243eab3c09135222403224e9813d5b\nReviewed-on: http://review.couchbase.org/72179\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1484746966000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9dbe09834ce5acb59e9e0c49211b9683f756dc0a","msg":"Override core-io CoreEnvironment builder APIs.\n\nChange-Id: Ie6e7dd984f75e5eb96d17472a4a7c4a4a4a13ca8\nReviewed-on: http://review.couchbase.org/73194\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1486382443000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ceff7a42d086ade4ebffb8f47c6d636424beaea1","msg":"JCBC-1028 Add XATTR support\n\nMotivation\n----------\nAllow extened attribute access in subdocument api\n\nChanges\n-------\nBuilder for sub-document options. Moved createParents, added extended\nattribute flag in the options builder. Deprecated the overloads with\ncreateParents and added overloads with builder. Verified using\nSubdocumentExtendedAttributesTest, on a separate class from Subdocument tests\nas they are enabled on different server versions\n\nResults\n-------\nExtended attributes can be accessed by setting attributeAccess in\noptions.\n\nChange-Id: I260107b822795cd2a4360dc3b617bd6cce9a1fa1\nReviewed-on: http://review.couchbase.org/72437\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOptionsBuilder.java","src/main/java/com/couchbase/client/java/util/features/CouchbaseFeature.java"],"date":1485314702000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"33918dfc3c8195b89fccbc02a1965b5ee96fd1f6","msg":"Prepare 2.4.2 Release\n\nChange-Id: Ib92efee8031ec82ffb9988c115276d7bf55ca548\nReviewed-on: http://review.couchbase.org/73426\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1486625234000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"990e41c05b760f102ec4c0b750775379ee176b73","msg":"JCBC-1030: Add support for Couchbase Analytics\n\nMotivation\n----------\nThis changeset adds initial support for Couchbase Analytics. It\nis mainly a copy of the N1QL codebase, removing all of the yet\nunsupported features as well as renaming those parts that make\nsense.\n\nModifications\n-------------\nClasses have been copied and renamed, the bucket API has been\nexpanded accordingly.\n\nYet unsupported:\n\t- Paremeterized Queries\n\t- Prepared Queries\n\t- Cluster Level Querying\n\t- If enabled, needs to work on all nodes\n\t- setting server side timeout\n\nResult\n------\nExperimental / Uncommitted support for Analytics.\n\nChange-Id: I26c90531e8a60a0c467d559e17c5fac40f984f80\nReviewed-on: http://review.couchbase.org/73513\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/AnalyticsTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsMetrics.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQuery.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/SimpleAnalyticsQuery.java","src/main/java/com/couchbase/client/java/auth/ClassicAuthenticator.java","src/main/java/com/couchbase/client/java/auth/CredentialContext.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/query/N1qlQueryRow.java","src/test/resources/log4j.properties"],"date":1486744149000,"numberOfModifiedFiles":25},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dd11d2ae27b6f0c0a2c3382f894b6c47d9be045f","msg":"JCBC-1043: Add toString for N1QL Rows and Sync Result\n\nMotivation\n----------\nIf SELECT RAW was used to print out a row, the code\nwould fail since it would not be parsable into a\nJsonObject.\n\nModifications\n-------------\nThe code has been fixed to just turn it into a string\nand dump it that way, enabling all kinds of output\ninstead of just a JsonObject.\n\nThis change also adds a toString to the sync N1qlResult\nsince it makes sense to add it for utility purposes.\n\nResult\n------\nPropery printing for Rows with Select RAW as well as\nsync results.\n\nChange-Id: Ib4103a42fb93fce9b83b82184dee6cacab4c3e82\nReviewed-on: http://review.couchbase.org/74519\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryRow.java"],"date":1488458904000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"158d0d50f02bf44d17688b5edf203ef31e291db2","msg":"JCBC-1045: Pre-check connection string to avoid IOOB exception\n\nMotivation\n----------\nA community member reported an IndexOutOfBounds when working with\nthe cluster manager. Looking at the code it looks like the connection\nstring did not contain a single host.\n\nModifications\n-------------\nThe code now checks if there is at least a hostname loadable from\nthe parsed connection string and if not fails with a helpful\nmessage instead of IOOB.\n\nResult\n------\nBetter error diagnostics when the connection string is not correct.\n\nChange-Id: I40fd2ab89eec30cfe4cc3ac5292daf1e4cc46af3\nReviewed-on: http://review.couchbase.org/74518\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1488458080000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a6074508c663956fecd6743a387619809e73949d","msg":"Prepare 2.4.3 release\n\nChange-Id: I04966004483905d8e64d523b995d7ec78f46aba2\nReviewed-on: http://review.couchbase.org/74778\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1488902224000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"46e51a92590bf2e02441da7758d444082a424ee7","msg":"Start 2.4.4 development\n\nChange-Id: I90978ef11adae6101afa7552b29e948af9fcff59\nReviewed-on: http://review.couchbase.org/75074\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1489429837000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9e6994b88246faabecd0837e2c77d5355b8d022","msg":"JCBC-1058 Add support for rbac user management\n\nMotivation\n----------\nAdd support for user management apis\n\nChanges\n-------\nAdded upsertUser, getUsers and removeUser apis in both sync and async\ncluster manager.\n\nResults\n-------\nUser management support for test scaffolding.\n\nChange-Id: I7cc1f34c3e1cec71eba20dd81b449ef77ca30338\nReviewed-on: http://review.couchbase.org/75266\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/UserManagementTest.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/cluster/User.java","src/main/java/com/couchbase/client/java/cluster/UserRole.java","src/main/java/com/couchbase/client/java/cluster/UserSettings.java"],"date":1489676436000,"numberOfModifiedFiles":8},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e772eb296987afda90e7ec9a82113431a9e3a364","msg":"JCBC-1060 Add support for username/password auth in support of RBAC\n\nMotivation\n----------\nAllow username/password to open bucket with PasswordAuthentictor\n\nChanges\n-------\n1) Overloads openBucket with just bucket name\n2) Adds Password authenticator to Cluster\n3) Adapts to core changes by passing username in openbucket, query, search,\nanalytics, cluster management, bucket management requests\n4) Consumes username from connection string\n\nResults\n-------\nAllow username/password authentication. Verified using integration\ntests.\n\nChange-Id: Ifaab236537c3629b3c6d82d5ce13501e0cbdeb04\nReviewed-on: http://review.couchbase.org/75263\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/rbac/BucketAndClusterManagerUserTest.java","src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/QueryServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/SearchServiceUserTest.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/main/java/com/couchbase/client/java/auth/ClassicAuthenticator.java","src/main/java/com/couchbase/client/java/auth/PasswordAuthenticator.java","src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/error/MixedAuthenticationException.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/main/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutor.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1489670508000,"numberOfModifiedFiles":23},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5666c32355f2dd4b2f7344cb5fcfa13e0c8005ac","msg":"JCBC-1062: Optimize LegacyTranscoder encoding for strings\n\nMotivation\n----------\nThe LegacyTranscoder still uses the slower JVM-based encoding for\nstrings and it rather should use the same optimized encoding\npath which we use for RawJsonDocument and others.\n\nModifications\n-------------\nThis code adds a \"fastpath\" for the string encoding and moves\nall the other options into a nested else block so that the buffer\nis only allocated if needed (and not twice w/ overridden by the\noptimized method).\n\nResult\n------\nFaster encoding for the string path.\n\nChange-Id: Id67e7f7b905491b3bb5be5f1bf0552a3fd264b79\nReviewed-on: http://review.couchbase.org/75774\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java"],"date":1490612279000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1d63bc1da9758ddeef817190985918136c12365b","msg":"JCBC-1063: Never compress JSON in LegacyDocument.\n\nMotivation\n----------\nIn spymemcached, the code checks if the string is JSON\nand if it is it skips compression so the server can\nunderstand it properly.\n\nModifications\n-------------\nUp until now the LegacyTranscoder didn\u0027t check for this\nfact and as a result did compress larger JSON docs which\nwould then not be readable by the server properly.\n\nThis changeset ports the (not bulletproof) JSON check from\nspymemcached and adds a test case to make sure that JSON is\nindeed not compressed even if larger than the compression\nthreshold.\n\nResult\n------\nbetter compatibility with spymemcache and making sure that\nlarger JSON docs are not compressed.\n\nChange-Id: I00307701caf577d91cb7d351207c6c26897ee284\nReviewed-on: http://review.couchbase.org/75779\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/LegacyTranscoder.java","src/test/java/com/couchbase/client/java/transcoder/LegacyTranscoderTest.java","src/test/resources/data/legacy/large.json","src/test/resources/data/legacy/large_nonjson.txt"],"date":1490612738000,"numberOfModifiedFiles":4},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9b60799fc49fd691eefbf9bd7b6b5663c884787","msg":"Fix cleanup on integration tests\n\nIf the tests are ignored based on cluster version number, the cleanup\nends up throwing NRE on some tests, so check if ctx is not null before calling\ndisconnect.\n\nChange-Id: I9389db46305b162108b319958c0a4a2c50b3a9a2\nReviewed-on: http://review.couchbase.org/75839\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/integration/java/com/couchbase/client/java/UserManagementTest.java","src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/rbac/BucketAndClusterManagerUserTest.java","src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/QueryServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/SearchServiceUserTest.java"],"date":1490661379000,"numberOfModifiedFiles":8},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2374797e7257a5caaf2795bd936989d4ec4ea2e5","msg":"JCBC-1065 Fix api doc to correctly mention about\nDesignDocumentDoesNotExistException\n\nChanges\n------\nFix api documentation which was not correctly updated to mention\nDesignDocumentDoesNotExistException added by JCBC-974 in the design\ndocument management api\n(getDesignDocument, removeDesignDocument, publishDesignDocument).\n\nChange-Id: Ied20aff750055ca2b8b9d38bceddfd077eaaa644\nReviewed-on: http://review.couchbase.org/76074\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java"],"date":1490901636000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"21952c4b6bf7bb242eb68b4f524919fa29820b25","msg":"JCBC-1061 Add query profile info to N1qlQuery result\n\nMotivation\n----------\nIf query profile info is requested using a raw param, the query response\ncontains profile information and it is parsed if using yasjl parser. Expose\nthis information on N1qlQueryResult.\n\nChanges\n-------\nAdd profileInfo JsonObject to N1qlQueryResult and the corresponding observable to\nAsyncN1qlQueryResult. Map the bytebuf emitted by QueryResponse to jsonObject\nby parsing it using objectMapper. Default is an empty object. Added changes to\nexisting tests to include profileInfo.\n\nResults\n-------\nQuery profile info should be available in N1qlResult and AsyncN1qlResult\nif requested.\n\nChange-Id: Ia077c7c3eac9a9f6d5fbe3e78ac34cf4c3d0c4a9\nReviewed-on: http://review.couchbase.org/76072\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/main/java/com/couchbase/client/java/query/AsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/DefaultN1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/N1qlQueryResult.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/test/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryResultTest.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1490899547000,"numberOfModifiedFiles":8},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ce08488c1a761a357d2be5611434eb0c553a3bc3","msg":"Prepare 2.4.4 release\n\nChange-Id: I260c6cf4574c9a9c7cbd53c0cd0ddd0bc84a081e\nReviewed-on: http://review.couchbase.org/76268\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e\nTested-by: Matt Ingenthron \u003cmatt@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1491328541000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"37180127953f23cc46ebf097807f8c28ddf0487c","msg":"Prepare for next development iteration\n\nChange-Id: Ib44e97cbfd449c002aed7713a6577d7bc04884e3\nReviewed-on: http://review.couchbase.org/76435\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1491516552000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d04714b15ef3dbac4e2283120b9f10c6752796cc","msg":"JCBC-1067 Expose configPollInterval from CouchbaseEnvironment builder\n\nMotivation\n----------\nPast release added the tuneable in Core Environment, add this info as override\non Couchbase Environment builder so it correctly returns the current\nCouchbaseEnvironment builder instead of the super class CoreEnvironment builder.\n\nChanges\n-------\nAdded an override on CouchbaseEnvironment builder.\n\nChange-Id: Ibe072d79480d693920b106d4cad7016508a1b400\nReviewed-on: http://review.couchbase.org/76433\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1491515977000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"98ab6edac23bd404aa45e575736ee5da9ec14d82","msg":"JCBC-1068 Add dsl support to ANY AND EVERY expression\n\nThanks and Credits to the original author: uri.brodsky@gmail.com\n\nChange-Id: I680d2211b7b7e1f91d3bd617aef8c15b8859708f\nReviewed-on: http://review.couchbase.org/76437\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/functions/Collections.java","src/test/java/com/couchbase/client/java/query/dsl/functions/CollectionsTest.java"],"date":1491517397000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4bf8f9ffaa1cb9845bc6ae88a0ef55cfac0d404a","msg":"JCBC-1072: Add covenient authenticate overload.\n\nMotivation\n----------\nMost of the time when user-based authentication is used one just\nneeds to supply a username and a password. Right now this is only\npossible by doing:\n\n cluster.authenticate(new PasswordAuthenticator(\"user\", \"pw\"));\n\nThis adds some friction to the user experience since the user\nfirst needs to figure out what an authenticator is, which instance\none should be using and so forth.\n\nModifications\n-------------\nThis changeset adds a simple overload which should suffice most\nof the time and will allow the user just to authenticate with\na username and a password string like this:\n\n cluster.authenticate(\"user\", \"pw\");\n\nThe old overload is still available for advanced use cases of\ncourse.\n\nResult\n------\nMuch easier way to authenticate against a cluster with user\ncredentials.\n\nChange-Id: Icb8aa20fd5f3da44436dd5e8745ebdb95fe11173\nReviewed-on: http://review.couchbase.org/76637\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1491922017000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ddf666f78fa693d3cb2275052fb042bb92e46288","msg":"JCBC-1055: Add support for ephemeral bucket management.\n\nMotivation\n----------\nThis changeset adds support for ephemeral bucket management, since\nadding and removing ephemeral buckets is needed once Couchbase\nServer 5.0 ships.\n\nModifications\n-------------\nBoth the encoding and decoding part of BucketSettings has been adapted\nso that the new EPHEMERAL bucket type is respected.\n\nNote that there are still advanced options missing on the builder for\nall kinds of bucket types, but those can/will be added in subsequent\nchangesets.\n\nTests added for 5.0+.\n\nResult\n------\nSupport for ephemeral bucket management.\n\nChange-Id: I93f6c51af0665cd4530819f03523e4738fbc7759\nReviewed-on: http://review.couchbase.org/76638\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/EphemeralBucketTest.java","src/main/java/com/couchbase/client/java/bucket/BucketType.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketInfo.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1491920859000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4c6ff7ec61c2a176e4b4f616bc1df371de626100","msg":"JCBC-1066: Add support for FTS Geo \u0026 TermRange Queries \u0026 Advanced Sort.\n\nMotivation\n----------\nCouchbase Server 5.0 ships with some new FTS capabilities which need to\nbe exposed properly in the SDK these are:\n\n - Geo Bounding Box Query\n - Geo Distance Query\n - Term Range Query\n - Advanced Sorting (Field, GeoDistance, Id, Score)\n\nModifications\n-------------\nThis changeset adds the three new query types as well as the new sorting\ncapabilities exposed as a simple builder, very similar to the facets API.\n\nUnit tests have been added to make sure the new capabilities produce\nthe query as intended.\n\nIn addition, the sort param also allows for a \"JsonObject\" to be passed in,\nthis allows for forwards compatibility when a new sort mechanism is added\nin future server versions, the user can always fall back to that type\nand still benefit from querying.\n\nResult\n------\nSupport for the new querying mechanisms as well as advanced sorting\ncapabilities.\n\nChange-Id: I8f4caca1629925bc0caaacb82f39306aace87bf2\nReviewed-on: http://review.couchbase.org/76246\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/queries/GeoBoundingBoxQuery.java","src/main/java/com/couchbase/client/java/search/queries/GeoDistanceQuery.java","src/main/java/com/couchbase/client/java/search/queries/TermRangeQuery.java","src/main/java/com/couchbase/client/java/search/sort/FieldMissing.java","src/main/java/com/couchbase/client/java/search/sort/FieldMode.java","src/main/java/com/couchbase/client/java/search/sort/FieldType.java","src/main/java/com/couchbase/client/java/search/sort/SearchSort.java","src/main/java/com/couchbase/client/java/search/sort/SearchSortField.java","src/main/java/com/couchbase/client/java/search/sort/SearchSortGeoDistance.java","src/main/java/com/couchbase/client/java/search/sort/SearchSortId.java","src/main/java/com/couchbase/client/java/search/sort/SearchSortScore.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java","src/test/java/com/couchbase/client/java/search/queries/GeoBoundingBoxQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/GeoDistanceQueryTest.java","src/test/java/com/couchbase/client/java/search/queries/TermRangeQueryTest.java"],"date":1491302648000,"numberOfModifiedFiles":16},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"46445ce0e0581b7dd3513d3cbe28e748bf3de8aa","msg":"Fix compilation errors\n\nChange-Id: Ie11efcd1a9e1cd5dc0b43acc89b5c9ca497fde30\nReviewed-on: http://review.couchbase.org/77432\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/sort/SearchSort.java","src/main/java/com/couchbase/client/java/search/sort/SearchSortGeoDistance.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1493289119000,"numberOfModifiedFiles":3},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3b7e03ce8ea28692c5a7287956fc416f26247496","msg":"JCBC-1074 Support GetUsers change in returning domain instead of type\n\nMotivation\n----------\nServer returns User\u0027s domain instead of type\n\nChanges\n-------\nRead domain from server response. User object will also contain domain\ninstead of type.\n\nChange-Id: I80b143282345a183368b5d46d141addd74b4132c\nReviewed-on: http://review.couchbase.org/77257\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/User.java"],"date":1493042051000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d9410a5037c2a0a4a8013fc83ff17583b522e35e","msg":"Prepare 2.4.5 release\n\nChange-Id: I8469a68b4ea1c34adf8d1d955a6a76acd4281329\nReviewed-on: http://review.couchbase.org/77612\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1493747240000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"edc297f04f8801cb8a085685b1c0f21f510772b4","msg":"JCBC-1078 Rename attributeAccess to xattr as per RFC change\n\nChange-Id: I3eec47b3d02d249de957ec62e5b8832e33a337fd\nReviewed-on: http://review.couchbase.org/77737\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupSpec.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOptionsBuilder.java"],"date":1493929378000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cf00088185b233161bc5227bcf646824c31372f9","msg":"2.4.6 Development\n\nChange-Id: I25a4b48fe11c29b7de2732b2549b8694da08ccc1\nReviewed-on: http://review.couchbase.org/78709\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1496051008000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a324eece999fa6c9ad25bfbaf98d2b99fcbf7d10","msg":"Adapt java-client for recent core-io changes.\n\nMotivation\n----------\nThis changeset makes changes to java-client in order to use the\nchanged internal API, modified in recent JVMCBC-* changes.\n\nChange-Id: Ib455c55a7e0f184b1085e6ed34c13396d0a723cb\nReviewed-on: http://review.couchbase.org/78720\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/util/NodeLocatorHelper.java","src/test/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManagerTest.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java"],"date":1496122820000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6376afbd6265172da8bbcdbd389e3c0211a4e753","msg":"JCBC-1079: Avoid implict reverse DNS lookups.\n\nMotivation\n----------\nDuring bootstrap when assembling the seed nodes, we don\u0027t need\nto use the hostname but can use the host address directly, which\nwill avoid reverse DNS lookups.\n\nModifications\n-------------\nCodepaths have been modified to use the address instead of the\nhostname. Note that down in core-io the NetworkAddress has been\nintroduced but we don\u0027t need to force it into these codepaths\njust yet.\n\nResult\n------\nNo implicit reverse DNS lookups.\n\nChange-Id: I29bed3350cfb642c0bb6e75b2d95e0b65bd3f4c0\nReviewed-on: http://review.couchbase.org/78765\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1496142738000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ea72a9578cbec3516ce64c385ed3ebaacfa555a0","msg":"Change data_reader_writer role to separate roles data_reader, data writer\n\nServer has updated them to be separate roles\nhttps://github.com/couchbase/ns_server/commit/0038200eddba441182cf1743420cef78bad88029\n\nChange-Id: I2bb8c14879106def32e145917fbf603e96523085\nReviewed-on: http://review.couchbase.org/78197\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java"],"date":1494959527000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cda8793571c9dd17f40cd796fd238bdf896d91b8","msg":"JCBC-1080 Expose full doc set/get through subdoc builders\n\nMotivation\n----------\nSupport full doc set/get with xattrs using subdoc\n\nChanges\n-------\nAdd upsert() and get() for full document set and get in MutateIn and\nLookupIn builders respectively. Expose createDocument in MutateIn\nbuilders for allowing to send docFlags through\nSubMultiMutationDocOptionsBuilder.\n\nResults\n-------\nFull document set/get is now possible. Tests are covered in\nSubdocumentExtendedAttributesTest.\n\nChange-Id: I4137729c664c7016b4e03b59f2436e8ca39f3c05\nReviewed-on: http://review.couchbase.org/77723\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java"],"date":1493908071000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9d2852a52c777463830a4abde7f285abe5e72bf2","msg":"Prepare 2.4.6 Release\n\nChange-Id: I916a319045d9d708a68b86c5a3cf5fef07c16940\nReviewed-on: http://review.couchbase.org/79116\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1496768311000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"446aff72a493ac5d0fae487dfd1a0d00df7b5e9c","msg":"Start 2.4.7 Development\n\nChange-Id: I68d37332d5eb1363f4a391b72b235841c6e808e2\nReviewed-on: http://review.couchbase.org/79717\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1497970888000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"323f8ffc9486eb04466228fcdf525fb2b0c39a79","msg":"Override core-io builder for certAuthEnabled.\n\nChange-Id: Ie0e95a7b38c2f8b8e85118748971f247cbeb49e7\nReviewed-on: http://review.couchbase.org/80007\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1498450778000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"aab50ea8f9674a4681443101d5da7f9b8c9c7770","msg":"JCBC-1090: Fixes DNS SRV Regression caused by JCBC-1079\n\nMotivation\n----------\nJCBC-1079 introduced a regression into DNS SRV bootstrap where\na NPE is raised incorrectly, preventing it from working correctly.\n\nModifications\n-------------\nIt turns out when a DNS SRV host string is passed in it doesn\u0027t make\nmuch sense to try to extract an IP address from it, since the whole\npoint is getting SRV records (its not an A-Record).\n\nResult\n------\nFixes the regression and restoring functionality back from 2.4.5 to\nmake DNS SRV work again.\n\nChange-Id: Ibc42b763014656fa88b19de83f750218e45a3cf3\nReviewed-on: http://review.couchbase.org/80008\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java"],"date":1498468583000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"277841036732a78738be5c04979f8976415b3071","msg":"Supporting client changes for JVMCBC-430\n\nMotivation\n----------\nSet createdocument value in AsyncMutateInBuilder in Single path mutation\ncommands\n\nChanges\n-------\n- Pass the createDocument value to Single path mutation requests in core\n\nResults\n-------\ncreateDocument value is used. Verification tests in\nSubDocumentDocumentFlagsTests pass.\n\nChange-Id: Id2d14dd3d2d1339eadbd4b953551cef0a05e5f3f\nReviewed-on: http://review.couchbase.org/79393\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentDocumentFlagsTests.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1497308987000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"58538c0aeada41b6b3252b3b49aa7840496512e7","msg":"Supporting changes for JVMCBC-423\n\nMotivation\n----------\nTrack the subscriber for not sending timed out operations\n\nChanges\n-------\nAdds the subscriber to the request on subscription to deferAndWatch cold\nobservable for async calls. The subscription is stored and unsubscribed\non timeouts for blocking calls.\n\nResults\n-------\nSubscription information is now part of the request. Verified with an\nintegration test.\n\nChange-Id: Ifd71e5f8704c81d7fd20c64f2e2d08ce395b0505\nReviewed-on: http://review.couchbase.org/77516\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatch.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/test/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatchTest.java"],"date":1493420150000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4e4267911abbce2afaeb7f6d2261db7fd2675997","msg":"JCBC-1076: Add support for \"Enhanced Error Messages\"\n\nMotivation\n----------\nIn combination with the corresponding core-io changes, this\nchangeset adds support for \"enhanced error messages\", which\nallows the server to send more detailed information on\nerrors if available.\n\nModifications\n-------------\nThe CouchbaseAsyncBucket code is modified to convert error\nmessages into \"enhanced\" ones and store it inside the message\nof the exception if the enhanced msg is not null.\n\nResult\n------\nSupport for enhanced error messages.\n\nChange-Id: I7b687c959787790e7661b627d11a155f83cbda17\nReviewed-on: http://review.couchbase.org/79483\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1497448162000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"05517fcd37ea13028515675dc3025ba7c1278d62","msg":"Override core-io Builder setters.\n\nChange-Id: Iba51930a4d6995772e8886856989d92e60eae665\nReviewed-on: http://review.couchbase.org/80433\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1499671103000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"312c01ac76b0ea3d7affed4087ee1c459f0ee9b9","msg":"Fix hardcoded subdoc counter createDocument value\n\nChange-Id: I96e436c8cdc9234f7d9dcd2b5fd8cc3b6e85aefc\nReviewed-on: http://review.couchbase.org/80522\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1499791060000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"86370050ff8acb77c165aff173ace7549b9ed40a","msg":"Prepare 2.4.7 Release\n\nChange-Id: Id3614b447d35adc9373e0857d731d947b625a458\nReviewed-on: http://review.couchbase.org/80556\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1499852517000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"da695d274ca51aa5499fedf60589981b852823ec","msg":"Adapt Test Suite to Spock / RBAC.\n\nThis changeset adds conditionals \u0026 logic code to deal\nwith the potential use of RBAC and as a result makes\nthe suite compatible with spock (while still keeping\nthe backwards compat story).\n\nChange-Id: Ibaf1fe838548cf2ffd74da381b60176d894d5ed0\nReviewed-on: http://review.couchbase.org/80570\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/BucketClosingTest.java","src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayListGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayListTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySetGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySetTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseMapGuavaTest.java","src/integration/java/com/couchbase/client/java/datastructures/collections/CouchbaseMapTest.java","src/integration/java/com/couchbase/client/java/util/ClusterDependentTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/integration/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutorTest.java"],"date":1499845978000,"numberOfModifiedFiles":13},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"469de488cc1b33cefc0e91c02d1f72af72ec79eb","msg":"Start 2.4.8 Development\n\nChange-Id: I46dc0dfc237c49effaae7c931e4ac01cbf18afaa\nReviewed-on: http://review.couchbase.org/80659\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1499962297000,"numberOfModifiedFiles":1},{"authorName":"Alper Kanat","authorEmail":"me@alperkan.at","authorTimeZone":"GMT+03:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"04c6ef1a7c00291f645a68d271714fc256cd72fb","msg":"JCBC-1070: Getter for object attributes added to DSL\n\nMotivation\n----------\nWhen using convenience methods in DSL such as meta, there\u0027s no way\nfor getting its attributes.\n\nModifications\n-------------\nAdded 2 new methods called \"get\" to the DSL which accepts either a\nstring or an expression. Also added a unit test.\n\nChange-Id: Icd7c52c0c781248121f0c2c835312b7450994a1b\nReviewed-on: http://review.couchbase.org/76560\nReviewed-by: Alper Kanat \u003cme@alperkan.at\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/test/java/com/couchbase/client/java/query/dsl/ExpressionTest.java"],"date":1491838478000,"numberOfModifiedFiles":2},{"authorName":"Alper Kanat","authorEmail":"me@alperkan.at","authorTimeZone":"GMT+03:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a6e0761c41e3488e01477f9f1be8d5c6396914d4","msg":"JCBC-1069: Added union, intersect \u0026 except to DSL\n\nMotivation\n----------\nDSL has union \u0026 unionAll methods in SelectResultPath interface. Even if they existed,\nit\u0027s not possible to join multiple queries by using existing method signatures. In my\ncase, I\u0027m joining dynamically generated queries assigned to variables. I think it\u0027s\nbest to allow DSL to chain queries like below:\n\nresult \u003d query1.intersect(query2).except(query3)\n\nModifications\n-------------\nAdded 2 new elements: ExceptElement \u0026 IntersectElement.\nChanged UnionElement to allow a query to be added.\nAdded new methods to SelectResultPath for missing intersect \u0026 except methods which uses\nthe old method signature same as union \u0026 unionAll. Also added new chainable methods\nwhich takes \u0026 returns SelectResultPath objects. Added tests.\n\nAlso added .gitreview file.\n\nChange-Id: I118a337da2a3d53edb5b1e908035c227eedca804\nReviewed-on: http://review.couchbase.org/76561\nReviewed-by: Alper Kanat \u003cme@alperkan.at\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":[".gitreview","src/main/java/com/couchbase/client/java/query/dsl/element/ExceptElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/IntersectElement.java","src/main/java/com/couchbase/client/java/query/dsl/element/UnionElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectResultPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectResultPath.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1491838627000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"be2579ce4b8ad5a384675f5fa0ab953f28594cbb","msg":"Start 2.5.0 Development\n\nChange-Id: If87d7b7741366805bf97a0931c5d7d9c10cd8f53\nReviewed-on: http://review.couchbase.org/81998\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1502113720000,"numberOfModifiedFiles":2},{"authorName":"benoit","authorEmail":"b.wiart@ubik-ingenierie.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6e75290646accbb0c998e47724d2b4aa3c2af53b","msg":"JCBC-1098 : N1qlQueryExecutor is allocating twice the memory it needs\n\nMotivation\n----------\nWhen the netty ByteBuf is not backed by a byte array.\nN1qlQueryExecutor#executeQuery is allocating the byte array twice.\nthe first time in TranscoderUtils#byteBufToByteArray\nthe second with Arrays#copyOfRange\n\nModifications\n-------------\nthis patch add a specialized version of\nTranscoderUtils#byteBufToByteArray (copyByteBufToByteArray) that only\ncall Arrays#copyOfRange if the ByteBuf is backed by a byte array.\n\nResult\n------\ngreatly reduce the n1ql memory allocation\n\nChange-Id: I96e22d864fbb527f3d0cf2448d741e9d6965d387\nReviewed-on: http://review.couchbase.org/82004\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java"],"date":1501243540000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c9f57b648521129db7f6e83f16f9c66780bc0eb9","msg":"JCBC-1105: Make custom param settings deterministic in order.\n\nMotivation\n----------\nBoth the DefaultBucketSettings and the N1qlParams have HashMaps\nwhich allow to store \"custom\" params which in turn get stored\nin a JSON array on the wire. While the order for them ultimately\ndon\u0027t matter, there is a certain expectation that the insert\norder is preserved, and it also helps with assertability\nin unit tests.\n\nModifications\n-------------\nThe HashMap instances are replaced with LinkedHashMap instances\nthat preserve the insertion order. This also resulted in small\nchanges for the N1qlParamsTest which now has unit tests (correctly)\nfailing on OSX (they always did on linux as CI showed) and they\nare now corrected.\n\nResult\n------\nDeterministic behavior based on insertion order for the N1ql custom\nparams as well as the bucket settings.\n\nChange-Id: I8a8f33b4bef53eb9f704c462dfb3a93cfb63f22d\nReviewed-on: http://review.couchbase.org/82241\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java"],"date":1502694691000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4e660b618e5bc7451fad4f24fa2bb2ace1affaca","msg":"JCBC-1110: Add Experimental TransparentReplicaGetHelper\n\nMotivation\n----------\nUsers sometimes need assistance with transparently failing\nover to a replica get when the primary get fails. This little\nhelper class provides utility methods to help with exactly that.\n\nModifications\n-------------\nThis changeset introduces a helper class which first performs\na regular kv get and if that one fails it fails over to a\nreplica get and grabs the first result it gets back. This is\nthe most common situation users are using both commands together.\n\nResult\n------\nTransparent get followed potentially by replica get is a common\nuse case and now covered by a simple helper class.\n\nChange-Id: Ib1aa0f0276147977fe81bcfefb92f80f7906cc14\nReviewed-on: http://review.couchbase.org/80443\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/TransparentReplicaGetHelper.java"],"date":1499683361000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a8a37aebd78f0919480ac267d36f333ac6e69091","msg":"Override CoreEnvironment hook changes on Builder API.\n\nChange-Id: I50d70ac85b8a8844a279902299ddd97a490b5f71\nReviewed-on: http://review.couchbase.org/81520\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1501247566000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df695daa5f17d5ea42a4976ce3b0339eaf5c1fb3","msg":"JCBC-1106: Add additional N1QL Params.\n\nMotivation\n----------\nThe server from time to time adds new query options which help\ncustomizing behavior or optimize for certain scenarios. While\nthe Java SDK provides the possibility to add all kinds of custom\nquery params, exposing the common ones as first-class builder\nmethods is desired to steer the user in the right direction\nand to also enforce some kind of typesafety.\n\nModifications\n-------------\nThis changeset adds the following four query params:\n\n - readonly\n - pipeline_batch\n - pipeline_cap\n - scan_cap\n\nThe first one can be used to tighten security-concious apps and\nthe other three can be used to fine-tune query performance.\n\nResult\n------\nEasier accessible query options following the addition of those\nparams from the server side. As a caveat, they might not be\navailable against all server versions though.\n\nChange-Id: I01d9a64e6314a24a46aa504838bde1aa6e6a6417\nReviewed-on: http://review.couchbase.org/82344\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/query/N1qlParamsTest.java"],"date":1502865006000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"04836ff24455c1a8a414a44d59e3f7b9c5046440","msg":"JCBC-1082: Implement support for Subdoc GetCount\n\nMotivation\n----------\nIn Couchbase Server 5.0, a new lookup command (get count) is introduced\nwhich allows to fetch the number of items for a given path in a document.\n\nModifications\n-------------\nThis changeset adds support for the lookup in builder (and async version)\nso that they support taking getCount as arguments. Tests are adapted to\ntest both the single and multi case variants.\n\nResult\n------\njava-client support for subdocument get count.\n\nChange-Id: I8383a3017fe8cbd21d1b330a44c5020c5cfd61b1\nReviewed-on: http://review.couchbase.org/82444\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java"],"date":1503045324000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"78086baf45201886df9ee0ab20f044203ccca680","msg":"JCBC-1115: Enforce Xattr first ordering on subdoc builders.\n\nMotivation\n----------\nWhen using the subdoc xattr API, a server side constraint is that\nthe xattr-based commands always need to come before the non-xattr\nones.\n\nThis should be enforced on the client side to give rapid feedback\nand not wait for cryptic errors at runtime.\n\nModifications\n-------------\nThis changeset introduces a new subdoc exception and modifies both\nthe lookup and the mutation builder to enforce the constraint\nat execute() time.\n\nResult\n------\nThe server-side requirement is enforced at the client side, leading\nto rapid feedback.\n\nChange-Id: I96568b7f4ff952deb39a231b1d0625959f2a0ff4\nReviewed-on: http://review.couchbase.org/82453\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/error/subdoc/XattrOrderingException.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java"],"date":1503064050000,"numberOfModifiedFiles":4},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0841a4f5eea6aa1ceef74a383a6bc59317817e29","msg":"JCBC-1071 Use mock dep from core-io and add support\n\nMotivation\n----------\nKV error map test using mock is added to the core-io. Extend the support\nfor integration tests to java-client.\n\nChanges\n-------\nThis is an extension of JVMCBC-418.\nAdds very similar mock support here for use on need.\n\nResults\n-------\nMock can be enabled by test properties.\n\nChange-Id: Ie5a6b82241152d843eddea761057599a93f91abe\nReviewed-on: http://review.couchbase.org/77007\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/test/resources/mock.properties"],"date":1492559661000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2df91384eda59f89f220955fc3e4d8ecae3bc183","msg":"Bump the mock to 1.5.9\n\nChange-Id: Ie11cda1b605421d0f120e232dfba81c5cad82ec8\nReviewed-on: http://review.couchbase.org/82495\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1503313219000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f4eef2304ff1c5eeb727a8b5e87f1818d93c797a","msg":"JCBC-1086 Add getUser api to cluster manager\n\nMotivation\n----------\nThe recent RFC changes are to add getUser and endpoint change for\ngetUsers.\n\nChanges\n-------\nBoth ClusterManager and AsyncClusterManager support getUser with a\nusername. getUser and getUsers use the same GetUsersRequest by passing\nempty string or username.\n\nResults\n-------\ngetUser api is added. Verification tests pass.\n\nChange-Id: I3c5b6bcaaa7699dffcb5c8377870705943f62385\nReviewed-on: http://review.couchbase.org/79520\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/UserManagementTest.java","src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/rbac/BucketAndClusterManagerUserTest.java","src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/QueryServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/SearchServiceUserTest.java","src/main/java/com/couchbase/client/java/cluster/AsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/AuthDomain.java","src/main/java/com/couchbase/client/java/cluster/ClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultClusterManager.java","src/main/java/com/couchbase/client/java/cluster/User.java"],"date":1497476385000,"numberOfModifiedFiles":12},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ca8332ce285ac5b1437d3e45ab5c9ef13e40dc0c","msg":"JCBC-1100: Document that expiry on counter only works on creation.\n\nMotivation\n----------\nAn edge case happens with counters and expiry in that the expiry\nis only honored when the document is created, not updated. This\ndiffers as with the other commands  but is currently a limitation\non the server.\n\nModifications\n-------------\nTo clarify, all affected javadoc blocks have been updated with\na note.\n\nResult\n------\nLess confusion when reading the javadoc about this edge case.\n\nChange-Id: Ia898d9070c1082e9d76f3a6db673c9dbff1935e1\nReviewed-on: http://review.couchbase.org/82498\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1503322604000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"157987f23f6292e68e942de4b3d410068969cb5a","msg":"JCBC-1111: Handle LOCKED in conversions.\n\nMotivation\n----------\nAs port for XERROR and Couchbase Server 5.0, we need to properly\nhandle the LOCKED response code coming from core-io.\n\nModifications\n-------------\nFirst a new battery of tests has been added to avoid regressions\nand cover all the previous use cases. Then the bucket and subdoc\nhelper converters are modified to map the LOCKED status to their\nbackwards compatible counterparts.\n\nResult\n------\nProperly handling the new LOCKED status code in combination with\nXERROR and 5.0\n\nChange-Id: I09dd37fd60034e49ce6f54b7e60cad9ade9fd839\nReviewed-on: http://review.couchbase.org/82507\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/LockingTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/subdoc/SubdocHelper.java"],"date":1503331780000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b1ee25259d7d575113b9ab88bc133613008a0459","msg":"JCBC-1117: Add test case for CoreSendHook\n\nMotivation\n----------\ncore-io added the send hook but a test case to both document and\nmake sure no regressions are introduced should be added.\n\nModifications\n-------------\nAs part of adding the test is was discovered that the artificial\nlimitation added to deferAndWatch (only work on subjects) needs\nto be lifted because chained in observables are not subjects\nanymore at this point, but it has been stable enough to do just\nthat confidently.\n\nThe test adds a hook which records an upsert operation and its\nlatency, asserting on the result and also logging it, acting\nas an example.\n\nResult\n------\nAdding a core hook and recording operations as a regression test\nas well as sample code.\n\nChange-Id: I19c04696c1b217cac10089c3b0b91b2768e0ebb1\nReviewed-on: http://review.couchbase.org/82626\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/CoreSendHookTest.java","src/main/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatch.java"],"date":1503479010000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"11335796502c20278bac2fe3806866471649bf35","msg":"Extend SendHookTest to access opaque.\n\nChange-Id: Ia0ffd4c41daf9bafb872c7b98e8cdf734adbfd4b\nReviewed-on: http://review.couchbase.org/82684\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/CoreSendHookTest.java"],"date":1503578089000,"numberOfModifiedFiles":1},{"authorName":"Sergey Avseyev","authorEmail":"sergey.avseyev@gmail.com","authorTimeZone":"GMT+03:00","committerName":"Sergey Avseyev","committerEmail":"sergey.avseyev@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"69436efb0545541a44878efb67c31d4d98e2506b","msg":"Add missing bracket to fix markdown link\n\nFixes #20\n\nChange-Id: If1da08a38c8d879a799ee9fcc51920bb725188f6\nReviewed-on: http://review.couchbase.org/83033\nTested-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["CONTRIBUTING.md"],"date":1504274382000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"394459cace1ab3a3efadb507788863a95a0869df","msg":"Supporting client changes for JVMCBC-431\n\nMotivation\n----------\nInclude support for insert document and access deleted in MutateIn and\nLookupIn respectively.\n\nChanges\n-------\nAdd insertDocument and accessDeleted flags to be set on the subdoc\nbuilders and pass it onto core.\n\nResult\n------\nSubdocument additions now match the rfc and are verified through\nintegration tests.\n\nChange-Id: Id184d439c5fe9ceed712a6e41854a06e5a514fc4\nReviewed-on: http://review.couchbase.org/83035\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java"],"date":1504275526000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ec81a1f3c5b0ccb9fdd53fb92ab6d12ac1e60fef","msg":"JCBC-1125: Add support for the basic healthCheck API.\n\nMotivation\n----------\nBuilding on the changes from core-io, the java-client needs to\nexpose a simple health check API to quickly gather important\ninformation about the underlying endpoints/sockets.\n\nModifications\n-------------\nThis changeset uses the new requests and responses to query\ncore-io for the services state and then exposes it via the\nhealthCheck() method on Cluster/AsyncCluster appropriately.\n\nResult\n------\nThe healthCheck() API is available and marked as experimental.\n\nChange-Id: Ibfd15a7b3cc786b2a162532fe93ca4535ddb5a74\nReviewed-on: http://review.couchbase.org/83081\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1504528595000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e0623e20b658647ea5b31a7a66641c60dc004c57","msg":"JCBC-1126: Promote Experimental APIs where appropriate.\n\nMotivation\n----------\nThis changeset works through all the experimental APIs and promotes them to\nuncommited \u0026 committed where appropriate.\n\nEspecially most of the FTS API has been mature enough so its worth promoting it\nin 2.5.0.\n\nChange-Id: I0f6db96d42ad1f2b44fa42e53652faf085de8403\nReviewed-on: http://review.couchbase.org/83129\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/document/EntityDocument.java","src/main/java/com/couchbase/client/java/error/IndexAlreadyExistsException.java","src/main/java/com/couchbase/client/java/error/IndexDoesNotExistException.java","src/main/java/com/couchbase/client/java/error/IndexesNotReadyException.java","src/main/java/com/couchbase/client/java/query/PreparedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/PreparedPayload.java","src/main/java/com/couchbase/client/java/search/HighlightStyle.java","src/main/java/com/couchbase/client/java/search/SearchConsistency.java","src/main/java/com/couchbase/client/java/search/SearchQuery.java","src/main/java/com/couchbase/client/java/search/facet/DateRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/NumericRangeFacet.java","src/main/java/com/couchbase/client/java/search/facet/SearchFacet.java","src/main/java/com/couchbase/client/java/search/facet/TermFacet.java","src/main/java/com/couchbase/client/java/search/queries/AbstractCompoundQuery.java","src/main/java/com/couchbase/client/java/search/queries/AbstractFtsQuery.java","src/main/java/com/couchbase/client/java/search/queries/BooleanFieldQuery.java","src/main/java/com/couchbase/client/java/search/queries/BooleanQuery.java","src/main/java/com/couchbase/client/java/search/queries/ConjunctionQuery.java","src/main/java/com/couchbase/client/java/search/queries/DateRangeQuery.java","src/main/java/com/couchbase/client/java/search/queries/DisjunctionQuery.java","src/main/java/com/couchbase/client/java/search/queries/DocIdQuery.java","src/main/java/com/couchbase/client/java/search/queries/GeoBoundingBoxQuery.java","src/main/java/com/couchbase/client/java/search/queries/GeoDistanceQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchAllQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchNoneQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchPhraseQuery.java","src/main/java/com/couchbase/client/java/search/queries/MatchQuery.java","src/main/java/com/couchbase/client/java/search/queries/NumericRangeQuery.java","src/main/java/com/couchbase/client/java/search/queries/PhraseQuery.java","src/main/java/com/couchbase/client/java/search/queries/PrefixQuery.java","src/main/java/com/couchbase/client/java/search/queries/QueryStringQuery.java","src/main/java/com/couchbase/client/java/search/queries/RegexpQuery.java","src/main/java/com/couchbase/client/java/search/queries/TermQuery.java","src/main/java/com/couchbase/client/java/search/queries/TermRangeQuery.java","src/main/java/com/couchbase/client/java/search/queries/WildcardQuery.java","src/main/java/com/couchbase/client/java/search/result/AsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchMetrics.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/result/SearchStatus.java","src/main/java/com/couchbase/client/java/search/result/hits/DefaultHitLocations.java","src/main/java/com/couchbase/client/java/search/result/hits/HitLocation.java","src/main/java/com/couchbase/client/java/search/result/hits/HitLocations.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchMetrics.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchQueryRow.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultSearchStatus.java","src/main/java/com/couchbase/client/java/search/util/SearchUtils.java","src/main/java/com/couchbase/client/java/util/Blocking.java","src/main/java/com/couchbase/client/java/util/Bootstrap.java"],"date":1504684142000,"numberOfModifiedFiles":53},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c88cab25a50f895a0969520b8685c1dacf0a02e1","msg":"Prepare 2.5.0 release\n\nChange-Id: I5ca4f641d40753b83b5d05eefcd3bffa81667e51\nReviewed-on: http://review.couchbase.org/83156\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1504741074000,"numberOfModifiedFiles":2},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f7e8cf0fe49a8414ddaf8eea2c9a8d0e69d73916","msg":"JCBC-1131: Registering a custom Transcoder has no effect\n\nMotivation\n----------\n\nDue to a regression in 2.4.4, custom transcoders are\nerroneously ignored.\n\nModifications\n-------------\n\nPropagate the `transcoders` parameter instead of ignoring it.\n\nResult\n------\n\nThe transcoder registration is honored.\n\nChange-Id: I3e1b1c12daa217dfcd3aa0092d47b11884d2b9d7\nReviewed-on: http://review.couchbase.org/83445\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1505755398000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1c7f04b1c02637a0a18f7f27dc57d9b7b2ac53a0","msg":"JCBC-1129: Update Subdoc API to match RFC\n\nModifications\n-------------\nThis changeset performs two changes:\n  - it sets the API to committed\n  - it update the createDocument to upsertDocument, deprecating the\n    old one.\n\nChange-Id: I5fd21a92f1202e88c4b34c99b3dc314a2cf56dab\nReviewed-on: http://review.couchbase.org/83725\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/SubDocumentDocumentFlagsTests.java","src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOptionsBuilder.java"],"date":1506414856000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"87fd490ba8814b8e92a604f6708a1af2d7f82eb0","msg":"JCBC-1137: CouchbaseMock needs to be a test dependency.\n\nCouchbaseMock is used in testing, but the test scope modifier\nhas gone missing - this needs to be readded so its not pulled\nin as a downstream dependency!\n\nChange-Id: I4db5d29f6ef9d57976d7dc3e529a472f58afa1d1\nReviewed-on: http://review.couchbase.org/83816\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1506603791000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f5d87987892e86158f72da282ec84ff999264e84","msg":"Prepare 2.5.1 Release\n\nChange-Id: I780e1393ce5adf74e61a41b954bdfbd12442faab\nReviewed-on: http://review.couchbase.org/83946\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1507011910000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"db42f4d316717d52cc08e138461a337b4175ed24","msg":"Update developer list in pomfile\n\nChange-Id: I8a84947960ec9c7e508eef79b808936b6f7ee28f\nReviewed-on: http://review.couchbase.org/83964\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1507051822000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f9aa39c275e6ea92b7f86f40b76582a28398e23","msg":"Start 2.5.2 Development\n\nChange-Id: Ic4458d04971552709950a4315ffa8f9dc67decf2\nReviewed-on: http://review.couchbase.org/83965\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1507051840000,"numberOfModifiedFiles":1},{"authorName":"benoit","authorEmail":"b.wiart@ubik-ingenierie.com","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"90b0c239b671bf4348617c095c1c2e745a4930a4","msg":"JCBC-1140: Optimize object decoding from direct byte buffers.\n\nMotivation\n----------\nWhen retrieving a document Bucket#get the netty buffer content is\nduplicated before the parsing by Jackson, since it is converted from\na direct buffer into a byte array.\n\nModifications\n-------------\nWrap the ByteBuf in an inputstream. Jackson now directly parse the netty\nByteBuf content without having to do an additional memory copy.\n\nResult\n------\nReduced memory allocations\nYMMV but in our test it was a ~10% reduction\n\nFor reference, here are some JMH numbers in comparison:\n\nHeap allocated buffers, 1.5k (small) and 8k (large):\n\nMyBenchmark.oldSmallHeap                                     thrpt   60  217977.270 ± 5312.782   ops/s\nMyBenchmark.oldSmallHeap:·gc.alloc.rate                      thrpt   60     778.375 ±   18.909  MB/sec\n\nMyBenchmark.newSmallHeap                                     thrpt   60  213909.924 ± 5349.298   ops/s\nMyBenchmark.newSmallHeap:·gc.alloc.rate                      thrpt   60     773.779 ±   19.429  MB/sec\n\nMyBenchmark.oldLargeHeap                                     thrpt   60   34630.505 ±  943.865   ops/s\nMyBenchmark.oldLargeHeap:·gc.alloc.rate                      thrpt   60     739.460 ±   20.140  MB/sec\n\nMyBenchmark.newLargeHeap                                     thrpt   60   34262.467 ±  843.218   ops/s\nMyBenchmark.newLargeHeap:·gc.alloc.rate                      thrpt   60     731.710 ±   18.065  MB/sec\n\nDirect allocated buffers, 1.5k (small) and 8k (large):\n\nMyBenchmark.oldSmallDirect                                   thrpt   60  207967.868 ± 5460.817   ops/s\nMyBenchmark.oldSmallDirect:·gc.alloc.rate                    thrpt   60     961.241 ±   25.313  MB/sec\n\nMyBenchmark.newSmallDirect                                   thrpt   60  211931.986 ± 5505.153   ops/s\nMyBenchmark.newSmallDirect:·gc.alloc.rate                    thrpt   60     775.659 ±   20.521  MB/sec\n\nMyBenchmark.newLargeDirect                                   thrpt   60   34800.886 ±  881.995   ops/s\nMyBenchmark.newLargeDirect:·gc.alloc.rate                    thrpt   60     744.829 ±   18.824  MB/sec\n\nMyBenchmark.oldLargeDirect                                   thrpt   60   34101.936 ± 1007.703   ops/s\nMyBenchmark.oldLargeDirect:·gc.alloc.rate                    thrpt   60     900.992 ±   26.708  MB/sec\n\nChange-Id: I2c215ad0beb05266f49f19874d4673b195695f03\nReviewed-on: http://review.couchbase.org/84255\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java","src/test/java/com/couchbase/client/java/transcoder/TranscoderUtilsTest.java"],"date":1507493630000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"36fc43133eb3b76380e5a57b669c2503f962afaa","msg":"JCBC-1141: Add ByteArrayDocument \u0026 Transcoder\n\nMotivation\n----------\nIn the past, the canonical document type users were falling\nback to when dealing with raw byte buffers is the BinaryDocument.\nBecause this document type puts the burden of refcounting on the\nuser, lots of edges can come up which need to be dealt with on\na case-by-case basis.\n\nModifications\n-------------\nThis changeset introduces a new document \u0026 transcoder which\noperates on a byte[] which, at the cost of a memcopy, allows\nusers to deal with raw data but don\u0027t have to care about\nrefcounting and edge cases. It has been useful in the past\nin specific deployments, so it makes sense to provide it to\nthe broader public as well.\n\nResult\n------\nA new document type which should be used in general over the\nvery specific BinaryDocument type.\n\nChange-Id: Idaab0429d40774c3bc67eac294ab4e9c6f0c0a3c\nReviewed-on: http://review.couchbase.org/84198\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/ByteArrayDocument.java","src/main/java/com/couchbase/client/java/transcoder/ByteArrayTranscoder.java","src/test/java/com/couchbase/client/java/transcoder/ByteArrayTranscoderTest.java"],"date":1507621690000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e7acd348a85bafffb4c1c9b6a158f82946ed04f3","msg":"Add sslTruststore overrides\n\nChange-Id: Ia8595d3ab880558667ecd40a343e4867de588142\nReviewed-on: http://review.couchbase.org/84365\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1507894073000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f97504351723fbbd0188b246115eed5bf37891d","msg":"JCBC-1142: Rename createParents to createPath\n\nMotivation\n----------\nAs part of the XATTR/Subdocument RFC it was decided\nto unify the \"createParents\" attribute to \"createPath\"\nwhich better reflects the user intent.\n\nModifications\n-------------\nThis changeset applies this change in a fully backwards-\ncompatible manner. API has been renamed where either internal\nor just using boolean flags. In the other places where actually\nmethod changes are needed, the appropriate methods have been\nmarked as deprecated and the right proper methods implemented\nin addition.\n\nResult\n------\nThe Java SDK now properly exposes \"createPath\" instead of\n\"createParents\", but its still available for backwards\ncompatibility and will be only removed with the next major\nSDK bump.\n\nChange-Id: I966ae0fb940295004bce94d5a02a5458fd2c889b\nReviewed-on: http://review.couchbase.org/84749\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubDocumentDocumentFlagsTests.java","src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOptionsBuilder.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java"],"date":1508857455000,"numberOfModifiedFiles":9},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8cd181d7e7b8abee1edc0db374f4c314bb78ef66","msg":"JCBC-1143: Remove outdated experimental javadoc for FTS.\n\nIt is already marked as committed, the leftover javadoc\nis an oversight.\n\nChange-Id: Ic79950c1e1c712a62be7816097ef9bdddf58db6d\nReviewed-on: http://review.couchbase.org/84871\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1509268894000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1f7333ffd95a3772556855860060c91d632d38fa","msg":"Override core-io configPollFloorInterval Builder.\n\nChange-Id: I9e1adfad503f6eadfe166ed573ec563734b120b2\nReviewed-on: http://review.couchbase.org/84874\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1509269944000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT-07:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3a2c881ff66793070782f8450f0088618064ab9f","msg":"JCBC-1144: RetryBuilder - last error should not be caught.\n\nMotivation\n----------\nThe RetryBuilder (and subsequently the RetryWhenFunction)\nfails to propagate the source exception when its exactly\nthe last retry attempt.\n\nModifications\n-------------\nThis changeset fixes this edge case by first checking if\nthe given exception is part of the list to accept and if\nnot it propagates it right away before first checking\nif the number of attempts is over.\n\nResult\n------\nIf a different exception is raised at the last retry\nattempt, it is now propagated directly and not turned\ninto a composite CannotRetryException.\n\nChange-Id: I4956c6a5fa59e5a8f06088379656d54d3bdf26ab\nReviewed-on: http://review.couchbase.org/84870\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java","src/test/java/com/couchbase/client/java/util/retry/RetryBuilderTest.java"],"date":1509237506000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d18e1250898e5708c88fd590a3869b4ed5253d84","msg":"JCBC-1141: Mark ByteArrayDocument/Transcoder as Uncommitted.\n\nMarking this document/transcoder as uncommitted for now and plan\nis to mark it as committed in the next minor version (2.6.0).\n\nChange-Id: Ie108b32ac82c01659ee54c0ea33ab89711b9393d\nReviewed-on: http://review.couchbase.org/84887\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/ByteArrayDocument.java","src/main/java/com/couchbase/client/java/transcoder/ByteArrayTranscoder.java"],"date":1509349318000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"77b5ee043e0d36a2cc3dc3a4296a0aa64fd6065e","msg":"Prepare 2.5.2 Release\n\nChange-Id: I845f89cb873ed721971e2aa80973dd301bd26dd7\nReviewed-on: http://review.couchbase.org/85247\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1510147025000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"89842cb9429da6aa848a394b2683cfdbddf96272","msg":"JCBC-1152: Handle LOCKED with GetAndLock\n\nMotivation\n----------\nCouchbase Server 5.1+ (and maybe a bugfix release post 5.0) will\nalso properly send LOCKED on GetAndLock which the SDK needs to\nhandle appropriately.\n\nChange-Id: I4c9b1b45d7111d1ddf4b7dfbea70d5ef501653f0\nReviewed-on: http://review.couchbase.org/85841\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1511266978000,"numberOfModifiedFiles":1},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"David Nault","committerEmail":"david.nault@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3a0cd55df9bececf087ddb2624ac0d860ca76fbf","msg":"Add integration test for custom transcoders.\n\nChange-Id: I3705748829bf0e09b489f3fc1d7165bbd65d5172\nReviewed-on: http://review.couchbase.org/83488\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/transcoder/CustomTranscoderTest.java"],"date":1507927735000,"numberOfModifiedFiles":1},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-08:00","committerName":"David Nault","committerEmail":"david.nault@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6013f242a9e7e2a3f4e69530964014d38c239966","msg":"Add English translation for Hudeln lyrics\n\nMotivation\n----------\nNot everybody can German. Google translate does not help in this case.\n\nModifications\n-------------\nMichael Englished the German for me. Thank you, Michael!\n\nResult\n------\nNow people who only English can understand perfectly\nhow OnSubscribeDeferAndWatch works.\n\nChange-Id: Ie824bdb9aeb84d3b325b451fa31e82a750fc54c0\nReviewed-on: http://review.couchbase.org/86268\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/OnSubscribeDeferAndWatch.java"],"date":1512154328000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ff3a0db47b341b787da7a132d60da0cf5e341969","msg":"Prepare 2.5.3 Release\n\nChange-Id: Iadd09bae09b85c607e186ea928bfc4dac44f244f\nReviewed-on: http://review.couchbase.org/86364\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1512465724000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"80ccd398403ae865ec65ce1d4cae714c3350fdb2","msg":"Start 2.5.4 Development\n\nChange-Id: I2045f94b8fea9d1bad53a9da73291f98a2e37ed8\nReviewed-on: http://review.couchbase.org/86381\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1512486950000,"numberOfModifiedFiles":1},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-08:00","committerName":"David Nault","committerEmail":"david.nault@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0971d4e8c1cb4144b660ab32217b3b5807f64fd5","msg":"Fix deprecation warnings, add deprecation Javadoc\n\nMotivation\n----------\nMany of the methods in AsyncMutationInBuilder are deprecated,\nbut there\u0027s no guidance on which methods to use instead.\n\nModifications\n-------------\n* Add \"@deprecated\" Javadoc tags that link to the preferred versions.\n* Re-write the deprecated functions to call the preferred versions.\n* Modify CouchbaseAsyncBucket to call the preferred versions.\n\nResult\n------\nFewer deprecation warnings in CouchbaseAsyncBucket.\nLess confusion for users of AsyncMutationInBuilder.\n\nChange-Id: I73f3b0e93adef4d9dce90a627795ef438bdac54f\nReviewed-on: http://review.couchbase.org/86403\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1512509613000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e253f4b6f0f5f62b384458ebc39c9868b41e6051","msg":"JCBC-1148: Perform log redaction.\n\nMotivation\n----------\nAs part of the larger effort to optionally allow and perform\nlog redaction, this changeset applies context aware\nredaction for info, warn and error log messages.\n\nModifications\n-------------\nThis changeset modifies all .info(), .warn() and .error()\nlog lines to include meta, user and system information.\n\nResult\n------\nRedacted user, meta and system information based on the\nsetting provided.\n\nChange-Id: I5ac7a04ba790f079594c2f95cbe4b7ece172bf31\nReviewed-on: http://review.couchbase.org/86392\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/query/util/IndexInfo.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/transcoder/AbstractTranscoder.java","src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java"],"date":1512496642000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"86029f1e901dad459eeced0c03bae79584080c4f","msg":"JCBC-1147: Sync support for health check API up to rfc\n\nMotivation\n----------\nCompared to the experimental version shipped with 2.5.0,\nthere have been major changes into refactoring and unifying\nthe health check API towards the RFC.\n\nModifications\n-------------\nThis changeset brings the diagnostics API in-line with\nwhat is described in the RFC, mainly:\n\n - refactors naming and API towards diagnostics\n   (away from health check)\n\nResult\n------\nThe diagnostics command works as specified in the RFC,\nhigher level API needs to be modified to reflect that\nas well.\n\nChange-Id: I55e88b4aed63e2251604cf5cac94720a24eb14f5\nReviewed-on: http://review.couchbase.org/86967\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncCluster.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1513608680000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c38da131d9c460e34ff8195f2eb85fa9b4aab025","msg":"Prepare 2.5.4 Release\n\nChange-Id: I9752558091cf15dbf70a71859897a34f9004f1e3\nReviewed-on: http://review.couchbase.org/87588\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1515486132000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9447d6d539e0998627726e2ded65c996d86c922f","msg":"Start 2.5.5 Development\n\nChange-Id: I29a5e8494f7dfe53cad64d1c31a9e7cdacb54693\nReviewed-on: http://review.couchbase.org/87679\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1515591431000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f13fc22772482875baa727005c494c304fc5a921","msg":"JCBC-1147: Add health check ping command support.\n\nMotivation\n----------\nIn addition to the refactored diagnostics command,\nthe RFC calls for a bucket-level \"service ping\"\nfacility which has similar output to the diagnostics\nbut proactively calls the services on their endpoints.\n\nModifications\n-------------\nThis changeset simply exposes the methods with their overloads\non the Bucket and AsyncBucket and forwards it to the HealthPinger.\n\nResult\n------\nping support on the bucket!\n\nChange-Id: I5d1dab046626977184e390c0d11d9770744c9e27\nReviewed-on: http://review.couchbase.org/87094\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DiagnosticsTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java"],"date":1513783365000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"42c7f05b078926ca9140b32f3a7ba78ac6484884","msg":"JCBC-1163: Log value on n1ql row decode failure.\n\nMotivation\n----------\nIf, for whatever reason, a n1ql row fails to decode\nwith jackson we should log the original value as part\nof the exception message so after the fact it is possible\nto figure out what went wrong.\n\nModifications\n-------------\nThe exception message has been adapted to include the original\nvalue as a utf8 string and a test has been added to make sure\nthis is actually the case.\n\nResult\n------\nThe exception now has the original value as part of its message.\n\nChange-Id: I995afeac88456050f5b48c8c94a478b6c7a6eed7\nReviewed-on: http://review.couchbase.org/88180\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRow.java","src/test/java/com/couchbase/client/java/query/DefaultAsyncN1qlQueryRowTest.java"],"date":1516612524000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"05ade0df31e4bc6c00f886242bc699bc592a15e3","msg":"Prepare 2.5.5 Release\n\nChange-Id: Iebd97774a41f24dedb5a363f1d08f3324c493c0d\nReviewed-on: http://review.couchbase.org/88978\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1517983278000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"18ee7b035f86322656377ab2eae039297cb9a762","msg":"Start 2.5.6 Development\n\nChange-Id: I2211222cbbd37c67079c603b30ae2831805358e8\nReviewed-on: http://review.couchbase.org/89013\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1518024180000,"numberOfModifiedFiles":1},{"authorName":"Felix Klauke","authorEmail":"info@felix-klauke.de","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"23f142b3420d5df32bf558942cc3fdbabf1dea9b","msg":"Use correct path for git hooks dir and remove Simon basle from reviewers.\n\nMotivation\n----------\nWasting time on finding out that \"cd .git/hook\" will never work as the hook scripts\nHave to be in the \".git/hooks\" dir. Simon Basle isn\u0027t responsible anymore.\n\nModifications\n-------------\nAdded a simple s (\"hook-s\") and removed one more complex s (Simon).\n\nResult\n------\nCommit Message script is applied correctly. Reviewers are now correct.\n\nChange-Id: Ib77db720775621c524cad7a8e541cd16adbbc277\nReviewed-on: http://review.couchbase.org/89090\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["CONTRIBUTING.md"],"date":1518102307000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"762c2dc4460720fc5d27719630694e8badc9cd10","msg":"JCBC-1166: Make CouchbaseEnvironment.Builder generic\n\nMotivation\n----------\nFollowing up on the changes in JVMCBC-495 this changeset makes\nthe builder generic and as a result can delete a bunch of now\nredundant overrides.\n\nChange-Id: Iebecde49e25388d502f3828d57ba24687c7cbc89\nReviewed-on: http://review.couchbase.org/89235\nReviewed-by: Mike Goldsmith \u003cgoldsmith.mike@gmail.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1518418909000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2eef06d3c2bb2e9a9474b9f6f5e5f33675a02ecf","msg":"Start 2.6.0 Development\n\nChange-Id: I0e67299eac674577b23dc74d19af758cc00e1f64\nReviewed-on: http://review.couchbase.org/89730\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1519121330000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fe9e30b43f8b02d10aaea0614d424e2a6a622ed1","msg":"JCBC-1164: Add Tracing to Get \u0026 Exists.\n\nThis changeset adds tracing and timeout functionality to the\nfollowing requests:\n\n - get\n - getAndTouch\n - getAndLock\n - exists\n\nSince the bucket impl is growing, its time to refactor the\nactual implementations into their own helper classes.\n\nModifications\n-------------\nOther than refactoring the code it has been changed to perform\ntimeouts through the timeout() operator, adds async APIs with\ntimeout overloads and if a timeout exception is raised takes\nit, and rethrows it with additonal information based on the\ntracing RFC.\n\nResult\n------\nGet, exists and variants are now working with respect to the\ntracing rfc.\n\nChange-Id: I8758d9bd92a8abc4928e13a7fc32dbd7b7e729db\nReviewed-on: http://review.couchbase.org/89951\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Exists.java","src/main/java/com/couchbase/client/java/bucket/api/Get.java","src/main/java/com/couchbase/client/java/bucket/api/Utils.java"],"date":1519389878000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6c4fabc132793c7ed4f286546bef6de1ae3d8ffa","msg":"JCBC-1164: Add Tracing to getFromReplica\n\nThis changeset adds tracing to getFromReplica. It creates\nan internal parent span for each execution. The threshold\nlog will only pick up the individual get or replica get\nrequests, since the overall parent span has no real benefit\nin this case (but it does when used in a distributed tracing\ncontext).\n\nChange-Id: I5eb800fc6099a7b523ac0b1ffd65cd8dd7edf112\nReviewed-on: http://review.couchbase.org/89962\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java","src/main/java/com/couchbase/client/java/bucket/api/Get.java","src/main/java/com/couchbase/client/java/bucket/api/Utils.java"],"date":1519395499000,"numberOfModifiedFiles":6},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e49b047957cef29871746107df6ac2a81d7d0033","msg":"JCBC-1169, JCBC-1170: Add field level encryption support\n\nMotivation\n---------\nAdd field level encryption support for JsonDocument and EntityDocuments.\n\nChanges\n-------\n - JsonCrypto transcoder is added when encryption configuration is set on\n the environment.\n - Encrytion and decryption apis added to JsonObject. The object has\n   been modified to store encryption meta information.\n - Encryted field annotation has been added and can be used with\n   entities.\n\nResults\n-------\nFieldLevelEncryptionKeyValueTest which verifies encryption and\ndecryption using both symmetric and asymmetric key algorithms pass.\n\nChange-Id: Iee856a207a0a3d3ef614a4d1730868ea37de2bf1\nReviewed-on: http://review.couchbase.org/89902\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/repository/annotation/EncryptedField.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/PropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java","src/main/java/com/couchbase/client/java/transcoder/crypto/JsonCryptoTranscoder.java"],"date":1519321346000,"numberOfModifiedFiles":8},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8a29bfae468888bcfa93143abc23670ce7f61331","msg":"JCBC-1164: Add tracing to insert, upsert and replace.\n\nMotivation\n----------\nThis changeset refactors insert, upsert and replace to include\nsupport for tracing and spans.\n\nChange-Id: Ife9a57db0aa0bb42d6d27765bbf21607f7f49dba\nReviewed-on: http://review.couchbase.org/90043\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java","src/main/java/com/couchbase/client/java/bucket/api/Utils.java","src/test/java/com/couchbase/client/java/CouchbaseAsyncBucketTest.java"],"date":1519632466000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0fe6187fac30014b97ae475b8b6339133bc2fe64","msg":"JCBC-1164: Add tracing to remove.\n\nMotivation\n----------\nThis changeset refactors remove to include\nsupport for tracing and spans.\n\nChange-Id: I5cc8cb1a491e139a382d2d824d7185a6bb2b7b7e\nReviewed-on: http://review.couchbase.org/90045\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java"],"date":1519639583000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3de1b77040e02a5de44caa3516e4e1f5bc80041a","msg":"JCBC-1164: Add Tracing for N1QL\n\nMotivation\n----------\nThis changeset adds tracing support for N1QL. As part of it,\nsome API changes are required here in java-client as well\nas in core-io so this needs to be merged in tandem with\nthe corresponding core-io changes.\n\nChange-Id: I53bc8b064490c9737099317563110594ba68d1c1\nReviewed-on: http://review.couchbase.org/90062\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/DefaultBucketManager.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/test/java/com/couchbase/client/java/query/core/N1qlQueryExecutorTest.java"],"date":1519659600000,"numberOfModifiedFiles":11},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68a60ce97672cd1330f9b3afae0fc57329ebc0b0","msg":"Make integration tests more resilient.\n\nThis changeset fixes some RBAC related authentication issues\nin tests and also makes flush-based test cases more resilient\nto temporary failures which can happen because of a server\nside issue but are safe to be retried.\n\nChange-Id: Iaca3fc39adfd25b8d0114a92c0cfea3a1559f4c5\nReviewed-on: http://review.couchbase.org/90119\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Sergey Avseyev \u003csergey.avseyev@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1519712764000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"05c0c0d271034832326443062730e35290a29a97","msg":"JCBC-1164: Refactor Get and Exists.\n\nMotivation\n----------\nDuring further testing it was found that like with mutations, the\nmapping and filtering needs to be pulled out of the deferAndWatch\nlike it was before to make it all work properly and without\nhiccups.\n\nChange-Id: I793773d60587c1a4e1ea60c82db5d1f4747c6240\nReviewed-on: http://review.couchbase.org/90121\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/api/Exists.java","src/main/java/com/couchbase/client/java/bucket/api/Get.java"],"date":1519717615000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"685b1ce862dcddd7ac1cfa20864e6bd18472a726","msg":"JCBC-1164: Refactor Mutate\n\nThis changeset does two things:\n\n - it removes the need for the atomic references in that, similar\n   as with get, it pulls out the request scope and therefore the\n   JVM can infer it as final\n - it adds explicit timeout() to the observe overloads since the\n   timeout is not applied in higher scope anymore and observe\n   is not yet supported with explicit timeouts and spans.\n\nChange-Id: I9cb8b4d34b9e26a54aa1d9d15518f5bd364e868e\nReviewed-on: http://review.couchbase.org/90124\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java","src/main/java/com/couchbase/client/java/bucket/api/Utils.java"],"date":1519720812000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f648cda71dd2f8ed55345e3522922d5f9a87f085","msg":"Prepare 2.6.0-dp1 release.\n\nChange-Id: I9865c6d2e7141d2bc83e9a549587b951613c77c0\nReviewed-on: http://review.couchbase.org/90149\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1519759751000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"fb5ddccb55285c0a01ca424f4803499a4db80fe6","msg":"Back to 2.6.0-SNAPSHOT\n\nChange-Id: If1fa2bb644ddf086723861e0a664ae288958a41b\nReviewed-on: http://review.couchbase.org/90924\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1521028523000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3782dd86fed3dd5b55e82f52049bd9925d965767","msg":"JCBC-1164: Add Tracing to Unlock and Touch.\n\nMotivation\n----------\nThis changeset adds tracing support to both unlock\nand touch.\n\nChange-Id: Ic8601449f0b05cd0939fcd2ba16a0d9a5d395964\nReviewed-on: http://review.couchbase.org/90928\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java"],"date":1521031827000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"057073ee4bb9549118f70876f00acbad5ec6b509","msg":"JCBC-1164: Add Tracing to Counter.\n\nMotivation\n----------\nThis changeset adds tracing to the counter operation.\n\nChange-Id: I8ff4e4074f9d33a22ac21132981615d88f0185e4\nReviewed-on: http://review.couchbase.org/90930\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java"],"date":1521034573000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"94caa1816e69cb13b89fef9482e92eec2f41ecb1","msg":"JCBC-1164: Add Tracing to Append \u0026 Prepend\n\nMotivation\n----------\nFollowing similar changesets, this changeset adds tracing\nsupport to append and prepend.\n\nChange-Id: I8d830bfea2ce36d628123bd7ede3d328e6d867a7\nReviewed-on: http://review.couchbase.org/90998\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java"],"date":1521111468000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"efd794e502974386da1842eff41cd8d4c7d6b3b9","msg":"JCBC-1164: Add Tracing to remaining query APIs\n\nThis changeset adds basic tracing support to the\nremaining query APIs, namely:\n\n - FTS\n - Analytics\n - Views \u0026 Spatial Views\n\nChange-Id: I9d6aafc3bd71b4b9d3642cf4338e5e02253ff1be\nReviewed-on: http://review.couchbase.org/91687\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1522158225000,"numberOfModifiedFiles":5},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7ac527509028e9742ef0ffc37014a5c5834dcec3","msg":"Integration test for JVMCBC-513\n\nChange-Id: I74d78f75580e23f8344ce26d8883a52fda939bd8\nReviewed-on: http://review.couchbase.org/90569\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java"],"date":1520382549000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"02fe55b28b58a42b2c1805c6815a8ff502a9523e","msg":"JCBC-1164: Add tracing to the subdoc API\n\nThis changeset adds span tracing to the subdoc API,\nalongside related changes in previous commits.\n\nChange-Id: I0ab9482445012f74cd2ba86c14a4ec0dafed3547\nReviewed-on: http://review.couchbase.org/91593\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/LookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutateInBuilder.java"],"date":1522053259000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"79f79f0896d57b009a2c6967eac47d3560a3ac3c","msg":"JCBC-1164: Add tracing to observe overloads.\n\nModifications\n-------------\nThis changeset adds tracing support to all the overloads which\nsupport observe (PersistTo \u0026 ReplicateTo). Building on the\nchanges in core-io, a parent span is created under which the\nindividual attempt is stored as well as each observe poll\nas a separate span.\n\nChange-Id: Ic203d2c9e35f124226de21ee127ed6f1efa9cbbb\nReviewed-on: http://review.couchbase.org/91750\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java"],"date":1522241862000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"df508b417bb40eed45d1255350f0587a963ce7a0","msg":"Changes as part of JVMCBC-506\n\nMotivation\n----------\nAdd optional dependency on the crypto extensions and also implement new\nchanges in RFC.\n\nChanges\n-------\n    - Add optional dependency to crypto extensions\n    - Add signature to the encrypted value\n    - Escape and unesape json pointer path value in encryption\n      information in JsonObject\n    - Change encryption provider to be enum\n\nResult\n------\nNow crypto extensions is optional. The tests from the RFC pass.\n\nChange-Id: I77acd4f7893f2e3e2f3a7de3c0f885961c5433c5\nReviewed-on: http://review.couchbase.org/91856\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/ValueEncryptionConfig.java","src/main/java/com/couchbase/client/java/encryption/EncryptionProvider.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/repository/annotation/EncryptedField.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/PropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java","src/main/java/com/couchbase/client/java/transcoder/crypto/JsonCryptoTranscoder.java","src/test/java/com/couchbase/client/java/encryption/FieldLevelEncryptionTest.java"],"date":1522355822000,"numberOfModifiedFiles":13},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e6d52349435c715032c027864a4cec89a5b78293","msg":"JCBC-1175 Fix incorrect mapping of queue subdoc remove\n\nMotivation\n----------\nSimulataneuously queue mutation could cause incorrect behavior of queue\npop\n\nChanges\n-------\nIf the recursion returns null, there was a cas mismatch so dont map the\nresult as success, instead return cas mismatch exception.\n\nResults\n-------\nMultithreaded queue pop test verifies the change.\n\nChange-Id: I41829c4590388e07a04185aa3fcd2712ffd69605\nReviewed-on: http://review.couchbase.org/92665\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/datastructures/DataStructuresTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1520556181000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c4d02f03eb6e056ca1a20ff872616ba1b7afec76","msg":"Fix test to be RBAC compliant\n\nChange-Id: Ie6d35ad765941c492b3205a2b6530647b1d487b6\nReviewed-on: http://review.couchbase.org/92684\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java"],"date":1523605996000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"91690fd4f71ed88612e587cab620ad319b8d7865","msg":"JCBC-1164: Do not apply timeout if 0.\n\nIf no timeout is specified by the upstream code for observe\ndo not apply a \"0\" timeout since it will fail immediately.\nInstead to comply and be backwards compatible only add\nthe timeout if provided.\n\nChange-Id: Ic42565d2f939805497100a8edebff358a0d9de03\nReviewed-on: http://review.couchbase.org/92685\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1523607401000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5245d085298dc03053471cbb164ebbbcbb25a023","msg":"Add cb prerelease repo for beta\n\nChange-Id: I90b42fca4a67fcadec2f7be0d6b2336690a6200f\nReviewed-on: http://review.couchbase.org/92711\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1523637299000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"869ebfe1a4db5509123ba2896eaed75479a9b115","msg":"Prepare beta release\n\nChange-Id: I381a65eb7b0630659111b2966d9176b2c4aae35b\nReviewed-on: http://review.couchbase.org/92712\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1523637512000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4840154e60eec2834ab8087b3e18fc9182bb5007","msg":"JCBC-1194 Enable service on nodes in the bootstrap list in round robin\n\nChange to select new node from bootstrap list in round robin way for\nretries to enable services on nodes.\n\nChange-Id: I4ea9a61313f8e39eb7167702624458068ba552c6\nReviewed-on: http://review.couchbase.org/93137\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1524521819000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ccbfbe891179a8e8f75dae0c8974e1b993ccc558","msg":"JCBC-1179 Add profile option to N1qlParams\n\nChange-Id: Ie05cacbf5034b90e57deb72235b10d35839768a4\nReviewed-on: http://review.couchbase.org/92662\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/N1qlProfile.java"],"date":1522432677000,"numberOfModifiedFiles":3},{"authorName":"Graham Pople","authorEmail":"grahampople@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Graham Pople","committerEmail":"grahampople@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cda1cbbf7bedb632a96be90f49d72e23f8e0d55e","msg":"JCBC-1193: Adding Automatic-Module-Name for Java 9 modules\n\nMotivation\n----------\nA user is trying to use our client as a Java 9 module.  Right now they\nneed to put in their module-info.java:\n\nmodule com.mycompany {\n    requires java.client;\n}\n\nthis will change it to:\n\nmodule com.mycompany {\n    requires com.couchbase.java.client;\n}\n\nNote that this does not make us a \u0027proper\u0027 Java 9 module, e.g. one with\na module-info.java and compiled with JDK9.  We cannot do that right\nnow as we need to be JDK6.  But Java 9 has a feature called\n\u0027automatic modules\u0027, where a Java 9 app can add our jar to the\n--module-path and it will pretend we\u0027re a proper module.  This change\nensures we have a better module name than the auto-guessed \u0027java.client\u0027.\n\nModifications\n-------------\nAdding Automatic-Module-Name into the jar\u0027s manifest file.\n\nNote this isn\u0027t really a breaking change even though we\u0027re changing the\nmodule name, as currently you can\u0027t use our jar as an automatic module\nanyway (see JCBC-1193).\n\nThere\u0027s an unrelated removal of the Sonotype plugin, which causes Maven\nto fail on my system.  I believe it\u0027s not needed - please verify.\n\nNo way to unit test, but I\u0027ve tested manually against JDK6 and 9 apps.\n\nResult\n------\nWorks as currently from a JDK6 app.\n\nIn a JDK9 app, the new module name works.\n\nChange-Id: I120556f1c0e180d3cd4297c68780e2230edfc8a2\nReviewed-on: http://review.couchbase.org/93419\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1524826226000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1d359181ebf308b6a29a6862829746154d95a3a9","msg":"Add LICENSE file\n\nChange-Id: Ifb8f273f304a3de61084068b7881772bc101056a\nReviewed-on: http://review.couchbase.org/94394\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["LICENSE"],"date":1526612700000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"88bc7f3003aee048ddd272fd850acaa457a13807","msg":"JCBC-1203: Add CertAuthenticator and related checks\n\nMotivation\n----------\nThis changeset brings the Java SDK API-wise in line\nwith the SDK-RFC around client certificate authentication.\nIt worked before but this change brings in the CertAuthenticator\nas well as adds all kinds of sanity checks so that invalid\nauth combinations are rejected.\n\nModifications\n-------------\nThis changeset adds the CertAuthenticator (which can be used\nas a singleton) and then adds checks to the CouchbaseAsyncCluster\nso that invalid combinations depending on the environment settings\nare not allowed and error quickly.\n\nTests have been added to verify those in a unit-test setting.\n\nResult\n------\nThe Java SDK is in line with the RFC API requirements and error\nhandling sections.\n\nChange-Id: I35202e466a69b0d3d29d913c3b74d3b5558edea0\nReviewed-on: http://review.couchbase.org/94200\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/auth/CertAuthenticator.java","src/main/java/com/couchbase/client/java/error/AuthenticationException.java","src/main/java/com/couchbase/client/java/error/MixedAuthenticationException.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/auth/CertAuthenticatorTest.java"],"date":1526380882000,"numberOfModifiedFiles":7},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"6f5235b64528e6ec84b45a826127e096a983e107","msg":"Switching to SNAPSHOT\n\nChange-Id: I3f2be4b8dd3d386e4ec227732dbc7264583c6f37\nReviewed-on: http://review.couchbase.org/94503\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1526976300000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"916f62bc7a53c1c2748715b290b44e1622f701a3","msg":"JCBC-1158: Support annotations in parent classes\n\nMotivation\n----------\nOn our experimental repository API, it was reported that if the\nID (or any other field for that matter) was stored on a parent\nclass it is not picked up properly by our mapper.\n\nModifications\n-------------\nThis changeset makes sure that all the fields looked at are\nrecursively picked up from parent classes as well so that\nif a child class is passed in all the proper fields from\nparent classes can be used.\n\nTest case has been added to verify this.\n\nResult\n------\nSupport for fields with annotations in parent classes.\n\nChange-Id: I219e1733476d2958699ddec8b4b52eacc6b7f19b\nReviewed-on: http://review.couchbase.org/94676\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedEntityMetadata.java"],"date":1527162574000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2134ce5ae45e912d2943b9ef8e3261ee98bbec6f","msg":"Update signatures to latest tracing changes.\n\nChange-Id: I67aeda31ad27ab2ec831d62d1748eb1cc8e8f4e8\nReviewed-on: http://review.couchbase.org/95011\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java","src/main/java/com/couchbase/client/java/bucket/api/Exists.java","src/main/java/com/couchbase/client/java/bucket/api/Get.java","src/main/java/com/couchbase/client/java/bucket/api/Mutate.java","src/main/java/com/couchbase/client/java/bucket/api/Utils.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/subdoc/AsyncLookupInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1527250344000,"numberOfModifiedFiles":10},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"23fc015c28eedcd4ff288915eed306a613c67eac","msg":"More signature fixes needed\n\nChange-Id: I2bda5548d0c616af56e1a569329ac0b6a0e840c0\nReviewed-on: http://review.couchbase.org/95012\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/api/Utils.java"],"date":1527835687000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"77b3c496f672ed971967f8b73d90be0f302a7d59","msg":"JCBC-1209: Audit and add explicit subscribers on req creation\n\nMotivation\n----------\nIn an earlier changeset the explicit subscriber management on\nthe request has been added, but some of the APIs have been\noverlooked - this can lead to inconsistent behavior\nin core-io.\n\nModifications\n-------------\nThis changeset audits all calls to core.send(...) and where\nneeded adds the explicit subscriber management on the request\nsince core-io checks if a subscriber is attached and if not\nit never treats it as non-active. Especially n1ql requests\nin this regard have been treaded differently before this\nchangeset compared to kv requests.\n\nResult\n------\nComplete audit of .send() APIs and every request now properly\nhandles it subscriber and can be checked against timeouts in\ncore-io.\n\nChange-Id: I4d85934565ec89390232b2f0d21751d59a291b4a\nReviewed-on: http://review.couchbase.org/95189\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/main/java/com/couchbase/client/java/bucket/BucketFlusher.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/ReplicaReader.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/api/AsyncRestBuilder.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java"],"date":1528200001000,"numberOfModifiedFiles":10},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cd54b1e38e0c57dd899ddfd31cf23c81575c6f7d","msg":"JCBC-1207: Dont do reverse address lookup for DNS SRV bootstrap\n\nMotivation\n----------\nChanges for JVMCBC-513 made sure the addresses can be resolved to fix\nunhandled NPE. This check is not necessary for DNS SRV bootstrap.\n\nChanges\n-------\nUse the unresolved hosts from ConnectionString in core. Changed the bad\nips to x.y.z on the tests as they resolve now.\n\nChange-Id: I9f0becac97217b9a465d158bfa8b9008be58f830\nReviewed-on: http://review.couchbase.org/95058\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java"],"date":1527879106000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b3fe6a5a11fff5dc9c0e6d6671f71beb66df93ad","msg":"JCBC-1208 Update Java docs intro to use RBAC authentication\n\nChange-Id: I71d68e760c9422fe12f5e53c5fbcffd8e6d9565f\nReviewed-on: http://review.couchbase.org/95140\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e","modifiedFiles":["docs/teaser.html"],"date":1528135416000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ccdd03cdd326ec1118f9e2135348bce36f9be3a0","msg":"JCBC-1186: Pick up and allow to configure analytics timeout\n\nMotivation\n----------\nIf no explicit server side timeout is provided by the user,\nsimilar to the n1ql API, an implicit server side timeout\nshould be set which aligns with the client side timeout to\nnot let them run to infitiny if the client is not interested\nanymore.\n\nNote that since the server only recently introduced the\n\"timeout\" config option, this change is not backwards\ncompatible with older pre-release analytics server\nversions if they reject unknown config params!\n\nModifications\n-------------\nThis changeset works by making two changes:\n\n - first, a new serverSideTimeout config option is\n   introduced which allows to explicitly set the\n   server side timeout.\n - second, the bucket code checks if an explicit\n   timeout if set and if this is not the case sets\n   it to the client side timeout.\n\nResult\n------\nIf the client stops listening, this will make sure\nthat the server side also stops processing the\nrequest.\n\nChange-Id: I033ef31a1545b7b1f9ee94f9a1234db94c2a9a22\nReviewed-on: http://review.couchbase.org/95355\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsParamsTest.java"],"date":1528451970000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a657e5240cfd54447c712e1a118c2ad7157aa03b","msg":"JCBC-1205: Adopt new tracing formatting.\n\nThis changeset adapts the timeout exception formatting to align\nwith the latest SDK-RFC changes (towards a terse json format).\n\nChange-Id: I7f41835164f1ed56e26f88d0b09225473f311704\nReviewed-on: http://review.couchbase.org/94769\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/api/Utils.java","src/test/java/com/couchbase/client/java/bucket/api/UtilsTest.java"],"date":1527237344000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5ce08b09ec1c67b02f48e6de5e3c9f8575675969","msg":"JCBC-1213: Search Query sorting order needs to be \"desc\"\n\nMotivation\n----------\nA bug was reported by the community that field sort order\n\"descending\" was wrong when sent to the server, and indeed\nit needs to be \"desc\" on the wire.\n\nModifications\n-------------\nThe SearchSort serialization key has been adapted to reflect\nthe correct encoded key and the tests have been adapted\nas well.\n\nResult\n------\nIt is now possible to set the descending field sort order,\nsince previously the server would ignore it.\n\nChange-Id: I09318e777f20b391ebbb4d9ae264f2b36df87685\nReviewed-on: http://review.couchbase.org/95993\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/sort/SearchSort.java","src/test/java/com/couchbase/client/java/search/SearchParamsTest.java"],"date":1529653758000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"b47acb14ad8fc6ebe7448da2144049c059300cec","msg":"JCBC-1202, JCBC-1210: Updates as per RFC and latest encryption repo\n\nMotivation\n----------\nThe latest encryption repository has updates as per latest RFC. So the\ncorresponding changes have to be added. Add verification test for RSA.\n\nChanges\n-------\n    * EncryptedField annotation contains only the provider name.\n    * Instead of encryptionConfig, the crypto manager has been added.\n    * JsonObject has separate APIs for encrypt and decrypt fields. This\n      has a slight variation from the RFC as it is easier for using\n      JsonObject. The reason for separate API is that new error classes\n      have been introduced for encryption.\n    * Move APIs from uncommitted to committed\n\nResults\n-------\nVerification tests pass\n\nChange-Id: I572c8a92acee8a1503c7466063010344c174f64d\nReviewed-on: http://review.couchbase.org/95855\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/document/json/ValueEncryptionConfig.java","src/main/java/com/couchbase/client/java/encryption/EncryptionProvider.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/repository/annotation/EncryptedField.java","src/main/java/com/couchbase/client/java/repository/mapping/DefaultEntityConverter.java","src/main/java/com/couchbase/client/java/repository/mapping/PropertyMetadata.java","src/main/java/com/couchbase/client/java/repository/mapping/ReflectionBasedPropertyMetadata.java","src/main/java/com/couchbase/client/java/transcoder/crypto/JsonCryptoTranscoder.java","src/test/java/com/couchbase/client/java/encryption/FieldLevelEncryptionTest.java"],"date":1529454367000,"numberOfModifiedFiles":14},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7a3b238a56a5b5a4bc1601fa0daab78f8e9cba62","msg":"JCBC-1210 Polish the exception messages to make it more consistent with\nthe RFC\n\nChange the messages in the exceptions to match the RFC.\nRemove configuration exceptions as they are already handled in the\nencryption extension repo.\n\nChange-Id: Ib6184fcce09b028a5a3084e082775136fa38c2fe\nReviewed-on: http://review.couchbase.org/96347\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/transcoder/crypto/JsonCryptoTranscoder.java"],"date":1530313635000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ded33a43544d684b675853f97594c4472c988acb","msg":"JCBC-1184: fix javadoc of BucketManager getDesignDocument\n\nMotivation\n----------\nThe code has been changed some time ago but the javadoc return value\nhasn\u0027t been updated to reflect the change (the exception is part\nof the javadoc already but the return annotation is misleading)\n\nChange-Id: I85995e073c6bc09a38ceaf120d38d3d821c14b99\nReviewed-on: http://review.couchbase.org/96374\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java"],"date":1530520645000,"numberOfModifiedFiles":2},{"authorName":"Graham Pople","authorEmail":"grahampople@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Graham Pople","committerEmail":"grahampople@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eeb776d9af7f95735b471a49824935b3e6864349","msg":"JCBC-1217: ClassNotFoundException on CryptoProviderMissingPublicKeyException\n\nMotivation\n----------\nThe recent addition of the field-level encryption library causes any use of\nJsonObject (including when doing nothing with encryption) to fail at class\nload time with a ClassNotFoundException, if the encryption library is not\navailable.\n\nModifications\n-------------\nMoved two exceptions from the field-level encryption library into java-client.\n\nResult\n------\nTests and apps run as expected, including when the encryption library has\nbeen removed from the local maven repo.\n\nChange-Id: Ibe55bcbb132d49d6583ec69a960d7fa8b62af09b\nReviewed-on: http://review.couchbase.org/96449\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/error/CryptoProviderMissingPublicKeyException.java","src/main/java/com/couchbase/client/java/error/CryptoProviderSigningFailedException.java"],"date":1530622694000,"numberOfModifiedFiles":3},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a44817de7965c9827ab1dfb608ef6cdaa4821bea","msg":"JCBC-1217 Workaround for JVM\u0027s eager loading of Exception classes\n\nMotivation\n----------\nThe exception classes are eagerly loaded by the JVM which causes\nclassNotFound exceptions to happen for the optional dependency classes\nin Encryption library.\n\nChanges\n------\nUse the encryption library methods now to throw the exceptions instead of\nhandling it here.\n\nResults\n-------\nVerified using a standalone project\n\nChange-Id: Ia9ef0d379eeedc56671245bcad1180d2034fe070\nReviewed-on: http://review.couchbase.org/96472\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/error/CryptoProviderMissingPublicKeyException.java","src/main/java/com/couchbase/client/java/error/CryptoProviderSigningFailedException.java"],"date":1530643639000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c5414ef43ec3e1ddfcfb1e0452eb350119afc154","msg":"Prepare 2.6.0 Release\n\nChange-Id: I80450ae6b3582c23387627dc9e5d4548df22158f\nReviewed-on: http://review.couchbase.org/96545\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1530774747000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ad5db887f11b9ba9c58049902cd4a978911d9cf3","msg":"Bump encryption to 1.0.0\n\nChange-Id: I87854529e70e5c405c1b97c50ca3c8fbcf86225e\nReviewed-on: http://review.couchbase.org/96550\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1530777867000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f650cbc0071294bf990175c8da640cd819868e71","msg":"Start 2.6.1 Development\n\nChange-Id: Iefd653e0186d91e0cc6436610e03e5e825c138d1\nReviewed-on: http://review.couchbase.org/96737\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1531220056000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e1e75ffa87fb9890b8aa6280b4d1360c12f5480e","msg":"JCBC-1221: Implicitly propagate parent span if available\n\nMotivation\n----------\nRight now it is not possible to specify a parent span for the\noperations traced inside the SDK. This is unfortunate since\ncontext is lost which should be propagated if possible.\n\nModifications\n-------------\nThis changeset latches onto the fact that there is an active\nspan in scope (mostly implemented through thread locals in\nthe actual impls) and uses this one explicitly if provided.\n\nThis allows to run code like this to automatically propagate:\n\ntry (Scope scope \u003d tracer.buildSpan(\"my-op\").startActive(true)) {\n  bucket.get(\"document\");\n}\n\nSince most of the time thread locals are used, when used with callbacks\nthe scope needs to be activated explicitly in callbacks:\n\nbucket.async().get(\"airline_10123\").flatMap((Func1\u003cJsonDocument, Observable\u003c?\u003e\u003e) jsonDocument -\u003e {\n      tracer.scopeManager().activate(scope.span(), false);\n      return bucket.async().upsert(jsonDocument);\n}).toBlocking().single();\n\nAlso added an environment switch to explicitly disable the\npropagation, but it\u0027s enabled by default.\n\nResult\n------\nAutomatic parent span propagation into the SDK scope, can be disabled\nif needed.\n\nChange-Id: Id89e12d3ec2e0cadc1df3b1ee059b8c0817a03c0\nReviewed-on: http://review.couchbase.org/96766\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Mike Goldsmith \u003cgoldsmith.mike@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/bucket/api/Utils.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java","src/main/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironment.java"],"date":1531287879000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c0bc46344c36d37d29be6333ec9b372539f39e0d","msg":"JCBC-1223: Do not add timeout if it\u0027s zero.\n\nMotivation\n----------\nA bug has been found which causes operations to time out very\nquickly under the following conditions:\n\n - The Async API is used\n - No explicit timeout is provided\n - Durability requirements are specified (PersistTo/ReplicateTo)\n - The operation is one of the following KV operations:\n    * insert, upsert, replace\n    * remove\n    * counter\n    * append, prepend\n\nThis manifests mostly when calling a method from above like this:\n\n  bucket.async().upsert(doc, PersistTo.MASTER)...;\n\nThis will internally schedule a timeout with 0, meaning it will\ntime out right away. Since all other combinations actually specify\na timeout they are not affected.\n\nModifications\n-------------\nThis changeset audits the java-client codebase for cases where a\npossible 0 timeout can be used and adds integration tests for the\nKV cases outlined above.\n\nNot applying a timeout if it is 0 is the backwards compatible way\nsince in previous releases also no timeout was in place for these\ncases.\n\nResult\n------\nBackwards compatible behavior (no timeout) for async KV operations\nwith durability requirements. Only 2.6.0 is affected, previous\n2.5.x releases are not.\n\nChange-Id: I205927704ca606e98dd4e610b1658c71a1702204\nReviewed-on: http://review.couchbase.org/96843\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/bucket/DefaultAsyncBucketManager.java","src/main/java/com/couchbase/client/java/util/TransparentReplicaGetHelper.java","src/main/java/com/couchbase/client/java/view/DefaultSpatialViewResult.java","src/main/java/com/couchbase/client/java/view/DefaultViewResult.java"],"date":1531466366000,"numberOfModifiedFiles":6},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8a9298a7385608ab17f73bf8773a632fedf14041","msg":"JCBC-1222 Add license note to encryption APIs\n\nChange-Id: I589a1acee1aae919f3a1609d928ebd577f847ff2\nReviewed-on: http://review.couchbase.org/97290\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/document/json/JsonObject.java","src/main/java/com/couchbase/client/java/env/CouchbaseEnvironment.java"],"date":1532378731000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"790f468598f5858c17ab4ac6a7841238e650187b","msg":"Prepare 2.6.1 release\n\nChange-Id: I93187a1e8b6a2559bd6d2980864844358826c5c8\nReviewed-on: http://review.couchbase.org/97298\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1532389591000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"69fc0890997c5474d23391a63e202806c7cf45f7","msg":"Start 2.6.2 Development\n\nChange-Id: Ia9f3a518bfb943a76737ca270dc381ed30fb3546\nReviewed-on: http://review.couchbase.org/97385\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1532522934000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ef68a20c6e8725a5b3b755cea70be44e6c120a7d","msg":"JCBC-1226: Initialize AnalyticsParams if not provided.\n\nMotivation\n----------\nIf no analtics params are provided by the user, the default\nimplementation should be used so that downstream code does\nnot result in a NPE.\n\nModifications\n-------------\nSimilar to what N1QL does, the query initializes the analytics\nparams now to the default object if not provided so that there\nis no NPE down the code paths.\n\nResult\n------\nNo NPE when bucket.query(AnalyticsQuery.simple(\"...\")); is used.\n\nChange-Id: Idfe12d02fdc09a6b896ae1c882e2712f592d4e50\nReviewed-on: http://review.couchbase.org/97384\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/SimpleAnalyticsQuery.java","src/test/java/com/couchbase/client/java/analytics/SimpleAnalyticsQueryTest.java"],"date":1532517100000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3e42d45de868d9c39274ec2562ff02ba9d8939a1","msg":"JCBC-1227: Expose \"pretty\" option for analytics.\n\nMotivation\n----------\nPreviously pretty has been hardcoded to false, but we should\ngive the user the option to configure it.\n\nModifications\n-------------\nThe option is now exposed on the analytics params, and a test\ncase has been added to verify the default state as well as\nthe desired config option.\n\nChange-Id: Ia659457fc5944384a12cafba18c4dcc9f417aa27\nReviewed-on: http://review.couchbase.org/97447\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsParamsTest.java"],"date":1532616537000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ddd6bcd67e38055393e9585b1bbb05fa05cfc2b2","msg":"JCBC-1233, JCBC-1234, JCBC-1235: Various analytics enhancements.\n\nThis changeset contains three small enhancements for analytics:\n\n - The ; is not appended anymore if not present. This has been a\n   limitation in early analytics previous and is not required\n   anymore.\n - The code now always sets the client context ID if not already\n   present to work nice with tracing infrastructure.\n - If pretty\u003dfalse (default), there is no need to send this over\n   the wire. Saves a couple bytes on every request.\n\nChange-Id: Ib8bf9949aa00af425d73befd45bb4a63ae47e71b\nReviewed-on: http://review.couchbase.org/98362\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/SimpleAnalyticsQuery.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsParamsTest.java","src/test/java/com/couchbase/client/java/analytics/SimpleAnalyticsQueryTest.java"],"date":1534407017000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e3463db922d658467d43187b60dd1384fc4de46f","msg":"JCBC-1229: Add support for parameterized analytics queries.\n\nMotivation\n----------\nThis changeset adds support for parameterized queries, very similar\nto what we already expose for N1QL.\n\nModifications\n-------------\nParameterizedAnalyticsQuery has been added which extends from\nthe simple one and works the same but it also injects either\npositional or named arguments.\n\nUnit tests added to make sure the params are passed in the\nright way.\n\nChange-Id: I2d42a5d8fb81b18e5e62faceed43832c897650ae\nReviewed-on: http://review.couchbase.org/98435\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsQuery.java","src/main/java/com/couchbase/client/java/analytics/ParameterizedAnalyticsQuery.java","src/main/java/com/couchbase/client/java/analytics/SimpleAnalyticsQuery.java","src/test/java/com/couchbase/client/java/analytics/ParameterizedAnalyticsQueryTest.java"],"date":1534502469000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a37d6c0cc39be1b98a123d2aeff70eb3f82d9644","msg":"JCBC-1236: Add support for analytics priority param.\n\nMotivation\n----------\nThis changeset exposes the priority setting as a param and\npasses it down to the core-io layer.\n\nModifications\n-------------\nNote that according to the RFC it is exposed as a boolea for now,\nbut since the server support it as an integer we are storing it\nlike that internally. This makes it trivial to open it up further\nin the future.\n\nChange-Id: I24bd78cd2f1be450cf364dd9c9b1d745d7741b5f\nReviewed-on: http://review.couchbase.org/98375\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsParamsTest.java"],"date":1534414595000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c5fbb61113193fb9c1b0602bf69a9be767ddb734","msg":"JCBC-1154: Support ANSI join syntax.\n\nMotivation\n----------\nThis changeset adds support for the new \"on\" clause for joins where\nin the past we only had \"on keys\". Support for hash joins will\nbe added in a separate commit since we need to add a path for hints\nthat is more generic.\n\nChange-Id: I6febf604eb28e807195c4e3ac64d0a092b6e94b0\nReviewed-on: http://review.couchbase.org/98577\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/path/DefaultKeysPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/KeysPath.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslTest.java"],"date":1534855696000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7529bcae87a2af9b7fe4c53a204d5d700b8ca5fd","msg":"Prepare 2.6.2 Release\n\nChange-Id: I4f63c7ca3d8fa77469d653f379c018123b72962f\nReviewed-on: http://review.couchbase.org/99160\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1536045656000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e10b1b49690fa9293f767696c41cc94633d1b329","msg":"Start 2.6.3 Development\n\nChange-Id: I6411bb5b103f3ced9bf50d775ab22f43c3e3f2b1\nReviewed-on: http://review.couchbase.org/99592\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1536906377000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d86855f2f051ad8e9eeae201f3d2c0829364445e","msg":"JCBC-1244: Add processedObjects to AnalyticsMetrics\n\nMotivation\n----------\nprocessedObjects are part of the metrics section that an analytics\nquery returns, so similar to other items it needs to be part of\nthe returned structure.\n\nChange-Id: If23a56fd5fe7ea8a125d7012ddaf5ea39d0bb925\nReviewed-on: http://review.couchbase.org/99900\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsMetrics.java"],"date":1537795334000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ed58b4295597110f0de2ea84d79c7adda08014a9","msg":"Bump version to 2.7.0\n\nChange-Id: I6318eba10797748bfb9f9fac70514d5f89686988\nReviewed-on: http://review.couchbase.org/100054\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1538062518000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ccd227cfa63f4571151b09ec5ebbe56b5c4ee43a","msg":"JCBC-1232: Transparent retry for search http 429\n\nMotivation\n----------\nSince Couchbase Server 6.0 the search engine respects the memory\nquota in a hard way and will push back to the client if it is\noverloaded.\n\nTo deal with this, a code change is in place that applies a retry\nlogic but will also propagate the error if it can\u0027t work it out\nafter the retries are exhausted.\n\nFor now this is only configurable through system properties, but\naligned with the other SDKs. The current retry delay\nintervals might change over time.\n\nTest have been added to assert the functionality.\n\nChange-Id: I5177a5b2642e0a056833691ceed57b6f42b7fc27\nReviewed-on: http://review.couchbase.org/99952\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java","src/main/java/com/couchbase/client/java/error/FtsServerOverloadException.java","src/main/java/com/couchbase/client/java/search/core/SearchQueryExecutor.java","src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java","src/test/java/com/couchbase/client/java/search/core/SearchQueryExecutorTest.java"],"date":1537883018000,"numberOfModifiedFiles":5},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d997c7c688d95b61a6fdb251d907472338c49b30","msg":"JCBC-1248: Retry certain analytics error codes.\n\nMotivation\n----------\nThis change modifies the analytics executor in a way that, as per\nsdk-rfc, certain response error codes are being retried with the\npolicy defined.\n\nIf the errors don\u0027t go away after the retries, the error is propagated\ninto the errors structure and a response is returned.\n\nChange-Id: I909a7cb4f8b24b31eab72b05537900ece4bff633\nReviewed-on: http://review.couchbase.org/100041\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutorTest.java"],"date":1538050800000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"dd9db5afc03753a943fbfb89457e45c0589b744c","msg":"JCBC-1249: Make tests compile for Java 11\n\nOne stray import prohibited the UpdateDslTest from compiling,\nand since the javax.xml.bind has been removed it now needs\nto be added as a test dependency.\n\nChange-Id: Iad130d50e0f9d80a00848f1d7c69672105d31723\nReviewed-on: http://review.couchbase.org/100051\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml","src/test/java/com/couchbase/client/java/query/dsl/UpdateDslTest.java"],"date":1538061321000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bf4f177040e34c7453a4ff47b7cc4bdd7d9c700c","msg":"JCBC-1245: Better defaults for BucketSettings\n\nMotivation\n----------\nPreviously a user had to always specify a quota, but setting\nit to 100mb by default is a reasonable setting. Also, the\npassword is not required anymore with RBAC.\n\nTogether, these changes make it easier to get started with the\nBucket Settings and improve the out-of-the-box experience.\n\nTests have been added.\n\nChange-Id: I6e2baac19a741623569f659e323fd4690319fe4d\nReviewed-on: http://review.couchbase.org/99933\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/test/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManagerTest.java","src/test/java/com/couchbase/client/java/cluster/DefaultBucketSettingsTest.java"],"date":1537856141000,"numberOfModifiedFiles":4},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c6a95d3e6aabf0285084406342d47562312f9ed2","msg":"JCBC-1195: Support CompressionMode in BucketSettings\n\nMotivation\n----------\nThe server has added the capability to configure the compression\nmode used on the bucket, so the SDK\u0027s BucketSettings should allow\nto configure it as well.\n\nModifications\n-------------\nProper builder has been added, and some tests put in place to\nmake sure it doesn\u0027t break later on.\n\nChange-Id: Ic0e882e30ec66f8de90de51b77e29b2c35c43c4b\nReviewed-on: http://review.couchbase.org/99934\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/CompressionMode.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/test/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManagerTest.java","src/test/java/com/couchbase/client/java/cluster/DefaultBucketSettingsTest.java"],"date":1537857643000,"numberOfModifiedFiles":6},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9ead81c8a1d7eca5ebc406d322173b049904df89","msg":"JCBC-916: Add EjectionMethod to BucketSettings\n\nMotivation\n----------\nFor some time now the server allows to configure ejection/eviction\npolicies on a per-bucket basis, so this change makes sure it is\npossible to configure it on the BucketSettings builder.\n\nChange-Id: I0576a7a9f8e47d684b156e98393d3ee7ef096fc0\nReviewed-on: http://review.couchbase.org/99935\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/BucketSettings.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/DefaultBucketSettings.java","src/main/java/com/couchbase/client/java/cluster/EjectionMethod.java","src/test/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManagerTest.java","src/test/java/com/couchbase/client/java/cluster/DefaultBucketSettingsTest.java"],"date":1537859480000,"numberOfModifiedFiles":6},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"64d7e51f8446d8546297d11c6d6e802213a224c1","msg":"Mark Analytics interface as Committed\n\nChange-Id: I7d7eda1d44a49e39d25161fd4649052e6fa65746\nReviewed-on: http://review.couchbase.org/100196\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/analytics/AnalyticsMetrics.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQuery.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsQueryRow.java","src/main/java/com/couchbase/client/java/analytics/ParameterizedAnalyticsQuery.java","src/main/java/com/couchbase/client/java/analytics/SimpleAnalyticsQuery.java"],"date":1538501462000,"numberOfModifiedFiles":13},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"47ac44fa1aa2eb0271b4823fbe9f7d6a69818a95","msg":"Prepare 2.7.0 release\n\nChange-Id: I5e79cb623bfe7161a74a499c39f2611aafd2b310\nReviewed-on: http://review.couchbase.org/100201\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1538504241000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"68dd47c4c1a529312da716baa269f3790184c4a0","msg":"Start 2.7.1 Development\n\nChange-Id: I69af8c09c80427117ee4ea51e8d5fb7a68473f86\nReviewed-on: http://review.couchbase.org/100269\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1538644059000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a16348678d4dd2e89348e60927c28658c64d69a9","msg":"Make collections interface as committed\n\nThe interface was intended to be marked committed in 2.4.0 release, but\nhad remained uncommitted by overlook.\n\nChange-Id: I4c9f39850bdcf7fcf4aa0214470708ecb794b649\nReviewed-on: http://review.couchbase.org/99047\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseArrayList.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseArraySet.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseMap.java","src/main/java/com/couchbase/client/java/datastructures/collections/CouchbaseQueue.java","src/main/java/com/couchbase/client/java/datastructures/collections/iterators/JsonArrayDocumentIterator.java"],"date":1535649325000,"numberOfModifiedFiles":5},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"897d2f3fb6e0f55ce68e54b08138c17facd068c7","msg":"JVMCBC-581 Fix to be compatible with Jackson version update\n\nJackson dependency version 2.9.x has overloads for both DataInput and\nInputStream. Use InputStream specifically by casting to retain old behavior.\n\nChange-Id: I489e8b24cafd6fb9e0906d657dd496e0eaf22838\nReviewed-on: http://review.couchbase.org/101161\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/transcoder/TranscoderUtils.java"],"date":1540855482000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d0d7f345ef0caee443b08baff70a1c94c4f6d663","msg":"JCBC-1259: Expose AsyncCluster from Cluster\n\nMotivation\n----------\nThe Bucket API exposes the AsyncBucket through a call to async(),\nbut the Cluster API does not do the same. There are situation where\n(for example to grab diagnostics in an async context) this is\nuseful.\n\nModifications\n-------------\nCluster now exposes the async variant through the async() method,\nsimilar to Bucket and other likewise interfaces.\n\nResult\n------\nThe AsyncCluster can now be accessed through a Cluster reference.\n\nChange-Id: Id18d9c43c8983e2b7f733f716dc27aa55d7e6d87\nReviewed-on: http://review.couchbase.org/100690\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/DiagnosticsTest.java","src/main/java/com/couchbase/client/java/Cluster.java","src/main/java/com/couchbase/client/java/CouchbaseCluster.java"],"date":1539671782000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2830ec3453b8c3d1bd4841c5cdce876bdf9653e2","msg":"Remove stray Uncomitted markers for Analytics\n\nChange-Id: Iea781dc587f113d3aa0ff03eaf068976db87b9c0\nReviewed-on: http://review.couchbase.org/101365\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1541404131000,"numberOfModifiedFiles":2},{"authorName":"Graham Pople","authorEmail":"grahampople@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Graham Pople","committerEmail":"grahampople@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7e51f24409f741d7457a11e02bfccf765c93004c","msg":"JCBC-1253: Support subdoc expansion of macro\n\nMotivation\n----------\nAdding server-side expansion of xattrs macros such as \"${Mutation.CAS}\"\nThis is required for the multi-document atomicity project.\nAs this is advanced functionality that we may not want users to access,\nthe elements added to the API are marked private.\n\nModifications\n-------------\nAdded expandMacros fields to all required builders, and pass down a new\n0x10 flag to the server to indicate that macros should be expanded for\na particular field.\n\nResult\n------\nTested that ${Mutation.CAS} is replaced with the doc\u0027s CAS as expected.\n\nChange-Id: I0443578adbe57dae960389ddd9c7effce524ad15\nReviewed-on: http://review.couchbase.org/101059\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/subdoc/MutationSpec.java","src/main/java/com/couchbase/client/java/subdoc/SubdocOptionsBuilder.java","src/test/java/com/couchbase/client/java/subdoc/SubDocumentTest.java"],"date":1539187073000,"numberOfModifiedFiles":5},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4d19fd45ddea135532ff862caf20f9db95c8a009","msg":"JCBC-1255 Allow crypto transcoder to trancode docs with no encryption requirements\n\nAdd null checks for content and encryption info to not throw NPE for\ndocuments with null content or with no encryption requirements.\n\nChange-Id: I1709601cddf866aeafb942f3e7137c02933c527b\nReviewed-on: http://review.couchbase.org/100606\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/main/java/com/couchbase/client/java/transcoder/crypto/JsonCryptoTranscoder.java"],"date":1539390072000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"74fb55d4d6f695def8fa15ccd881a1bf67d1aacd","msg":"JCBC-1251 Add select distinct raw to dsl\n\nChange-Id: I1d1b508279d05177640a25fbddde1175f20d61dc\nReviewed-on: http://review.couchbase.org/100252\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/Select.java","src/main/java/com/couchbase/client/java/query/dsl/element/SelectElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultSelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/SelectType.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java"],"date":1538603351000,"numberOfModifiedFiles":6},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a214699b66ae9844e60c4aceacf6d6f6f279650e","msg":"Prepare 2.7.1 release\n\nChange-Id: Ie6bff4bf21eed5fae618553b657561361a403253\nReviewed-on: http://review.couchbase.org/101443\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1541530251000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"03f86ae83b30cee39de06af04310d2fb2e1c7271","msg":"Start 2.7.2 Development\n\nChange-Id: I9a008d35032ff9b662ccf6ca498ae509d94d5935\nReviewed-on: http://review.couchbase.org/101542\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1541688679000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"67cd46d6f8ba7dc25eebd70cebe6bd26bde4ed16","msg":"Bump to Java 1.7 as compat version\n\nChange-Id: I3531b36a07a2be4ba854ff7255c3ff402da21a9b\nReviewed-on: http://review.couchbase.org/101543\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1541689247000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"64d2af3c477ed9c0bfff62e4e30853aca1fd2b29","msg":"JCBC-1266: Allow to compile against Java 11\n\nMotivation\n----------\nTo make progress with newer java versions, we need to make sure the client\nbuilds and runs fine against those. A couple changes were required to do\nso.\n\nModifications\n-------------\nLike with core-io, the major trouble was javadoc. We had to get rid of the\npegdown doclet plugin and then javadoc started to throw a tantrum on certain\njavadocs, even with doclint off.\n\nThis changeset removes all those warnings and allows for a green build\nprocess.\n\nResult\n------\nthe java client now compiles against java 11\n\nChange-Id: I8b2b1e4a31d1fbb841cdbb123599d1cbd98b8fc5\nReviewed-on: http://review.couchbase.org/101587\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["docs/teaser.html","pom.xml","src/main/java/com/couchbase/client/java/bucket/AsyncBucketManager.java","src/main/java/com/couchbase/client/java/bucket/BucketManager.java","src/main/java/com/couchbase/client/java/cluster/api/AbstractClusterApiClient.java","src/main/java/com/couchbase/client/java/cluster/api/AsyncRestBuilder.java","src/main/java/com/couchbase/client/java/cluster/api/RestBuilder.java","src/main/java/com/couchbase/client/java/document/Document.java","src/main/java/com/couchbase/client/java/query/N1qlParams.java","src/main/java/com/couchbase/client/java/query/ParameterizedN1qlQuery.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/query/dsl/Expression.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryResult.java","src/main/java/com/couchbase/client/java/search/result/SearchQueryRow.java","src/main/java/com/couchbase/client/java/search/result/SearchStatus.java","src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java","src/main/java/com/couchbase/client/java/util/rawQuerying/AsyncRawQueryExecutor.java","src/main/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutor.java","src/main/java/com/couchbase/client/java/view/ViewQuery.java"],"date":1541752636000,"numberOfModifiedFiles":19},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"87abaef43819d7c32596a7d6316153de22b5d939","msg":"JCBC-1254: Experimental Analytics Ingest Utility\n\nMotivation\n----------\nSince the analytics service lacks the capability to ingest\nresult rows back into the KV layer, this utility class provides\nexactly this.\n\nNote that it is by design kept simple, since advanced use cases\ncan always be built from the primitives available.\n\nChange-Id: Ib5bad8eca23de85592863f6ff41ccf4524d5e431\nReviewed-on: http://review.couchbase.org/100546\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/util/AnalyticsIngester.java","src/test/java/com/couchbase/client/java/util/AnalyticsIngesterTest.java"],"date":1539330639000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT+01:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"8424282fb1d609d8f5df03341077def985c45c9b","msg":"Prepare java-client to run in CI under the mock.\n\nNote that this changeset touches a lot of files which do not work correctly\nunder the mock either because the code is too tied towards the actual cluster\nmanagement or the mock just plainly does not support it.\n\nWe still run lots of tests though, so I deemed its better to run those and\nignored the rest, which we can revisit test by test and rework to reenable\nif needed.\n\nChange-Id: I10bb980ccfbbf6d971961835f27664ffb496b4e5\nReviewed-on: http://review.couchbase.org/101905\nTested-by: Build Bot \u003cbuild@couchbase.com\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/BucketClosingTest.java","src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/CoreSendHookTest.java","src/integration/java/com/couchbase/client/java/DiagnosticsTest.java","src/integration/java/com/couchbase/client/java/EphemeralBucketTest.java","src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/integration/java/com/couchbase/client/java/FlushDisabledTest.java","src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/N1qlDmlTest.java","src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/integration/java/com/couchbase/client/java/SearchQueryTest.java","src/integration/java/com/couchbase/client/java/SpatialViewQueryTest.java","src/integration/java/com/couchbase/client/java/SubDocumentTest.java","src/integration/java/com/couchbase/client/java/SubdocumentExtendedAttributesTest.java","src/integration/java/com/couchbase/client/java/UserManagementTest.java","src/integration/java/com/couchbase/client/java/ViewQueryTest.java","src/integration/java/com/couchbase/client/java/auth/ClassicAuthenticatorTesst.java","src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/integration/java/com/couchbase/client/java/datastructures/DataStructuresTest.java","src/integration/java/com/couchbase/client/java/rbac/BucketAndClusterManagerUserTest.java","src/integration/java/com/couchbase/client/java/rbac/DataServiceUserTest.java","src/integration/java/com/couchbase/client/java/rbac/QueryServiceUserTest.java","src/integration/java/com/couchbase/client/java/transcoder/CustomTranscoderTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/integration/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutorTest.java"],"date":1542641776000,"numberOfModifiedFiles":30},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c3132fe75033da19e2789cde9a6845a502b6ccb3","msg":"Various fixes for ci\n\nChange-Id: Idfc3e11eb6fd73c25bac8651956039cb45bb84c5\nReviewed-on: http://review.couchbase.org/101930\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/auth/ClassicAuthenticatorTesst.java","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1542666043000,"numberOfModifiedFiles":3},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e1911466387727ad1161dfa3d9284a40b2973128","msg":"Fix ci failures\n\nTemporary failures have been happening intermittently in ci related to\nadhoc bucket, a previous commit added sleep for select bucket command\nfailures, this one polishes the previous commit and also does a health\ncheck.\nIgnored some management tests and big decimal tests which\nhas a different behavior across different jvms.\nIgnore tests when there are concurrent primary index creations on the adhoc\nbuckets which is not supported.\n\nChange-Id: I1242c227bc9f0d7f4b2c95af2e9683d44ed1cc41\nReviewed-on: http://review.couchbase.org/101968\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/CoreSendHookTest.java","src/integration/java/com/couchbase/client/java/EphemeralBucketTest.java","src/integration/java/com/couchbase/client/java/KeyValueTest.java","src/integration/java/com/couchbase/client/java/N1qlClusterLevelTest.java","src/integration/java/com/couchbase/client/java/N1qlDmlTest.java","src/integration/java/com/couchbase/client/java/N1qlPreparedTest.java","src/integration/java/com/couchbase/client/java/N1qlQueryTest.java","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/integration/java/com/couchbase/client/java/repository/RepositoryTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/integration/java/com/couchbase/client/java/util/TestProperties.java","src/integration/java/com/couchbase/client/java/util/rawQuerying/RawQueryExecutorTest.java","src/test/java/com/couchbase/client/java/document/json/JsonArrayTest.java","src/test/java/com/couchbase/client/java/document/json/JsonObjectTest.java"],"date":1542759141000,"numberOfModifiedFiles":15},{"authorName":"Artem Prigoda","authorEmail":"arteamon@gmail.com","authorTimeZone":"GMT+02:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"0e3e4234b9d2adba023a1233236dc6472b48e539","msg":"JCBC-1276 Allow to use hostnames and dont do premature reverse lookups\n\nThe SDK should be able to bootstrap the list of the seed nodes not only\nfrom IP addresses, but also from DNS names. For example, if a Couchbase\ncluster is managed by Kubernetes, its nodes don\u0027t have fixed IP\naddresses: they are exposed by hostnames. Hence, we want to make\nsure that the SDK will be able to pick up any changes of the IP address\nassociated with the hostname. Currently, it\u0027s not possible, because SDK\nprematurely resolves DNS names to IP addresses during its startup and\nseeds the client with IP addresses. As a result, the SDK is not resilent\nto changes in the server, e.g. we can\u0027t restart it without restaring all\nclients.\n\nChange-Id: I7ce8825db5e565def1019316e7e7976752ae074e\nReviewed-on: http://review.couchbase.org/102410\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1540557663000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"db9b3532a17aba1d95ec2bb4f642e6172daf797b","msg":"JCBC-1258 Add support for analytics deferred queries\n\nAdds experimental support for Analytics deferred queries as defined in\nSDK-RFC 45.\n\nChanges to exisiting interfaces\n-------------------------------\n    - Add analytics param for deferred query execution\n    - Add bucket methods import and export for deferred handles\n\nChange-Id: I74fbaebca23c550d01273360dee64d1a5d97bbc2\nReviewed-on: http://review.couchbase.org/100869\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/AnalyticsDeferredQueryTest.java","src/main/java/com/couchbase/client/java/Bucket.java","src/main/java/com/couchbase/client/java/CouchbaseBucket.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsDeferredResultHandle.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsParams.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutor.java","src/main/java/com/couchbase/client/java/analytics/AnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsDeferredResultHandle.java","src/main/java/com/couchbase/client/java/analytics/AsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsDeferredResultHandle.java","src/main/java/com/couchbase/client/java/analytics/DefaultAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsDeferredResultHandle.java","src/main/java/com/couchbase/client/java/analytics/DefaultAsyncAnalyticsQueryResult.java","src/main/java/com/couchbase/client/java/error/QueryExecutionException.java","src/test/java/com/couchbase/client/java/analytics/AnalyticsQueryExecutorTest.java"],"date":1539992974000,"numberOfModifiedFiles":15},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"37dbcb94cc056b7803d00ae7cc373d7041289cbc","msg":"JCBC-1171 Allow to add hints for hash and nested loop joins in Query dsl\n\nChange-Id: Ib651726f38514adcc2fef150e41265ad81255299\nReviewed-on: http://review.couchbase.org/102501\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/dsl/element/NestedLoopJoinHintElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/DefaultJoinPath.java","src/main/java/com/couchbase/client/java/query/dsl/path/HashJoinHintElement.java","src/main/java/com/couchbase/client/java/query/dsl/path/HashSide.java","src/main/java/com/couchbase/client/java/query/dsl/path/JoinPath.java","src/test/java/com/couchbase/client/java/query/dsl/SelectDslSmokeTest.java"],"date":1544053276000,"numberOfModifiedFiles":6},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7fc04f00a00deecb1b88e031e6a504996fb1949f","msg":"Prepare 2.7.2 release\n\nChange-Id: I43bbaa8b6059d1931690c906d2b45457aa6f25da\nReviewed-on: http://review.couchbase.org/102503\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1544053710000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9f87c9ee94117f1abc235889e1a9566c08fa242a","msg":"Start 2.7.3 Development\n\nChange-Id: Idc57bd0193336bd5207f7044c4a3eda3f32edcc1\nReviewed-on: http://review.couchbase.org/104188\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1545290158000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"2be43e1b2970393de6123320a6982ac9e1016387","msg":"JCBC-1287: Feed query statement into core for tracing tag\n\nMotivation\n----------\ncore-io added support for adding a standard opentracing tag into\nthe span for n1ql queries, so this changeset follows suit to feed\nthe raw statement into it.\n\nModifications\n-------------\nThe executor now passes the statement in string form down to core-io\nwhich picks it up and adds it as a span tag if needed.\n\nChange-Id: Ibbdfa23178b9680e7dbda468548cf063257ce623\nReviewed-on: http://review.couchbase.org/104189\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1548751214000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"1da2c2dc20dec595ef6f4abd51dbc31b53a5e826","msg":"JCBC-1239 Optimize queue pop to use subdocument get for value\n\nMotivation\n----------\nThe bucket level queue data structure uses full document get for\nretrieving the front of the queue. Using a subdocument operation is much\nmore efficient.\n\nChanges\n-------\nUse the subdocument get for the element. The existing tests cover this\ncase and pass.\n\nChange-Id: Id5198557eb4d715d53b34aef5281dd8829aa4589\nReviewed-on: http://review.couchbase.org/99046\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1535648543000,"numberOfModifiedFiles":1},{"authorName":"Graham Pople","authorEmail":"grahampople@gmail.com","authorTimeZone":"GMT+00:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c229b2c5e3fb3b27d79c17382f80a9ef6b17c770","msg":"JCBC-1288: Dependency on proxyPort parameter that has been removed in Mad Hatter\n\nMotivation\n----------\nThe proxyPort parameter has been removed from the REST endpoint\n/pools/defaults/buckets for Mad Hatter.  The Java client currently\nrelies on this being present.\n\nModifications\n-------------\nIf the proxyPort parameter is not available then default it to 0, which\nis what it returns on my default single-node install of 6.0.\n\nChange-Id: I73b60b6ee68148e2cc9412fcc742625b057df008\nReviewed-on: http://review.couchbase.org/104249\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1548844918000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"c7274b7dbe3ae9754eda76c729fa8085b68a3e8b","msg":"Code gardening and fix to existing behavior for JCBC-1175\n\nWhen multiple threads are using queue remove, dont use set the result\nvalue from subdoc fetch for path not found so only one thread succeeds, this\nwas the existing behavior, full doc to sub doc altered this, so\nreverting back to old behavior.\n\nChange-Id: I06340005b30c5c6277fe3e4591b65ddb8cadbbe5\nReviewed-on: http://review.couchbase.org/104351\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncBucket.java"],"date":1548975057000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"3cd7e0d2d16ff09da8c79c628cb7569af1a16a81","msg":"JCBC-1156 Add API doc to initialize and override counter values\n\nChange-Id: Iaffe9ef5433cf927579a730c6e110d12aad8f3d3\nReviewed-on: http://review.couchbase.org/104348\nReviewed-by: Matt Ingenthron \u003cingenthr@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/AsyncBucket.java","src/main/java/com/couchbase/client/java/Bucket.java"],"date":1548972556000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-07:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4db75ded157c284d3430672ffe3fdb656a47bf39","msg":"JCBC-1242 Adding OSGI manifest headers\n\nInitial support for including OSGi manifest headers.\n\nChange-Id: I957e2287d394ee45b6e7589cf3d6c29f72eb007f\nReviewed-on: http://review.couchbase.org/99967\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1537921137000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"d48d5d6ea0b574be5fc63a487f4806d28999cada","msg":"Prepare release 2.7.3\n\nChange-Id: I291caf4b9696e984fe66b27d2ae5babbe2081389\nReviewed-on: http://review.couchbase.org/104536\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1549406389000,"numberOfModifiedFiles":2},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"83928592d78eccbcdaa09e7f9535f3f10b540800","msg":"Start 2.7.4 development\n\nChange-Id: I565440d9125d78936774250c1c5a46f0dbdad303\nReviewed-on: http://review.couchbase.org/105357\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1551126165000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"588dde8ec9fbf101e25ada0755413a1995a10d66","msg":"JCBC-1292 Fix OSGi to export only java-client package\n\nExporting com.couchbase.client.* exports all the core dependencies as\nwell and including those classes, creating duplicate classes. This fix\nensures that only java-client package classes are exported.\n\nChange-Id: I51937bfee80ef1f4596768779ce6f81295c811ac\nReviewed-on: http://review.couchbase.org/104911\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1550094432000,"numberOfModifiedFiles":1},{"authorName":"Subhashni Balakrishnan","authorEmail":"b.subhashni@gmail.com","authorTimeZone":"GMT-08:00","committerName":"Subhashni Balakrishnan","committerEmail":"b.subhashni@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e759d326b7fce9133127858e477d839ce099c3fd","msg":"Prepare 2.7.4 release\n\nChange-Id: I8ea7085e4eb257832e974435fff169fa1072f7ad\nReviewed-on: http://review.couchbase.org/105364\nReviewed-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e\nTested-by: Subhashni Balakrishnan \u003cb.subhashni@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1551131199000,"numberOfModifiedFiles":2},{"authorName":"Matt Carabine","authorEmail":"matt.carabine@hotmail.co.uk","authorTimeZone":"GMT-07:00","committerName":"Graham Pople","committerEmail":"grahampople@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4ff2194376e47f617744b669ee23b5265b892546","msg":"JCBC-1323 - Handle empty FTS error block\n\nMotivation\n----------\nSometimes the Search service can return a response with a status\nblock similar to the following:\n\n```\n{\n  \"total\": 6,\n  \"failed\": 0,\n  \"successful\": 6,\n  \"errors\": {}\n}\n```\n\nThe Java SDK assumes that if the \"errors\" field is present then there\nmust be FTS errors to propagate to the application, when in fact in\nthis specific instance there are actually no errors.\nThe result of this is that users applications error out when there\nhaven\u0027t been any issues.\n\nWhile this is a server-side inconsistency (covered in MB-33830), the\nJava SDK should be more defensive to this situation.\n\nModifications\n-------------\nThis commit adds a check to see if the \"errors\" field is empty before\ncreating the error observable.\n\nIf the \"errors\" block is empty then it will now return an empty\nobservable instead of an error observable.\n\nResult\n------\nNow the SDK will not throw an exception if it receives a response\ncontaining an empty error block.\n\nChange-Id: I8c2bb691178280d729fe322abf7c527522fedb7a\nReviewed-on: http://review.couchbase.org/107927\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/search/result/impl/DefaultAsyncSearchQueryResult.java"],"date":1555466655000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f36a0ee0c66923bdde47838ca543e50cbaa99e14","msg":"Start 2.7.5-SNAPSHOT\n\nChange-Id: Ib53f49c5eadcb7f8a7f2e78e8f4d52e13b716be6\nReviewed-on: http://review.couchbase.org/108442\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["pom.xml"],"date":1556627567000,"numberOfModifiedFiles":1},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"David Nault","committerEmail":"david.nault@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f9536021208d0fffbd36e7ea0a9e9c899b96830b","msg":"JCBC-1333 Reflection triggers NoClassDefFoundError for CryptoManager\n\nModifications\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nInvert the dependency relationship between the client and the encryption\nlibrary. The classes that define the API are now in the client.\nFor now this means they will be duplicated by the encryption library.\nIn the future we can release a new version of the encryption library\ncontaining only the provider and keystore implementations.\n\nChange-Id: I91264e365e1849ae2ebd730b5914d588e3e158ad\nReviewed-on: http://review.couchbase.org/108467\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":["pom.xml","src/main/java/com/couchbase/client/encryption/CryptoManager.java","src/main/java/com/couchbase/client/encryption/CryptoProvider.java","src/main/java/com/couchbase/client/encryption/KeyStoreProvider.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderAliasNullException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderDecryptFailedException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderEncryptFailedException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderKeySizeException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderMissingPrivateKeyException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderMissingPublicKeyException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderMissingSigningKeyException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderNotFoundException.java","src/main/java/com/couchbase/client/encryption/errors/CryptoProviderSigningFailedException.java"],"date":1556641996000,"numberOfModifiedFiles":13},{"authorName":"David Nault","authorEmail":"david.nault@couchbase.com","authorTimeZone":"GMT-07:00","committerName":"David Nault","committerEmail":"david.nault@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7de0e35c719bd61a5caf99dd698f4a3c9e1f0363","msg":"Add script for running integration tests under CI\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe \"runtest\" Python script is used by Jenkins to set up the\nintegration test environment and run the tests. Previously it was\nan external gist on a personal developer account; it\u0027s more at home\nhere in the source tree.\n\nModifications\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nAdd the script under `src/integration/bin`.\n\nUpdate .gitignore to not ignore \"bin\" directories... or Ivy jars, which\nprobably haven\u0027t been used in many years.\n\nChange-Id: Iccf697c285ab1b806a2d257beaa786a2ebe513b6\nReviewed-on: http://review.couchbase.org/109214\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: David Nault \u003cdavid.nault@couchbase.com\u003e","modifiedFiles":[".gitignore","src/integration/bin/runtest.py"],"date":1557950925000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael@nitschinger.at","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9a3085f3732ed607c52d4402c46afe81762d8ed0","msg":"Prepare 2.7.5 Release\n\nChange-Id: Idceab5c16650e50db694777a8fe0eddf9a32bbf1\nReviewed-on: http://review.couchbase.org/109322\nReviewed-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e\nTested-by: Michael Nitschinger \u003cmichael@nitschinger.at\u003e","modifiedFiles":["README.md","pom.xml"],"date":1558092739000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9c95dedee59eebbaaa68fca0f70d719e88dbc996","msg":"Prepare 2.7.6 Release\n\nChange-Id: I1c4e3c1c174435d44c6fa0f31777b6bfdcc22c9e\nReviewed-on: http://review.couchbase.org/109437\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1558437266000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a2e3892cfe5f2c3c918657ddeef382d0d4b54879","msg":"Start 2.7.7 Development\n\nChange-Id: I51def29e5981afdd88064c8096bc9d925e483e30\nReviewed-on: http://review.couchbase.org/110036\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["pom.xml"],"date":1559555558000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5269b8f459103cb6011a7e7780c7ab4f53cec8bc","msg":"Fix compilation for core-io changes\n\nChange-Id: I832ba80e5cf4ddf1e99970c7b0c196a2c6421b84\nReviewed-on: http://review.couchbase.org/110038\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java","src/main/java/com/couchbase/client/java/util/NodeLocatorHelper.java"],"date":1559556084000,"numberOfModifiedFiles":3},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"ede8a9286e29f5bedb5e6fc25df0cd266954110b","msg":"Prepare 2.7.7 Release\n\nChange-Id: Ib6863e50b40600584fa376d8c9b37a1f64d30326\nReviewed-on: http://review.couchbase.org/110311\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1559828874000,"numberOfModifiedFiles":2},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"a56a1828a4cb736e9d7b636d716e9378805fcfd7","msg":"Eliminate ram-quota and storage-mode flags\n\nThis is just an experiment - but it matches successful usage I\u0027ve\nseen in the go integration tests.  Figure it is a place to start\ngiven that our tests die (with timeouts) at different points in\nthe tests.  So - seems like it must be something with how we\nprovision the integration test cluster.\n\nChange-Id: I34bf037dda4683e9ea0a92c6aaee254f3026b063\nReviewed-on: http://review.couchbase.org/111492\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562078383000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e2b35669bc40d78ebe776640ce834aee0ac65a18","msg":"JCBC-1366 CouchbaseMock query ping times out\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe DiagnosticTests.shouldRunPing fails consistently when mock is enabled.\nSince jenkins runs with the mock, this needs to be fixed.  JVMCBC-687 was\nfixed, which corrected the behaviour against the real server, however our\nmock still has the issue.  Lets first work around this by not pinging the\nmock\u0027s Query service.  Later, we can fix the mock (and un-do this change).\nAlso worth examining the api\u0027s logic here - we get a response back, just\nnot what we expect.  But the api waits till the timeout occurs before\nreturning as a timeout.  Perhaps we can do something else?\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe test just avoids the bug in the CouchbaseMock for now, by specifying\nthe specific services to ping, when the mock is enabled.\n\nChange-Id: Ia4b49348a8962b406b44127a71b3e303f257a967\nReviewed-on: http://review.couchbase.org/111512\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/bin/runtest.py","src/integration/java/com/couchbase/client/java/DiagnosticsTest.java","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java","src/test/resources/mock.properties"],"date":1562099065000,"numberOfModifiedFiles":5},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30030d1eaf304a430a0b3d413e7b98bc4ca47793","msg":"JCBC-1366 CouchbaseMock query ping times out\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe previous fix for this issue didn\u0027t really fix the -DuseMock\nnot being honored properly.  Seems it still wasn\u0027t, and this needs\nto be addressed as part of that fix\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nWe need the pom to properly handle test resources, and the filtering\nfor them.  Also, we needed a small change - the original leading backslash - to\nproperly load the properties file in the first place.\n\nChange-Id: I8cf21824b0d4a5f8b369ca67bcf44a1fb62c87fb\nReviewed-on: http://review.couchbase.org/111755\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["pom.xml","src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1562692043000,"numberOfModifiedFiles":2},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"552f94094098f08efc737b4f993724f32f429fb0","msg":"JCBC-1373 Fix integration tests\n\nSpecifically on Jenkins.  This tweaks the runtest.py script to match\nthe recent changes in core.\n\nChange-Id: I46fbf2e10c426f6306806c548b2e8a537a495d15\nReviewed-on: http://review.couchbase.org/111768\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562711250000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"30e18fc60230c967abf8f86e660f67b41dcf40d0","msg":"JCBC-1373 Fix integration tests\n\nThe jenkins ones in particular, they run fine locally.  This tweaks\nthe python script a bit, in hopes of correcting the issues with core\ntests.\n\nChange-Id: Iaaffe68abff6cdcda3645871dfbbf088809d9353\nReviewed-on: http://review.couchbase.org/111819\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562785103000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"407f169a694a34eec1b476a3d432752aa892aab1","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nLets get the integration tests on jenkins passing (like they do locally)\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nCorrect the path for the core integration test properties.\n\nChange-Id: Icd44f4aca24fb3ba103900f8063c0e7d9581ffd2\nReviewed-on: http://review.couchbase.org/111824\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562791074000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7f479b590304d91465d02b938ee879820534c808","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nLets get the integration tests on jenkins passing.  But of course\nthey need to pass locally, and in fact 3 tests were not, when\nrun against a live server.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nFor now, lets _temporarily_ ignore the 3 tests.  Then, after we work\nthrough other issues in the Jenkins tests, and it passes, we can revisit\nthese tests and fix them properly.\n\nChange-Id: I10d80d48cb76620080156303d512756c2a54240e\nReviewed-on: http://review.couchbase.org/111869\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/CoreSendHookTest.java"],"date":1562858356000,"numberOfModifiedFiles":2},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7b70de2ea9d63e3c480b3c3934a50881c632817d","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nJenkins _seems_ to hit a spot where perhaps the cluster goes down, and\nit also _seems_ that this happens after the BucketManagerIndexManagementTests.\nThere are warnings about calling authorize repeatedly on the same cluster, so\nthose are easy enough to get rid of.  Lets see how this effects Jenkins.\n\nAlso, when runtest.py had a --user flag that isn\u0027t used (since the same tests\nrun fine locally without that user).  So I removed that too.\n\nChange-Id: I54bc2b658076928e796fb5d5d72dbbf8956060d7\nReviewed-on: http://review.couchbase.org/111878\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java"],"date":1562876435000,"numberOfModifiedFiles":2},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bc78936234ce32d7667860f99e8ab7a9c3ed95c4","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nWe will ignore the BucketManagerIndexManagementTests just temporarily.\nIt appears the cluster we spin up experiences issues (maybe crashes) after\nthis test is run.  To verify,  we can ignore it for now.  Once we\nfigure out if it does/doesn\u0027t actually cause the issue, then we can\nre-enable this test.\n\nChange-Id: Iae7b37c9b9c7392ed3d530a1049b5e70fa7ada68\nReviewed-on: http://review.couchbase.org/111918\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java"],"date":1562947002000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"360157c3817e2ccdda5bff0441bde256ba5dd405","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nRe-introduce cluster\u0027s ram quota and storage mode.  This should deal\nwith the remaining issues with our Jenkins job.  In fact it could also\nbe why the BucketManager tests were failing, but one thing at a time.\n\nChange-Id: I9f0066370e1eb373320261c2ae79a7ea1625181c\nReviewed-on: http://review.couchbase.org/111920\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562952970000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"5e4f7a37cc952fb9a6fa399017e5d90001a8a0d5","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nEliminate just the ram-quota when we spin up cluster, in hopes of\nfixing remaining test issue.\n\nChange-Id: I7fffa971904221995b9a182f56e5d5e9f4e9aed0\nReviewed-on: http://review.couchbase.org/111925\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1562957616000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"838a200111c744f09d2d6db0ed3e06a47bc5834c","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe tests fail, typically, trying to open a bucket at the beginning\nof a test.  But when I look, that bucket exists, and all the services\nare ok.  So - rather that reuse the cached bucket, lets be sure when\nwe call openBucket we really reopen it.\n\nAlso - the ad_hoc buckets were being named 2 times, which makes very\nlong bucket names and is just sorta confusing to look at.  Easy enough\nto stop that.\n\nChange-Id: I6eaa96a719b41fd3a909dc69a1ecdf15617dacc2\nReviewed-on: http://review.couchbase.org/112108\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1563390828000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"cb9380c4d3ca86b88eb3542e463c9c1ffcca313e","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nSince buckets really don\u0027t go away immediately after the call to destroy\nthem, we can sometimes (on resource constrained test environments) run\ninto situations where a bucket cannot be created during a test.  An arbitrary\n5 second wait before a single retry should be enough to prevent this in\nour Jenkins tests.\n\nAlso CouchbaseTestContext creates environments, and then never calls shutdown\non that environment.  Lets call shutdown.  In the rare case where we created\nthe environment outside the context, _and_ properly shut it down, this will\nonly call shutdown a second time which is fine.  Note that this will not bring\nthe number of couchbase environments to 0 at the end of the integration tests, but\ndoes lower the count.  A future commit will fix the various tests that have other\nissues which result in leaked environments.\n\nChange-Id: I769efab6d30a91ab31519cacfacb463609a764bb\nReviewed-on: http://review.couchbase.org/112166\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/util/CouchbaseTestContext.java"],"date":1563466991000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"410ba1ba7c43988476ef27956625ffacad55ff09","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nOur runtest.py really needs to set a higher server memory quota than\nthe default.  Lets re-add this.\n\nChange-Id: I78c34cbbdb79fa83ac4b8bfeebbac131d8820066\nReviewed-on: http://review.couchbase.org/112175\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1563479900000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"bd67bb593556cc50d33f730b5fa7dfb29e6e877e","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThe cbdyncluster setup call doesn\u0027t actually seem to do it, so lets\ninstead just change the memoryQuota after we create the node using\nthe rest api.\n\nChange-Id: I3b81b08732b94279e5b20f81d3d1e003e726c0c5\nReviewed-on: http://review.couchbase.org/112177\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1563482016000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"eb4ae31ad6c29f76fcb9ade61a5ff472c34aa065","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nClusterDependentTest was fixed, however a number of tests that\ndidn\u0027t use it were not shutting down environments, which lead to\na considerable number of warnings when running integration tests.\nWorth eliminating, so this attempt to do exactly that.  Will do\nsame for the core tests shortly.\n\nChange-Id: Ic51c91282f6639b3830a4b0620e23bcf409e62d8\nReviewed-on: http://review.couchbase.org/112181\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/ClusterManagerTest.java","src/integration/java/com/couchbase/client/java/ConnectionTest.java","src/integration/java/com/couchbase/client/java/FieldLevelEncryptionKeyValueTest.java","src/integration/java/com/couchbase/client/java/SubDocumentDocumentFlagsTests.java","src/integration/java/com/couchbase/client/java/auth/PasswordAuthenticatorTest.java","src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java","src/integration/java/com/couchbase/client/java/rbac/QueryServiceUserTest.java","src/test/java/com/couchbase/client/java/behavior/backpressure/BackpressureTests.java","src/test/java/com/couchbase/client/java/cluster/api/AsyncClusterApiClientTest.java","src/test/java/com/couchbase/client/java/cluster/api/ClusterApiClientTest.java","src/test/java/com/couchbase/client/java/env/DefaultCouchbaseEnvironmentTest.java","src/test/java/com/couchbase/client/java/view/ViewQueryTest.java"],"date":1563491795000,"numberOfModifiedFiles":12},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"e1d00f4e72155fef5900696e453bd43349d135f6","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nSkip the BucketManagerIndexManagementTests for now, when running the\nintegration tests in Jenkins.\n\nChange-Id: If84a385f362f02fa75014c59c6c46cd33abf1b69\nReviewed-on: http://review.couchbase.org/112367\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/java/com/couchbase/client/java/bucket/BucketManagerIndexManagementTests.java"],"date":1563904689000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"9edc469653afd3d53016cfee70ae5fb841fe1e39","msg":"Start 2.7.8 development\n\nChange-Id: Icc3289bf70eb292693727e24457db6a372f24797\nReviewed-on: http://review.couchbase.org/112442\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1564012594000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"05b4a871fa18b8a06c31aa739174efd542f5505d","msg":"Start 2.7.8 Development, part 2\n\nChange-Id: Ieccc4a88ae507cc596803930e0aa7c3300cde8d1\nReviewed-on: http://review.couchbase.org/112514\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1564092502000,"numberOfModifiedFiles":1},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4f8836da3e0a271ffc601bcba19844f5349effce","msg":"JCBC-1373 Fix integration tests\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nGetting Jenkins integration tests to pass, like they do when run\nlocally.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThis will rerun a test if it fails, when executing the integration\ntests on Jenkins.  There are a small number of tests which are somewhat\nsensitive to timing, and fail maybe 1 in n times on jenkins.  This is\na simple workaround, perhaps.\n\nChange-Id: I331cfc6bfb392bd3c8c60eef2e320013f0fb5693\nReviewed-on: http://review.couchbase.org/112556\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["src/integration/bin/runtest.py"],"date":1564175273000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"949bef0f8b0f45777055c9dfe8523da1e63f4632","msg":"JCBC-1381: Properly close trace span of subdoc_mutate ops.\n\nMotivation\n----------\nThe single subdoc_mutate ops (which include ops like insert and upsert)\nopened a span properly, but never closed them when the response arrived.\n\nAs a result, they would never show up in the tracer and so are also not\nincluded in the slowlog threshold logging tracer.\n\nModifications\n-------------\nSimilar to the other ops already in place, the regular subdoc_mutate\nsubdoc command now correctly closes the span, making it appear in the\nthreshold logging tracer if needed.\n\nChange-Id: I49efb8998c5e8016b719823ea321ba6fd756c951\nReviewed-on: http://review.couchbase.org/112569\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/subdoc/AsyncMutateInBuilder.java"],"date":1564379170000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"53213fe6b03c521a3ea30966ef5662845d1771b2","msg":"JVMCBC-714: Do not resolve prelocated requests\n\nChange-Id: Ie181690eb1fe0a08ca2ee4b3d9f51d130aef894b\nReviewed-on: http://review.couchbase.org/112565\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/query/core/N1qlQueryExecutor.java"],"date":1564318046000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"94d7ae9917c82bc5251b7e54daa89dc9a6b84bce","msg":"JVMCBC-713: Do not try to resolve in ConnectionString\n\nMotivation\n----------\nNot only do we need to avoid resolving early in the core, also for\nthe actual bootstrap list nodes we need to make sure that they are\nnot being resolved. With this change the hostname or ips are passed\nthrough 1:1 as they are provided, making sure that the seed host\nlist is deterministic and can be debugged properly in the logs.\n\nChange-Id: I5bf004867238cf10d44f17d99a501d401f8b5516\nReviewed-on: http://review.couchbase.org/112562\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/CouchbaseAsyncCluster.java","src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java"],"date":1564310931000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"590a16823ae46a0bad3f4f4bdb6f3319e76aefe7","msg":"Prepare 2.7.8 Release\n\nChange-Id: Ia53de792770350f17d41c7346e6b81934a69b9a2\nReviewed-on: http://review.couchbase.org/112897\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1564988198000,"numberOfModifiedFiles":2},{"authorName":"David Kelly","authorEmail":"davidmichaelkelly@gmail.com","authorTimeZone":"GMT-07:00","committerName":"David Kelly","committerEmail":"davidmichaelkelly@gmail.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"4b5d097eb620147088f19e521f65b3032911b4cf","msg":"SDKQE-289 Deploy Snapshots\n\nMotivation\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nIntegration tests, when successful, should publish snapshots to\nmaven central.\n\nModification\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nThis really already happens.  However, they are not signed.  The\npom needed a bit of modification to sign - once this is in Jenkins\nneeds the appropriate settings and we will be signing.\n\nChange-Id: Iccf50245f5bbfffbf2580aa0533214976e4b00b9\nReviewed-on: http://review.couchbase.org/112815\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nTested-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["pom.xml"],"date":1564692217000,"numberOfModifiedFiles":1},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"18599a39ce590fe6f43fdb3bff08b8f2b46ed213","msg":"JCBC-1387: Add support for ephemeral ejection methods.\n\nMotivation\n----------\nThis change adds support for the NRU and None ejection methods so it\ncan create ephemeral buckets properly.\n\nChange-Id: Idd9ce91935e77dab254cd27d5a22c62ac6ff0081\nReviewed-on: http://review.couchbase.org/112920\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e\nReviewed-by: David Nault \u003cdavid.nault@couchbase.com\u003e\nReviewed-by: Graham Pople \u003cgrahampople@gmail.com\u003e","modifiedFiles":["src/main/java/com/couchbase/client/java/cluster/DefaultAsyncClusterManager.java","src/main/java/com/couchbase/client/java/cluster/EjectionMethod.java"],"date":1565017556000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+02:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"7f60313a3984abc29ffa36a8eaff0d03934ca9e9","msg":"Prepare 2.7.9 Release\n\nChange-Id: I6a6149014f66895e83b5546e162ac294bb6b8d05\nReviewed-on: http://review.couchbase.org/112970\nReviewed-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1565101486000,"numberOfModifiedFiles":2},{"authorName":"Michael Nitschinger","authorEmail":"michael@nitschinger.at","authorTimeZone":"GMT+01:00","committerName":"Michael Nitschinger","committerEmail":"michael.nitschinger@couchbase.com","committerTimeZone":"GMT+00:00","numberOfBranches":0,"hash":"f86639e3a116e8142ef7774e5efb3cb6c075e6da","msg":"Prepare 2.7.10 Release\n\nChange-Id: Ic480754c02719e533c02c68524895bb89617a10a\nReviewed-on: http://review.couchbase.org/117579\nTested-by: Michael Nitschinger \u003cmichael.nitschinger@couchbase.com\u003e\nReviewed-by: David Kelly \u003cdavidmichaelkelly@gmail.com\u003e","modifiedFiles":["README.md","pom.xml"],"date":1573226198000,"numberOfModifiedFiles":2}]}